;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 4.0.2
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(uiop/package:define-package :gtk4/swig/gtkwidget
  (:use :cl :cffi :gtk4/swig-wrap)
  (:nicknames :gtk4/gtkwidget)
  (:export
   ))
(in-package :gtk4/swig/gtkwidget)

(define-foreign-library libgtk4
  (:win32 "libgtk-4-1")
  (t (:default "libgtk-4")))

(unless (foreign-library-loaded-p 'libgtk4)
  (use-foreign-library libgtk4))

(cffi:defcenum #.(swig-lispify "GUserDirectory" 'enumname)
	#.(swig-lispify "G_USER_DIRECTORY_DESKTOP" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_DOCUMENTS" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_DOWNLOAD" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_MUSIC" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_PICTURES" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_PUBLIC_SHARE" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_TEMPLATES" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_VIDEOS" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_N_DIRECTORIES" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUserDirectory" 'enumname))

(cffi:defcenum #.(swig-lispify "GFormatSizeFlags" 'enumname)
	(#.(swig-lispify "G_FORMAT_SIZE_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_FORMAT_SIZE_LONG_FORMAT" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_FORMAT_SIZE_IEC_UNITS" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_FORMAT_SIZE_BITS" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GFormatSizeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GThreadError" 'enumname)
	#.(swig-lispify "G_THREAD_ERROR_AGAIN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GThreadError" 'enumname))

(cffi:defcenum #.(swig-lispify "GOnceStatus" 'enumname)
	#.(swig-lispify "G_ONCE_STATUS_NOTCALLED" 'enumvalue :keyword)
	#.(swig-lispify "G_ONCE_STATUS_PROGRESS" 'enumvalue :keyword)
	#.(swig-lispify "G_ONCE_STATUS_READY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GOnceStatus" 'enumname))

(defanonenum 
	(#.(swig-lispify "SI_ASYNCNL" 'enumvalue) #.-60)
	(#.(swig-lispify "SI_DETHREAD" 'enumvalue) #.-7)
	#.(swig-lispify "SI_TKILL" 'enumvalue)
	#.(swig-lispify "SI_SIGIO" 'enumvalue)
	#.(swig-lispify "SI_ASYNCIO" 'enumvalue)
	#.(swig-lispify "SI_MESGQ" 'enumvalue)
	#.(swig-lispify "SI_TIMER" 'enumvalue)
	#.(swig-lispify "SI_QUEUE" 'enumvalue)
	#.(swig-lispify "SI_USER" 'enumvalue)
	(#.(swig-lispify "SI_KERNEL" 'enumvalue) #.#x80))

(cl:export '#.(swig-lispify "SI_ASYNCNL" 'enumvalue))

(cl:export '#.(swig-lispify "SI_DETHREAD" 'enumvalue))

(cl:export '#.(swig-lispify "SI_TKILL" 'enumvalue))

(cl:export '#.(swig-lispify "SI_SIGIO" 'enumvalue))

(cl:export '#.(swig-lispify "SI_ASYNCIO" 'enumvalue))

(cl:export '#.(swig-lispify "SI_MESGQ" 'enumvalue))

(cl:export '#.(swig-lispify "SI_TIMER" 'enumvalue))

(cl:export '#.(swig-lispify "SI_QUEUE" 'enumvalue))

(cl:export '#.(swig-lispify "SI_USER" 'enumvalue))

(cl:export '#.(swig-lispify "SI_KERNEL" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "ILL_ILLOPC" 'enumvalue) #.1)
	#.(swig-lispify "ILL_ILLOPN" 'enumvalue)
	#.(swig-lispify "ILL_ILLADR" 'enumvalue)
	#.(swig-lispify "ILL_ILLTRP" 'enumvalue)
	#.(swig-lispify "ILL_PRVOPC" 'enumvalue)
	#.(swig-lispify "ILL_PRVREG" 'enumvalue)
	#.(swig-lispify "ILL_COPROC" 'enumvalue)
	#.(swig-lispify "ILL_BADSTK" 'enumvalue)
	#.(swig-lispify "ILL_BADIADDR" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_ILLOPC" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_ILLOPN" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_ILLADR" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_ILLTRP" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_PRVOPC" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_PRVREG" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_COPROC" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_BADSTK" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_BADIADDR" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "FPE_INTDIV" 'enumvalue) #.1)
	#.(swig-lispify "FPE_INTOVF" 'enumvalue)
	#.(swig-lispify "FPE_FLTDIV" 'enumvalue)
	#.(swig-lispify "FPE_FLTOVF" 'enumvalue)
	#.(swig-lispify "FPE_FLTUND" 'enumvalue)
	#.(swig-lispify "FPE_FLTRES" 'enumvalue)
	#.(swig-lispify "FPE_FLTINV" 'enumvalue)
	#.(swig-lispify "FPE_FLTSUB" 'enumvalue)
	(#.(swig-lispify "FPE_FLTUNK" 'enumvalue) #.14)
	#.(swig-lispify "FPE_CONDTRAP" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_INTDIV" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_INTOVF" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTDIV" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTOVF" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTUND" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTRES" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTINV" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTSUB" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTUNK" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_CONDTRAP" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "SEGV_MAPERR" 'enumvalue) #.1)
	#.(swig-lispify "SEGV_ACCERR" 'enumvalue)
	#.(swig-lispify "SEGV_BNDERR" 'enumvalue)
	#.(swig-lispify "SEGV_PKUERR" 'enumvalue)
	#.(swig-lispify "SEGV_ACCADI" 'enumvalue)
	#.(swig-lispify "SEGV_ADIDERR" 'enumvalue)
	#.(swig-lispify "SEGV_ADIPERR" 'enumvalue)
	#.(swig-lispify "SEGV_MTEAERR" 'enumvalue)
	#.(swig-lispify "SEGV_MTESERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_MAPERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_ACCERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_BNDERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_PKUERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_ACCADI" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_ADIDERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_ADIPERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_MTEAERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_MTESERR" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "BUS_ADRALN" 'enumvalue) #.1)
	#.(swig-lispify "BUS_ADRERR" 'enumvalue)
	#.(swig-lispify "BUS_OBJERR" 'enumvalue)
	#.(swig-lispify "BUS_MCEERR_AR" 'enumvalue)
	#.(swig-lispify "BUS_MCEERR_AO" 'enumvalue))

(cl:export '#.(swig-lispify "BUS_ADRALN" 'enumvalue))

(cl:export '#.(swig-lispify "BUS_ADRERR" 'enumvalue))

(cl:export '#.(swig-lispify "BUS_OBJERR" 'enumvalue))

(cl:export '#.(swig-lispify "BUS_MCEERR_AR" 'enumvalue))

(cl:export '#.(swig-lispify "BUS_MCEERR_AO" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "CLD_EXITED" 'enumvalue) #.1)
	#.(swig-lispify "CLD_KILLED" 'enumvalue)
	#.(swig-lispify "CLD_DUMPED" 'enumvalue)
	#.(swig-lispify "CLD_TRAPPED" 'enumvalue)
	#.(swig-lispify "CLD_STOPPED" 'enumvalue)
	#.(swig-lispify "CLD_CONTINUED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_EXITED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_KILLED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_DUMPED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_TRAPPED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_STOPPED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_CONTINUED" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "POLL_IN" 'enumvalue) #.1)
	#.(swig-lispify "POLL_OUT" 'enumvalue)
	#.(swig-lispify "POLL_MSG" 'enumvalue)
	#.(swig-lispify "POLL_ERR" 'enumvalue)
	#.(swig-lispify "POLL_PRI" 'enumvalue)
	#.(swig-lispify "POLL_HUP" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_IN" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_OUT" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_MSG" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_ERR" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_PRI" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_HUP" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "SIGEV_SIGNAL" 'enumvalue) #.0)
	#.(swig-lispify "SIGEV_NONE" 'enumvalue)
	#.(swig-lispify "SIGEV_THREAD" 'enumvalue)
	(#.(swig-lispify "SIGEV_THREAD_ID" 'enumvalue) #.4))

(cl:export '#.(swig-lispify "SIGEV_SIGNAL" 'enumvalue))

(cl:export '#.(swig-lispify "SIGEV_NONE" 'enumvalue))

(cl:export '#.(swig-lispify "SIGEV_THREAD" 'enumvalue))

(cl:export '#.(swig-lispify "SIGEV_THREAD_ID" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "SS_ONSTACK" 'enumvalue) #.1)
	#.(swig-lispify "SS_DISABLE" 'enumvalue))

(cl:export '#.(swig-lispify "SS_ONSTACK" 'enumvalue))

(cl:export '#.(swig-lispify "SS_DISABLE" 'enumvalue))

(cffi:defcenum #.(swig-lispify "GTimeType" 'enumname)
	#.(swig-lispify "G_TIME_TYPE_STANDARD" 'enumvalue :keyword)
	#.(swig-lispify "G_TIME_TYPE_DAYLIGHT" 'enumvalue :keyword)
	#.(swig-lispify "G_TIME_TYPE_UNIVERSAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTimeType" 'enumname))

(cffi:defcenum #.(swig-lispify "GBookmarkFileError" 'enumname)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_INVALID_URI" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_INVALID_VALUE" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_READ" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_WRITE" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GBookmarkFileError" 'enumname))

(cffi:defcenum #.(swig-lispify "GChecksumType" 'enumname)
	#.(swig-lispify "G_CHECKSUM_MD5" 'enumvalue :keyword)
	#.(swig-lispify "G_CHECKSUM_SHA1" 'enumvalue :keyword)
	#.(swig-lispify "G_CHECKSUM_SHA256" 'enumvalue :keyword)
	#.(swig-lispify "G_CHECKSUM_SHA512" 'enumvalue :keyword)
	#.(swig-lispify "G_CHECKSUM_SHA384" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GChecksumType" 'enumname))

(cffi:defcenum #.(swig-lispify "GConvertError" 'enumname)
	#.(swig-lispify "G_CONVERT_ERROR_NO_CONVERSION" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_ILLEGAL_SEQUENCE" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_PARTIAL_INPUT" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_BAD_URI" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_NOT_ABSOLUTE_PATH" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_NO_MEMORY" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_EMBEDDED_NUL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GConvertError" 'enumname))

(cffi:defcenum #.(swig-lispify "GDateDMY" 'enumname)
	(#.(swig-lispify "G_DATE_DAY" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DATE_MONTH" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_DATE_YEAR" 'enumvalue :keyword) #.2))

(cl:export '#.(swig-lispify "GDateDMY" 'enumname))

(cffi:defcenum #.(swig-lispify "GDateWeekday" 'enumname)
	(#.(swig-lispify "G_DATE_BAD_WEEKDAY" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DATE_MONDAY" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_DATE_TUESDAY" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_DATE_WEDNESDAY" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "G_DATE_THURSDAY" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "G_DATE_FRIDAY" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "G_DATE_SATURDAY" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "G_DATE_SUNDAY" 'enumvalue :keyword) #.7))

(cl:export '#.(swig-lispify "GDateWeekday" 'enumname))

(cffi:defcenum #.(swig-lispify "GDateMonth" 'enumname)
	(#.(swig-lispify "G_DATE_BAD_MONTH" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DATE_JANUARY" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_DATE_FEBRUARY" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_DATE_MARCH" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "G_DATE_APRIL" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "G_DATE_MAY" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "G_DATE_JUNE" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "G_DATE_JULY" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "G_DATE_AUGUST" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "G_DATE_SEPTEMBER" 'enumvalue :keyword) #.9)
	(#.(swig-lispify "G_DATE_OCTOBER" 'enumvalue :keyword) #.10)
	(#.(swig-lispify "G_DATE_NOVEMBER" 'enumvalue :keyword) #.11)
	(#.(swig-lispify "G_DATE_DECEMBER" 'enumvalue :keyword) #.12))

(cl:export '#.(swig-lispify "GDateMonth" 'enumname))

(defanonenum 
	(#.(swig-lispify "DT_UNKNOWN" 'enumvalue) #.0)
	(#.(swig-lispify "DT_FIFO" 'enumvalue) #.1)
	(#.(swig-lispify "DT_CHR" 'enumvalue) #.2)
	(#.(swig-lispify "DT_DIR" 'enumvalue) #.4)
	(#.(swig-lispify "DT_BLK" 'enumvalue) #.6)
	(#.(swig-lispify "DT_REG" 'enumvalue) #.8)
	(#.(swig-lispify "DT_LNK" 'enumvalue) #.10)
	(#.(swig-lispify "DT_SOCK" 'enumvalue) #.12)
	(#.(swig-lispify "DT_WHT" 'enumvalue) #.14))

(cl:export '#.(swig-lispify "DT_UNKNOWN" 'enumvalue))

(cl:export '#.(swig-lispify "DT_FIFO" 'enumvalue))

(cl:export '#.(swig-lispify "DT_CHR" 'enumvalue))

(cl:export '#.(swig-lispify "DT_DIR" 'enumvalue))

(cl:export '#.(swig-lispify "DT_BLK" 'enumvalue))

(cl:export '#.(swig-lispify "DT_REG" 'enumvalue))

(cl:export '#.(swig-lispify "DT_LNK" 'enumvalue))

(cl:export '#.(swig-lispify "DT_SOCK" 'enumvalue))

(cl:export '#.(swig-lispify "DT_WHT" 'enumvalue))

(cffi:defcenum #.(swig-lispify "GFileError" 'enumname)
	#.(swig-lispify "G_FILE_ERROR_EXIST" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_ISDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_ACCES" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NAMETOOLONG" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NOENT" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NOTDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NXIO" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NODEV" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_ROFS" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_TXTBSY" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_FAULT" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_LOOP" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NOSPC" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NOMEM" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_MFILE" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NFILE" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_BADF" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_INVAL" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_PIPE" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_AGAIN" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_INTR" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_IO" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_PERM" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NOSYS" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GFileError" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileTest" 'enumname)
	(#.(swig-lispify "G_FILE_TEST_IS_REGULAR" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_FILE_TEST_IS_SYMLINK" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_FILE_TEST_IS_DIR" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_FILE_TEST_IS_EXECUTABLE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_FILE_TEST_EXISTS" 'enumvalue :keyword) #.(cl:ash 1 4)))

(cl:export '#.(swig-lispify "GFileTest" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileSetContentsFlags" 'enumname)
	(#.(swig-lispify "G_FILE_SET_CONTENTS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_FILE_SET_CONTENTS_CONSISTENT" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_FILE_SET_CONTENTS_DURABLE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_FILE_SET_CONTENTS_ONLY_EXISTING" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GFileSetContentsFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTraverseFlags" 'enumname)
	(#.(swig-lispify "G_TRAVERSE_LEAVES" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_TRAVERSE_NON_LEAVES" 'enumvalue :keyword) #.(cl:ash 1 1))
  ;;(#.(swig-lispify "G_TRAVERSE_ALL" 'enumvalue :keyword) #.(cl:logior G_TRAVERSE_LEAVES G_TRAVERSE_NON_LEAVES))
	(#.(swig-lispify "G_TRAVERSE_MASK" 'enumvalue :keyword) #.#x03)
  ;;(#.(swig-lispify "G_TRAVERSE_LEAFS" 'enumvalue :keyword) #.G_TRAVERSE_LEAVES)
  ;;(#.(swig-lispify "G_TRAVERSE_NON_LEAFS" 'enumvalue :keyword) #.G_TRAVERSE_NON_LEAVES)
)

(cl:export '#.(swig-lispify "GTraverseFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTraverseType" 'enumname)
	#.(swig-lispify "G_IN_ORDER" 'enumvalue :keyword)
	#.(swig-lispify "G_PRE_ORDER" 'enumvalue :keyword)
	#.(swig-lispify "G_POST_ORDER" 'enumvalue :keyword)
	#.(swig-lispify "G_LEVEL_ORDER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTraverseType" 'enumname))

(cffi:defcenum #.(swig-lispify "GHookFlagMask" 'enumname)
	(#.(swig-lispify "G_HOOK_FLAG_ACTIVE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_HOOK_FLAG_IN_CALL" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_HOOK_FLAG_MASK" 'enumvalue :keyword) #.#x0f))

(cl:export '#.(swig-lispify "GHookFlagMask" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOCondition" 'enumname)
	(#.(swig-lispify "G_IO_IN" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_IO_OUT" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "G_IO_PRI" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_IO_ERR" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "G_IO_HUP" 'enumvalue :keyword) #.16)
	(#.(swig-lispify "G_IO_NVAL" 'enumvalue :keyword) #.32))

(cl:export '#.(swig-lispify "GIOCondition" 'enumname))

(cffi:defcenum #.(swig-lispify "GMainContextFlags" 'enumname)
	(#.(swig-lispify "G_MAIN_CONTEXT_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_MAIN_CONTEXT_FLAGS_OWNERLESS_POLLING" 'enumvalue :keyword) #.1))

(cl:export '#.(swig-lispify "GMainContextFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GUnicodeType" 'enumname)
	#.(swig-lispify "G_UNICODE_CONTROL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_FORMAT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_UNASSIGNED" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_PRIVATE_USE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SURROGATE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_LOWERCASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_MODIFIER_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_OTHER_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_TITLECASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_UPPERCASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SPACING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_ENCLOSING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_NON_SPACING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_DECIMAL_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_LETTER_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_OTHER_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_CONNECT_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_DASH_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_CLOSE_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_FINAL_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_INITIAL_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_OTHER_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_OPEN_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_CURRENCY_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_MODIFIER_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_MATH_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_OTHER_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_LINE_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_PARAGRAPH_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SPACE_SEPARATOR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUnicodeType" 'enumname))

(cffi:defcenum #.(swig-lispify "GUnicodeBreakType" 'enumname)
	#.(swig-lispify "G_UNICODE_BREAK_MANDATORY" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_CARRIAGE_RETURN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_LINE_FEED" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_COMBINING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_SURROGATE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_ZERO_WIDTH_SPACE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_INSEPARABLE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_NON_BREAKING_GLUE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_CONTINGENT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_SPACE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_AFTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_BEFORE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_BEFORE_AND_AFTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HYPHEN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_NON_STARTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_OPEN_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_CLOSE_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_QUOTATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_EXCLAMATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_IDEOGRAPHIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_NUMERIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_INFIX_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_ALPHABETIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_PREFIX" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_POSTFIX" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_COMPLEX_CONTEXT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_AMBIGUOUS" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_NEXT_LINE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_WORD_JOINER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HANGUL_L_JAMO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HANGUL_V_JAMO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HANGUL_T_JAMO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HANGUL_LV_SYLLABLE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_CLOSE_PARANTHESIS" 'enumvalue :keyword)
  ;;(#.(swig-lispify "G_UNICODE_BREAK_CLOSE_PARENTHESIS" 'enumvalue :keyword) #.G_UNICODE_BREAK_CLOSE_PARANTHESIS)
	#.(swig-lispify "G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HEBREW_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_REGIONAL_INDICATOR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_EMOJI_BASE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_EMOJI_MODIFIER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_ZERO_WIDTH_JOINER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUnicodeBreakType" 'enumname))

(cffi:defcenum #.(swig-lispify "GUnicodeScript" 'enumname)
	(#.(swig-lispify "G_UNICODE_SCRIPT_INVALID_CODE" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "G_UNICODE_SCRIPT_COMMON" 'enumvalue :keyword) #.0)
	#.(swig-lispify "G_UNICODE_SCRIPT_INHERITED" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ARABIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ARMENIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BENGALI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BOPOMOFO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CHEROKEE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_COPTIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CYRILLIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_DESERET" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_DEVANAGARI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ETHIOPIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GEORGIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GOTHIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GREEK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GUJARATI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GURMUKHI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HANGUL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HEBREW" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HIRAGANA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KANNADA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KATAKANA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KHMER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LAO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LATIN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MALAYALAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MONGOLIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MYANMAR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OGHAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_ITALIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ORIYA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_RUNIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SINHALA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SYRIAC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAMIL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TELUGU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_THAANA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_THAI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TIBETAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_YI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAGALOG" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HANUNOO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BUHID" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAGBANWA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BRAILLE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CYPRIOT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LIMBU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OSMANYA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SHAVIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LINEAR_B" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAI_LE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_UGARITIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NEW_TAI_LUE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BUGINESE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GLAGOLITIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TIFINAGH" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SYLOTI_NAGRI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_PERSIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KHAROSHTHI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BALINESE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CUNEIFORM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PHOENICIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PHAGS_PA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NKO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KAYAH_LI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LEPCHA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_REJANG" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SUNDANESE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SAURASHTRA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CHAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OL_CHIKI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_VAI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CARIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LYCIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LYDIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_AVESTAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BAMUM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_JAVANESE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KAITHI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LISU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MEETEI_MAYEK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_TURKIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SAMARITAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAI_THAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAI_VIET" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BATAK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BRAHMI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MANDAIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CHAKMA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MEROITIC_CURSIVE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MIAO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SHARADA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SORA_SOMPENG" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAKRI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BASSA_VAH" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_DUPLOYAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ELBASAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GRANTHA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KHOJKI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KHUDAWADI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LINEAR_A" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MAHAJANI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MANICHAEAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MENDE_KIKAKUI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MODI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MRO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NABATAEAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_PERMIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PAHAWH_HMONG" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PALMYRENE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PAU_CIN_HAU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PSALTER_PAHLAVI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SIDDHAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TIRHUTA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_WARANG_CITI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_AHOM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HATRAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MULTANI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_HUNGARIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SIGNWRITING" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ADLAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BHAIKSUKI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MARCHEN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NEWA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OSAGE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TANGUT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MASARAM_GONDI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NUSHU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SOYOMBO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ZANABAZAR_SQUARE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_DOGRA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GUNJALA_GONDI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HANIFI_ROHINGYA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MAKASAR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MEDEFAIDRIN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_SOGDIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SOGDIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ELYMAIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NANDINAGARI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NYIAKENG_PUACHUE_HMONG" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_WANCHO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CHORASMIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_DIVES_AKURU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KHITAN_SMALL_SCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_YEZIDI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CYPRO_MINOAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_UYGHUR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TANGSA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TOTO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_VITHKUQI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MATH" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUnicodeScript" 'enumname))

(cffi:defcenum #.(swig-lispify "GNormalizeMode" 'enumname)
	#.(swig-lispify "G_NORMALIZE_DEFAULT" 'enumvalue :keyword)
  ;;(#.(swig-lispify "G_NORMALIZE_NFD" 'enumvalue :keyword) #.G_NORMALIZE_DEFAULT)
	#.(swig-lispify "G_NORMALIZE_DEFAULT_COMPOSE" 'enumvalue :keyword)
  ;;(#.(swig-lispify "G_NORMALIZE_NFC" 'enumvalue :keyword) #.G_NORMALIZE_DEFAULT_COMPOSE)
	#.(swig-lispify "G_NORMALIZE_ALL" 'enumvalue :keyword)
  ;;(#.(swig-lispify "G_NORMALIZE_NFKD" 'enumvalue :keyword) #.G_NORMALIZE_ALL)
	#.(swig-lispify "G_NORMALIZE_ALL_COMPOSE" 'enumvalue :keyword)
  ;;(#.(swig-lispify "G_NORMALIZE_NFKC" 'enumvalue :keyword) #.G_NORMALIZE_ALL_COMPOSE)
  )

(cl:export '#.(swig-lispify "GNormalizeMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOError" 'enumname)
	#.(swig-lispify "G_IO_ERROR_NONE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_AGAIN" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_INVAL" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_UNKNOWN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GIOError" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOChannelError" 'enumname)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_FBIG" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_INVAL" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_IO" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_ISDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_NOSPC" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_NXIO" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_OVERFLOW" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_PIPE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GIOChannelError" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOStatus" 'enumname)
	#.(swig-lispify "G_IO_STATUS_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_STATUS_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_STATUS_EOF" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_STATUS_AGAIN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GIOStatus" 'enumname))

(cffi:defcenum #.(swig-lispify "GSeekType" 'enumname)
	#.(swig-lispify "G_SEEK_CUR" 'enumvalue :keyword)
	#.(swig-lispify "G_SEEK_SET" 'enumvalue :keyword)
	#.(swig-lispify "G_SEEK_END" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GSeekType" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOFlags" 'enumname)
	(#.(swig-lispify "G_IO_FLAG_APPEND" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_IO_FLAG_NONBLOCK" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_IO_FLAG_IS_READABLE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_IO_FLAG_IS_WRITABLE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_IO_FLAG_IS_WRITEABLE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_IO_FLAG_IS_SEEKABLE" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_IO_FLAG_MASK" 'enumvalue :keyword) #.(cl:- (cl:ash 1 5) 1))
  ;;(#.(swig-lispify "G_IO_FLAG_GET_MASK" 'enumvalue :keyword) #.G_IO_FLAG_MASK)
  ;;(#.(swig-lispify "G_IO_FLAG_SET_MASK" 'enumvalue :keyword) #.(cl:logior G_IO_FLAG_APPEND G_IO_FLAG_NONBLOCK))
  )

(cl:export '#.(swig-lispify "GIOFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GKeyFileError" 'enumname)
	#.(swig-lispify "G_KEY_FILE_ERROR_UNKNOWN_ENCODING" 'enumvalue :keyword)
	#.(swig-lispify "G_KEY_FILE_ERROR_PARSE" 'enumvalue :keyword)
	#.(swig-lispify "G_KEY_FILE_ERROR_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_KEY_FILE_ERROR_KEY_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_KEY_FILE_ERROR_GROUP_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_KEY_FILE_ERROR_INVALID_VALUE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GKeyFileError" 'enumname))

(cffi:defcenum #.(swig-lispify "GKeyFileFlags" 'enumname)
	(#.(swig-lispify "G_KEY_FILE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_KEY_FILE_KEEP_COMMENTS" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_KEY_FILE_KEEP_TRANSLATIONS" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GKeyFileFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GMarkupError" 'enumname)
	#.(swig-lispify "G_MARKUP_ERROR_BAD_UTF8" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_EMPTY" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_PARSE" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_UNKNOWN_ELEMENT" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_INVALID_CONTENT" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_MISSING_ATTRIBUTE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GMarkupError" 'enumname))

(cffi:defcenum #.(swig-lispify "GMarkupParseFlags" 'enumname)
	(#.(swig-lispify "G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_MARKUP_TREAT_CDATA_AS_TEXT" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_MARKUP_PREFIX_ERROR_POSITION" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_MARKUP_IGNORE_QUALIFIED" 'enumvalue :keyword) #.(cl:ash 1 3)))

(cl:export '#.(swig-lispify "GMarkupParseFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GMarkupCollectType" 'enumname)
	#.(swig-lispify "G_MARKUP_COLLECT_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_COLLECT_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_COLLECT_STRDUP" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_COLLECT_BOOLEAN" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_COLLECT_TRISTATE" 'enumvalue :keyword)
	(#.(swig-lispify "G_MARKUP_COLLECT_OPTIONAL" 'enumvalue :keyword) #.(cl:ash 1 16)))

(cl:export '#.(swig-lispify "GMarkupCollectType" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GVariantClass" 'enumname)
	(#.(swig-lispify "G_VARIANT_CLASS_BOOLEAN" 'enumvalue :keyword) #.#\b)
	(#.(swig-lispify "G_VARIANT_CLASS_BYTE" 'enumvalue :keyword) #.#\y)
	(#.(swig-lispify "G_VARIANT_CLASS_INT16" 'enumvalue :keyword) #.#\n)
	(#.(swig-lispify "G_VARIANT_CLASS_UINT16" 'enumvalue :keyword) #.#\q)
	(#.(swig-lispify "G_VARIANT_CLASS_INT32" 'enumvalue :keyword) #.#\i)
	(#.(swig-lispify "G_VARIANT_CLASS_UINT32" 'enumvalue :keyword) #.#\u)
	(#.(swig-lispify "G_VARIANT_CLASS_INT64" 'enumvalue :keyword) #.#\x)
	(#.(swig-lispify "G_VARIANT_CLASS_UINT64" 'enumvalue :keyword) #.#\t)
	(#.(swig-lispify "G_VARIANT_CLASS_HANDLE" 'enumvalue :keyword) #.#\h)
	(#.(swig-lispify "G_VARIANT_CLASS_DOUBLE" 'enumvalue :keyword) #.#\d)
	(#.(swig-lispify "G_VARIANT_CLASS_STRING" 'enumvalue :keyword) #.#\s)
	(#.(swig-lispify "G_VARIANT_CLASS_OBJECT_PATH" 'enumvalue :keyword) #.#\o)
	(#.(swig-lispify "G_VARIANT_CLASS_SIGNATURE" 'enumvalue :keyword) #.#\g)
	(#.(swig-lispify "G_VARIANT_CLASS_VARIANT" 'enumvalue :keyword) #.#\v)
	(#.(swig-lispify "G_VARIANT_CLASS_MAYBE" 'enumvalue :keyword) #.#\m)
	(#.(swig-lispify "G_VARIANT_CLASS_ARRAY" 'enumvalue :keyword) #.#\a)
	(#.(swig-lispify "G_VARIANT_CLASS_TUPLE" 'enumvalue :keyword) #.#\()
	(#.(swig-lispify "G_VARIANT_CLASS_DICT_ENTRY" 'enumvalue :keyword) #.#\{))

;;(cl:export '#.(swig-lispify "GVariantClass" 'enumname))

(cffi:defcenum #.(swig-lispify "GVariantParseError" 'enumname)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INVALID_CHARACTER" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_TYPE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_VALUE_EXPECTED" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_RECURSION" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GVariantParseError" 'enumname))

(cffi:defcenum #.(swig-lispify "GLogLevelFlags" 'enumname)
	(#.(swig-lispify "G_LOG_FLAG_RECURSION" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_LOG_FLAG_FATAL" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_LOG_LEVEL_ERROR" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_LOG_LEVEL_CRITICAL" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_LOG_LEVEL_WARNING" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_LOG_LEVEL_MESSAGE" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_LOG_LEVEL_INFO" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_LOG_LEVEL_DEBUG" 'enumvalue :keyword) #.(cl:ash 1 7))
	;;(#.(swig-lispify "G_LOG_LEVEL_MASK" 'enumvalue :keyword) #.(cl:logior ~(G_LOG_FLAG_RECURSION G_LOG_FLAG_FATAL)))
  )

(cl:export '#.(swig-lispify "GLogLevelFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GLogWriterOutput" 'enumname)
	(#.(swig-lispify "G_LOG_WRITER_HANDLED" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_LOG_WRITER_UNHANDLED" 'enumvalue :keyword) #.0))

(cl:export '#.(swig-lispify "GLogWriterOutput" 'enumname))

(cffi:defcenum #.(swig-lispify "GOptionFlags" 'enumname)
	(#.(swig-lispify "G_OPTION_FLAG_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_OPTION_FLAG_HIDDEN" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_OPTION_FLAG_IN_MAIN" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_OPTION_FLAG_REVERSE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_OPTION_FLAG_NO_ARG" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_OPTION_FLAG_FILENAME" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_OPTION_FLAG_OPTIONAL_ARG" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_OPTION_FLAG_NOALIAS" 'enumvalue :keyword) #.(cl:ash 1 6)))

(cl:export '#.(swig-lispify "GOptionFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GOptionArg" 'enumname)
	#.(swig-lispify "G_OPTION_ARG_NONE" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_INT" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_CALLBACK" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_FILENAME" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_STRING_ARRAY" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_FILENAME_ARRAY" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_DOUBLE" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_INT64" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GOptionArg" 'enumname))

(cffi:defcenum #.(swig-lispify "GOptionError" 'enumname)
	#.(swig-lispify "G_OPTION_ERROR_UNKNOWN_OPTION" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ERROR_BAD_VALUE" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ERROR_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GOptionError" 'enumname))

(cffi:defcenum #.(swig-lispify "GRegexError" 'enumname)
	#.(swig-lispify "G_REGEX_ERROR_COMPILE" 'enumvalue :keyword)
	#.(swig-lispify "G_REGEX_ERROR_OPTIMIZE" 'enumvalue :keyword)
	#.(swig-lispify "G_REGEX_ERROR_REPLACE" 'enumvalue :keyword)
	#.(swig-lispify "G_REGEX_ERROR_MATCH" 'enumvalue :keyword)
	#.(swig-lispify "G_REGEX_ERROR_INTERNAL" 'enumvalue :keyword)
	(#.(swig-lispify "G_REGEX_ERROR_STRAY_BACKSLASH" 'enumvalue :keyword) #.101)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_CONTROL_CHAR" 'enumvalue :keyword) #.102)
	(#.(swig-lispify "G_REGEX_ERROR_UNRECOGNIZED_ESCAPE" 'enumvalue :keyword) #.103)
	(#.(swig-lispify "G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER" 'enumvalue :keyword) #.104)
	(#.(swig-lispify "G_REGEX_ERROR_QUANTIFIER_TOO_BIG" 'enumvalue :keyword) #.105)
	(#.(swig-lispify "G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS" 'enumvalue :keyword) #.106)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS" 'enumvalue :keyword) #.107)
	(#.(swig-lispify "G_REGEX_ERROR_RANGE_OUT_OF_ORDER" 'enumvalue :keyword) #.108)
	(#.(swig-lispify "G_REGEX_ERROR_NOTHING_TO_REPEAT" 'enumvalue :keyword) #.109)
	(#.(swig-lispify "G_REGEX_ERROR_UNRECOGNIZED_CHARACTER" 'enumvalue :keyword) #.112)
	(#.(swig-lispify "G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS" 'enumvalue :keyword) #.113)
	(#.(swig-lispify "G_REGEX_ERROR_UNMATCHED_PARENTHESIS" 'enumvalue :keyword) #.114)
	(#.(swig-lispify "G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE" 'enumvalue :keyword) #.115)
	(#.(swig-lispify "G_REGEX_ERROR_UNTERMINATED_COMMENT" 'enumvalue :keyword) #.118)
	(#.(swig-lispify "G_REGEX_ERROR_EXPRESSION_TOO_LARGE" 'enumvalue :keyword) #.120)
	(#.(swig-lispify "G_REGEX_ERROR_MEMORY_ERROR" 'enumvalue :keyword) #.121)
	(#.(swig-lispify "G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND" 'enumvalue :keyword) #.125)
	(#.(swig-lispify "G_REGEX_ERROR_MALFORMED_CONDITION" 'enumvalue :keyword) #.126)
	(#.(swig-lispify "G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES" 'enumvalue :keyword) #.127)
	(#.(swig-lispify "G_REGEX_ERROR_ASSERTION_EXPECTED" 'enumvalue :keyword) #.128)
	(#.(swig-lispify "G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME" 'enumvalue :keyword) #.130)
	(#.(swig-lispify "G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED" 'enumvalue :keyword) #.131)
	(#.(swig-lispify "G_REGEX_ERROR_HEX_CODE_TOO_LARGE" 'enumvalue :keyword) #.134)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_CONDITION" 'enumvalue :keyword) #.135)
	(#.(swig-lispify "G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND" 'enumvalue :keyword) #.136)
	(#.(swig-lispify "G_REGEX_ERROR_INFINITE_LOOP" 'enumvalue :keyword) #.140)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR" 'enumvalue :keyword) #.142)
	(#.(swig-lispify "G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME" 'enumvalue :keyword) #.143)
	(#.(swig-lispify "G_REGEX_ERROR_MALFORMED_PROPERTY" 'enumvalue :keyword) #.146)
	(#.(swig-lispify "G_REGEX_ERROR_UNKNOWN_PROPERTY" 'enumvalue :keyword) #.147)
	(#.(swig-lispify "G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG" 'enumvalue :keyword) #.148)
	(#.(swig-lispify "G_REGEX_ERROR_TOO_MANY_SUBPATTERNS" 'enumvalue :keyword) #.149)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_OCTAL_VALUE" 'enumvalue :keyword) #.151)
	(#.(swig-lispify "G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE" 'enumvalue :keyword) #.154)
	(#.(swig-lispify "G_REGEX_ERROR_DEFINE_REPETION" 'enumvalue :keyword) #.155)
	(#.(swig-lispify "G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS" 'enumvalue :keyword) #.156)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_BACK_REFERENCE" 'enumvalue :keyword) #.157)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_RELATIVE_REFERENCE" 'enumvalue :keyword) #.158)
	(#.(swig-lispify "G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN" 'enumvalue :keyword) #.159)
	(#.(swig-lispify "G_REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB" 'enumvalue :keyword) #.160)
	(#.(swig-lispify "G_REGEX_ERROR_NUMBER_TOO_BIG" 'enumvalue :keyword) #.161)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_SUBPATTERN_NAME" 'enumvalue :keyword) #.162)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_DIGIT" 'enumvalue :keyword) #.163)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_DATA_CHARACTER" 'enumvalue :keyword) #.164)
	(#.(swig-lispify "G_REGEX_ERROR_EXTRA_SUBPATTERN_NAME" 'enumvalue :keyword) #.165)
	(#.(swig-lispify "G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED" 'enumvalue :keyword) #.166)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_CONTROL_CHAR" 'enumvalue :keyword) #.168)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_NAME" 'enumvalue :keyword) #.169)
	(#.(swig-lispify "G_REGEX_ERROR_NOT_SUPPORTED_IN_CLASS" 'enumvalue :keyword) #.171)
	(#.(swig-lispify "G_REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES" 'enumvalue :keyword) #.172)
	(#.(swig-lispify "G_REGEX_ERROR_NAME_TOO_LONG" 'enumvalue :keyword) #.175)
	(#.(swig-lispify "G_REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE" 'enumvalue :keyword) #.176))

(cl:export '#.(swig-lispify "GRegexError" 'enumname))

(cffi:defcenum #.(swig-lispify "GRegexCompileFlags" 'enumname)
	(#.(swig-lispify "G_REGEX_CASELESS" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_REGEX_MULTILINE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_REGEX_DOTALL" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_REGEX_EXTENDED" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_REGEX_ANCHORED" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_REGEX_DOLLAR_ENDONLY" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_REGEX_UNGREEDY" 'enumvalue :keyword) #.(cl:ash 1 9))
	(#.(swig-lispify "G_REGEX_RAW" 'enumvalue :keyword) #.(cl:ash 1 11))
	(#.(swig-lispify "G_REGEX_NO_AUTO_CAPTURE" 'enumvalue :keyword) #.(cl:ash 1 12))
	(#.(swig-lispify "G_REGEX_OPTIMIZE" 'enumvalue :keyword) #.(cl:ash 1 13))
	(#.(swig-lispify "G_REGEX_FIRSTLINE" 'enumvalue :keyword) #.(cl:ash 1 18))
	(#.(swig-lispify "G_REGEX_DUPNAMES" 'enumvalue :keyword) #.(cl:ash 1 19))
	(#.(swig-lispify "G_REGEX_NEWLINE_CR" 'enumvalue :keyword) #.(cl:ash 1 20))
	(#.(swig-lispify "G_REGEX_NEWLINE_LF" 'enumvalue :keyword) #.(cl:ash 1 21))
	;;(#.(swig-lispify "G_REGEX_NEWLINE_CRLF" 'enumvalue :keyword) #.(cl:logior G_REGEX_NEWLINE_CR G_REGEX_NEWLINE_LF))
	;;(#.(swig-lispify "G_REGEX_NEWLINE_ANYCRLF" 'enumvalue :keyword) #.(cl:logior G_REGEX_NEWLINE_CR (cl:ash 1 22)))
	(#.(swig-lispify "G_REGEX_BSR_ANYCRLF" 'enumvalue :keyword) #.(cl:ash 1 23))
	(#.(swig-lispify "G_REGEX_JAVASCRIPT_COMPAT" 'enumvalue :keyword) #.(cl:ash 1 25)))

(cl:export '#.(swig-lispify "GRegexCompileFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GRegexMatchFlags" 'enumname)
	(#.(swig-lispify "G_REGEX_MATCH_ANCHORED" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_REGEX_MATCH_NOTBOL" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_REGEX_MATCH_NOTEOL" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "G_REGEX_MATCH_NOTEMPTY" 'enumvalue :keyword) #.(cl:ash 1 10))
	(#.(swig-lispify "G_REGEX_MATCH_PARTIAL" 'enumvalue :keyword) #.(cl:ash 1 15))
	(#.(swig-lispify "G_REGEX_MATCH_NEWLINE_CR" 'enumvalue :keyword) #.(cl:ash 1 20))
	(#.(swig-lispify "G_REGEX_MATCH_NEWLINE_LF" 'enumvalue :keyword) #.(cl:ash 1 21))
	;;(#.(swig-lispify "G_REGEX_MATCH_NEWLINE_CRLF" 'enumvalue :keyword) #.(cl:logior G_REGEX_MATCH_NEWLINE_CR G_REGEX_MATCH_NEWLINE_LF))
	(#.(swig-lispify "G_REGEX_MATCH_NEWLINE_ANY" 'enumvalue :keyword) #.(cl:ash 1 22))
	;;(#.(swig-lispify "G_REGEX_MATCH_NEWLINE_ANYCRLF" 'enumvalue :keyword) #.(cl:logior G_REGEX_MATCH_NEWLINE_CR G_REGEX_MATCH_NEWLINE_ANY))
	(#.(swig-lispify "G_REGEX_MATCH_BSR_ANYCRLF" 'enumvalue :keyword) #.(cl:ash 1 23))
	(#.(swig-lispify "G_REGEX_MATCH_BSR_ANY" 'enumvalue :keyword) #.(cl:ash 1 24))
	;;(#.(swig-lispify "G_REGEX_MATCH_PARTIAL_SOFT" 'enumvalue :keyword) #.G_REGEX_MATCH_PARTIAL)
	(#.(swig-lispify "G_REGEX_MATCH_PARTIAL_HARD" 'enumvalue :keyword) #.(cl:ash 1 27))
	(#.(swig-lispify "G_REGEX_MATCH_NOTEMPTY_ATSTART" 'enumvalue :keyword) #.(cl:ash 1 28)))

(cl:export '#.(swig-lispify "GRegexMatchFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GErrorType" 'enumname)
	#.(swig-lispify "G_ERR_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_UNEXP_EOF" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_UNEXP_EOF_IN_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_UNEXP_EOF_IN_COMMENT" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_NON_DIGIT_IN_CONST" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_DIGIT_RADIX" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_FLOAT_RADIX" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_FLOAT_MALFORMED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GErrorType" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GTokenType" 'enumname)
	(#.(swig-lispify "G_TOKEN_EOF" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_TOKEN_LEFT_PAREN" 'enumvalue :keyword) #.#\()
	(#.(swig-lispify "G_TOKEN_RIGHT_PAREN" 'enumvalue :keyword) #.#\))
	(#.(swig-lispify "G_TOKEN_LEFT_CURLY" 'enumvalue :keyword) #.#\{)
	(#.(swig-lispify "G_TOKEN_RIGHT_CURLY" 'enumvalue :keyword) #.#\})
	(#.(swig-lispify "G_TOKEN_LEFT_BRACE" 'enumvalue :keyword) #.#\[)
	(#.(swig-lispify "G_TOKEN_RIGHT_BRACE" 'enumvalue :keyword) #.#\])
	(#.(swig-lispify "G_TOKEN_EQUAL_SIGN" 'enumvalue :keyword) #.#\=)
	(#.(swig-lispify "G_TOKEN_COMMA" 'enumvalue :keyword) #.#\,)
	(#.(swig-lispify "G_TOKEN_NONE" 'enumvalue :keyword) #.256)
	#.(swig-lispify "G_TOKEN_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_CHAR" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_BINARY" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_OCTAL" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_INT" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_HEX" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_FLOAT" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_IDENTIFIER" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_IDENTIFIER_NULL" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_COMMENT_SINGLE" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_COMMENT_MULTI" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_LAST" 'enumvalue :keyword))

;;(cl:export '#.(swig-lispify "GTokenType" 'enumname))

(cffi:defcenum #.(swig-lispify "GShellError" 'enumname)
	#.(swig-lispify "G_SHELL_ERROR_BAD_QUOTING" 'enumvalue :keyword)
	#.(swig-lispify "G_SHELL_ERROR_EMPTY_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_SHELL_ERROR_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GShellError" 'enumname))

(cffi:defcenum #.(swig-lispify "GSliceConfig" 'enumname)
	(#.(swig-lispify "G_SLICE_CONFIG_ALWAYS_MALLOC" 'enumvalue :keyword) #.1)
	#.(swig-lispify "G_SLICE_CONFIG_BYPASS_MAGAZINES" 'enumvalue :keyword)
	#.(swig-lispify "G_SLICE_CONFIG_WORKING_SET_MSECS" 'enumvalue :keyword)
	#.(swig-lispify "G_SLICE_CONFIG_COLOR_INCREMENT" 'enumvalue :keyword)
	#.(swig-lispify "G_SLICE_CONFIG_CHUNK_SIZES" 'enumvalue :keyword)
	#.(swig-lispify "G_SLICE_CONFIG_CONTENTION_COUNTER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GSliceConfig" 'enumname))

(cffi:defcenum #.(swig-lispify "GSpawnError" 'enumname)
	#.(swig-lispify "G_SPAWN_ERROR_FORK" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_READ" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_CHDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_ACCES" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_PERM" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_TOO_BIG" 'enumvalue :keyword)
	;;(#.(swig-lispify "G_SPAWN_ERROR_2BIG" 'enumvalue :keyword) #.G_SPAWN_ERROR_TOO_BIG)
	#.(swig-lispify "G_SPAWN_ERROR_NOEXEC" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_NAMETOOLONG" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_NOENT" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_NOMEM" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_NOTDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_LOOP" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_TXTBUSY" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_IO" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_NFILE" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_MFILE" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_INVAL" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_ISDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_LIBBAD" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GSpawnError" 'enumname))

(cffi:defcenum #.(swig-lispify "GSpawnFlags" 'enumname)
	(#.(swig-lispify "G_SPAWN_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_SPAWN_LEAVE_DESCRIPTORS_OPEN" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_SPAWN_DO_NOT_REAP_CHILD" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_SPAWN_SEARCH_PATH" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_SPAWN_STDOUT_TO_DEV_NULL" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_SPAWN_STDERR_TO_DEV_NULL" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_SPAWN_CHILD_INHERITS_STDIN" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_SPAWN_FILE_AND_ARGV_ZERO" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_SPAWN_SEARCH_PATH_FROM_ENVP" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_SPAWN_CLOEXEC_PIPES" 'enumvalue :keyword) #.(cl:ash 1 8)))

(cl:export '#.(swig-lispify "GSpawnFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GAsciiType" 'enumname)
	(#.(swig-lispify "G_ASCII_ALNUM" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_ASCII_ALPHA" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_ASCII_CNTRL" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_ASCII_DIGIT" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_ASCII_GRAPH" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_ASCII_LOWER" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_ASCII_PRINT" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_ASCII_PUNCT" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_ASCII_SPACE" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "G_ASCII_UPPER" 'enumvalue :keyword) #.(cl:ash 1 9))
	(#.(swig-lispify "G_ASCII_XDIGIT" 'enumvalue :keyword) #.(cl:ash 1 10)))

(cl:export '#.(swig-lispify "GAsciiType" 'enumname))

(cffi:defcenum #.(swig-lispify "GNumberParserError" 'enumname)
	#.(swig-lispify "G_NUMBER_PARSER_ERROR_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_NUMBER_PARSER_ERROR_OUT_OF_BOUNDS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GNumberParserError" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestTrapFlags" 'enumname)
	(#.(swig-lispify "G_TEST_TRAP_SILENCE_STDOUT" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_TEST_TRAP_SILENCE_STDERR" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "G_TEST_TRAP_INHERIT_STDIN" 'enumvalue :keyword) #.(cl:ash 1 9)))

(cl:export '#.(swig-lispify "GTestTrapFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestSubprocessFlags" 'enumname)
	(#.(swig-lispify "G_TEST_SUBPROCESS_INHERIT_STDIN" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_TEST_SUBPROCESS_INHERIT_STDOUT" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_TEST_SUBPROCESS_INHERIT_STDERR" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GTestSubprocessFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestResult" 'enumname)
	#.(swig-lispify "G_TEST_RUN_SUCCESS" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_RUN_SKIPPED" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_RUN_FAILURE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_RUN_INCOMPLETE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTestResult" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestLogType" 'enumname)
	#.(swig-lispify "G_TEST_LOG_NONE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_START_BINARY" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_LIST_CASE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_SKIP_CASE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_START_CASE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_STOP_CASE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_MIN_RESULT" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_MAX_RESULT" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_MESSAGE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_START_SUITE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_STOP_SUITE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTestLogType" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestFileType" 'enumname)
	#.(swig-lispify "G_TEST_DIST" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_BUILT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTestFileType" 'enumname))

(cffi:defcenum #.(swig-lispify "GUriFlags" 'enumname)
	(#.(swig-lispify "G_URI_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_URI_FLAGS_PARSE_RELAXED" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_URI_FLAGS_HAS_PASSWORD" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_URI_FLAGS_HAS_AUTH_PARAMS" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_URI_FLAGS_ENCODED" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_URI_FLAGS_NON_DNS" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_URI_FLAGS_ENCODED_QUERY" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_URI_FLAGS_ENCODED_PATH" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_URI_FLAGS_ENCODED_FRAGMENT" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_URI_FLAGS_SCHEME_NORMALIZE" 'enumvalue :keyword) #.(cl:ash 1 8)))

(cl:export '#.(swig-lispify "GUriFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GUriHideFlags" 'enumname)
	(#.(swig-lispify "G_URI_HIDE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_URI_HIDE_USERINFO" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_URI_HIDE_PASSWORD" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_URI_HIDE_AUTH_PARAMS" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_URI_HIDE_QUERY" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_URI_HIDE_FRAGMENT" 'enumvalue :keyword) #.(cl:ash 1 4)))

(cl:export '#.(swig-lispify "GUriHideFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GUriParamsFlags" 'enumname)
	(#.(swig-lispify "G_URI_PARAMS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_URI_PARAMS_CASE_INSENSITIVE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_URI_PARAMS_WWW_FORM" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_URI_PARAMS_PARSE_RELAXED" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GUriParamsFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GUriError" 'enumname)
	#.(swig-lispify "G_URI_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_SCHEME" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_USER" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_PASSWORD" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_AUTH_PARAMS" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_HOST" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_PORT" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_PATH" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_QUERY" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_FRAGMENT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUriError" 'enumname))

(cffi:defcenum #.(swig-lispify "GThreadPriority" 'enumname)
	#.(swig-lispify "G_THREAD_PRIORITY_LOW" 'enumvalue :keyword)
	#.(swig-lispify "G_THREAD_PRIORITY_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "G_THREAD_PRIORITY_HIGH" 'enumvalue :keyword)
	#.(swig-lispify "G_THREAD_PRIORITY_URGENT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GThreadPriority" 'enumname))

(defanonenum 
	#.(swig-lispify "PTHREAD_CREATE_JOINABLE" 'enumvalue)
	#.(swig-lispify "PTHREAD_CREATE_DETACHED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CREATE_JOINABLE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CREATE_DETACHED" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_MUTEX_TIMED_NP" 'enumvalue)
	#.(swig-lispify "PTHREAD_MUTEX_RECURSIVE_NP" 'enumvalue)
	#.(swig-lispify "PTHREAD_MUTEX_ERRORCHECK_NP" 'enumvalue)
	#.(swig-lispify "PTHREAD_MUTEX_ADAPTIVE_NP" 'enumvalue)
	;;(#.(swig-lispify "PTHREAD_MUTEX_NORMAL" 'enumvalue) #.PTHREAD_MUTEX_TIMED_NP)
	;;(#.(swig-lispify "PTHREAD_MUTEX_RECURSIVE" 'enumvalue) #.PTHREAD_MUTEX_RECURSIVE_NP)
	;;(#.(swig-lispify "PTHREAD_MUTEX_ERRORCHECK" 'enumvalue) #.PTHREAD_MUTEX_ERRORCHECK_NP)
	;;(#.(swig-lispify "PTHREAD_MUTEX_DEFAULT" 'enumvalue) #.PTHREAD_MUTEX_NORMAL)
  )

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_TIMED_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_RECURSIVE_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_ERRORCHECK_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_ADAPTIVE_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_NORMAL" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_RECURSIVE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_ERRORCHECK" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_DEFAULT" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_MUTEX_STALLED" 'enumvalue)
	;;(#.(swig-lispify "PTHREAD_MUTEX_STALLED_NP" 'enumvalue) #.PTHREAD_MUTEX_STALLED)
	#.(swig-lispify "PTHREAD_MUTEX_ROBUST" 'enumvalue)
	;;(#.(swig-lispify "PTHREAD_MUTEX_ROBUST_NP" 'enumvalue) #.PTHREAD_MUTEX_ROBUST)
  )

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_STALLED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_STALLED_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_ROBUST" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_ROBUST_NP" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_PRIO_NONE" 'enumvalue)
	#.(swig-lispify "PTHREAD_PRIO_INHERIT" 'enumvalue)
	#.(swig-lispify "PTHREAD_PRIO_PROTECT" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_PRIO_NONE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_PRIO_INHERIT" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_PRIO_PROTECT" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_RWLOCK_PREFER_READER_NP" 'enumvalue)
	#.(swig-lispify "PTHREAD_RWLOCK_PREFER_WRITER_NP" 'enumvalue)
	#.(swig-lispify "PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP" 'enumvalue)
	;;(#.(swig-lispify "PTHREAD_RWLOCK_DEFAULT_NP" 'enumvalue) #.PTHREAD_RWLOCK_PREFER_READER_NP)
  )

(cl:export '#.(swig-lispify "PTHREAD_RWLOCK_PREFER_READER_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_RWLOCK_PREFER_WRITER_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_RWLOCK_DEFAULT_NP" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_INHERIT_SCHED" 'enumvalue)
	#.(swig-lispify "PTHREAD_EXPLICIT_SCHED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_INHERIT_SCHED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_EXPLICIT_SCHED" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_SCOPE_SYSTEM" 'enumvalue)
	#.(swig-lispify "PTHREAD_SCOPE_PROCESS" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_SCOPE_SYSTEM" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_SCOPE_PROCESS" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_PROCESS_PRIVATE" 'enumvalue)
	#.(swig-lispify "PTHREAD_PROCESS_SHARED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_PROCESS_PRIVATE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_PROCESS_SHARED" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_CANCEL_ENABLE" 'enumvalue)
	#.(swig-lispify "PTHREAD_CANCEL_DISABLE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CANCEL_ENABLE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CANCEL_DISABLE" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_CANCEL_DEFERRED" 'enumvalue)
	#.(swig-lispify "PTHREAD_CANCEL_ASYNCHRONOUS" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CANCEL_DEFERRED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CANCEL_ASYNCHRONOUS" 'enumvalue))

(cffi:defcenum #.(swig-lispify "GTypeDebugFlags" 'enumname)
	(#.(swig-lispify "G_TYPE_DEBUG_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_TYPE_DEBUG_OBJECTS" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_TYPE_DEBUG_SIGNALS" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_TYPE_DEBUG_INSTANCE_COUNT" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_TYPE_DEBUG_MASK" 'enumvalue :keyword) #.#x07))

(cl:export '#.(swig-lispify "GTypeDebugFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTypeFundamentalFlags" 'enumname)
	(#.(swig-lispify "G_TYPE_FLAG_CLASSED" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_TYPE_FLAG_INSTANTIATABLE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_TYPE_FLAG_DERIVABLE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_TYPE_FLAG_DEEP_DERIVABLE" 'enumvalue :keyword) #.(cl:ash 1 3)))

(cl:export '#.(swig-lispify "GTypeFundamentalFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTypeFlags" 'enumname)
	(#.(swig-lispify "G_TYPE_FLAG_ABSTRACT" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_TYPE_FLAG_VALUE_ABSTRACT" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_TYPE_FLAG_FINAL" 'enumvalue :keyword) #.(cl:ash 1 6)))

(cl:export '#.(swig-lispify "GTypeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GParamFlags" 'enumname)
	(#.(swig-lispify "G_PARAM_READABLE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_PARAM_WRITABLE" 'enumvalue :keyword) #.(cl:ash 1 1))
	;;(#.(swig-lispify "G_PARAM_READWRITE" 'enumvalue :keyword) #.(cl:logior G_PARAM_READABLE G_PARAM_WRITABLE))
	(#.(swig-lispify "G_PARAM_CONSTRUCT" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_PARAM_CONSTRUCT_ONLY" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_PARAM_LAX_VALIDATION" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_PARAM_STATIC_NAME" 'enumvalue :keyword) #.(cl:ash 1 5))
	;;(#.(swig-lispify "G_PARAM_PRIVATE" 'enumvalue :keyword) #.G_PARAM_STATIC_NAME)
	(#.(swig-lispify "G_PARAM_STATIC_NICK" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_PARAM_STATIC_BLURB" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_PARAM_EXPLICIT_NOTIFY" 'enumvalue :keyword) #.(cl:ash 1 30))
	;;(#.(swig-lispify "G_PARAM_DEPRECATED" 'enumvalue :keyword) #.gint) (1u << 31)
  )

(cl:export '#.(swig-lispify "GParamFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GSignalFlags" 'enumname)
	(#.(swig-lispify "G_SIGNAL_RUN_FIRST" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_SIGNAL_RUN_LAST" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_SIGNAL_RUN_CLEANUP" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_SIGNAL_NO_RECURSE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_SIGNAL_DETAILED" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_SIGNAL_ACTION" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_SIGNAL_NO_HOOKS" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_SIGNAL_MUST_COLLECT" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_SIGNAL_DEPRECATED" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "G_SIGNAL_ACCUMULATOR_FIRST_RUN" 'enumvalue :keyword) #.(cl:ash 1 17)))

(cl:export '#.(swig-lispify "GSignalFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GConnectFlags" 'enumname)
	(#.(swig-lispify "G_CONNECT_AFTER" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_CONNECT_SWAPPED" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GConnectFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GSignalMatchType" 'enumname)
	(#.(swig-lispify "G_SIGNAL_MATCH_ID" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_SIGNAL_MATCH_DETAIL" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_SIGNAL_MATCH_CLOSURE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_SIGNAL_MATCH_FUNC" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_SIGNAL_MATCH_DATA" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_SIGNAL_MATCH_UNBLOCKED" 'enumvalue :keyword) #.(cl:ash 1 5)))

(cl:export '#.(swig-lispify "GSignalMatchType" 'enumname))

(cffi:defcenum #.(swig-lispify "GBindingFlags" 'enumname)
	(#.(swig-lispify "G_BINDING_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_BINDING_BIDIRECTIONAL" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_BINDING_SYNC_CREATE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_BINDING_INVERT_BOOLEAN" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GBindingFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GAppInfoCreateFlags" 'enumname)
	(#.(swig-lispify "G_APP_INFO_CREATE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_APP_INFO_CREATE_NEEDS_TERMINAL" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_APP_INFO_CREATE_SUPPORTS_URIS" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GAppInfoCreateFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GConverterFlags" 'enumname)
	(#.(swig-lispify "G_CONVERTER_NO_FLAGS" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_CONVERTER_INPUT_AT_END" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_CONVERTER_FLUSH" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GConverterFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GConverterResult" 'enumname)
	(#.(swig-lispify "G_CONVERTER_ERROR" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_CONVERTER_CONVERTED" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_CONVERTER_FINISHED" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_CONVERTER_FLUSHED" 'enumvalue :keyword) #.3))

(cl:export '#.(swig-lispify "GConverterResult" 'enumname))

(cffi:defcenum #.(swig-lispify "GDataStreamByteOrder" 'enumname)
	#.(swig-lispify "G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GDataStreamByteOrder" 'enumname))

(cffi:defcenum #.(swig-lispify "GDataStreamNewlineType" 'enumname)
	#.(swig-lispify "G_DATA_STREAM_NEWLINE_TYPE_LF" 'enumvalue :keyword)
	#.(swig-lispify "G_DATA_STREAM_NEWLINE_TYPE_CR" 'enumvalue :keyword)
	#.(swig-lispify "G_DATA_STREAM_NEWLINE_TYPE_CR_LF" 'enumvalue :keyword)
	#.(swig-lispify "G_DATA_STREAM_NEWLINE_TYPE_ANY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GDataStreamNewlineType" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileAttributeType" 'enumname)
	(#.(swig-lispify "G_FILE_ATTRIBUTE_TYPE_INVALID" 'enumvalue :keyword) #.0)
	#.(swig-lispify "G_FILE_ATTRIBUTE_TYPE_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ATTRIBUTE_TYPE_BYTE_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ATTRIBUTE_TYPE_BOOLEAN" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ATTRIBUTE_TYPE_UINT32" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ATTRIBUTE_TYPE_INT32" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ATTRIBUTE_TYPE_UINT64" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ATTRIBUTE_TYPE_INT64" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ATTRIBUTE_TYPE_OBJECT" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ATTRIBUTE_TYPE_STRINGV" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GFileAttributeType" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileAttributeInfoFlags" 'enumname)
	(#.(swig-lispify "G_FILE_ATTRIBUTE_INFO_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GFileAttributeInfoFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileAttributeStatus" 'enumname)
	(#.(swig-lispify "G_FILE_ATTRIBUTE_STATUS_UNSET" 'enumvalue :keyword) #.0)
	#.(swig-lispify "G_FILE_ATTRIBUTE_STATUS_SET" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GFileAttributeStatus" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileQueryInfoFlags" 'enumname)
	(#.(swig-lispify "G_FILE_QUERY_INFO_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "GFileQueryInfoFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileCreateFlags" 'enumname)
	(#.(swig-lispify "G_FILE_CREATE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_FILE_CREATE_PRIVATE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_FILE_CREATE_REPLACE_DESTINATION" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GFileCreateFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileMeasureFlags" 'enumname)
	(#.(swig-lispify "G_FILE_MEASURE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_FILE_MEASURE_REPORT_ANY_ERROR" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_FILE_MEASURE_APPARENT_SIZE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_FILE_MEASURE_NO_XDEV" 'enumvalue :keyword) #.(cl:ash 1 3)))

(cl:export '#.(swig-lispify "GFileMeasureFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GMountMountFlags" 'enumname)
	(#.(swig-lispify "G_MOUNT_MOUNT_NONE" 'enumvalue :keyword) #.0))

(cl:export '#.(swig-lispify "GMountMountFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GMountUnmountFlags" 'enumname)
	(#.(swig-lispify "G_MOUNT_UNMOUNT_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_MOUNT_UNMOUNT_FORCE" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "GMountUnmountFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDriveStartFlags" 'enumname)
	(#.(swig-lispify "G_DRIVE_START_NONE" 'enumvalue :keyword) #.0))

(cl:export '#.(swig-lispify "GDriveStartFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDriveStartStopType" 'enumname)
	#.(swig-lispify "G_DRIVE_START_STOP_TYPE_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_DRIVE_START_STOP_TYPE_SHUTDOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_DRIVE_START_STOP_TYPE_NETWORK" 'enumvalue :keyword)
	#.(swig-lispify "G_DRIVE_START_STOP_TYPE_MULTIDISK" 'enumvalue :keyword)
	#.(swig-lispify "G_DRIVE_START_STOP_TYPE_PASSWORD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GDriveStartStopType" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileCopyFlags" 'enumname)
	(#.(swig-lispify "G_FILE_COPY_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_FILE_COPY_OVERWRITE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_FILE_COPY_BACKUP" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_FILE_COPY_NOFOLLOW_SYMLINKS" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_FILE_COPY_ALL_METADATA" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_FILE_COPY_NO_FALLBACK_FOR_MOVE" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_FILE_COPY_TARGET_DEFAULT_PERMS" 'enumvalue :keyword) #.(cl:ash 1 5)))

(cl:export '#.(swig-lispify "GFileCopyFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileMonitorFlags" 'enumname)
	(#.(swig-lispify "G_FILE_MONITOR_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_FILE_MONITOR_WATCH_MOUNTS" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_FILE_MONITOR_SEND_MOVED" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_FILE_MONITOR_WATCH_HARD_LINKS" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_FILE_MONITOR_WATCH_MOVES" 'enumvalue :keyword) #.(cl:ash 1 3)))

(cl:export '#.(swig-lispify "GFileMonitorFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileType" 'enumname)
	(#.(swig-lispify "G_FILE_TYPE_UNKNOWN" 'enumvalue :keyword) #.0)
	#.(swig-lispify "G_FILE_TYPE_REGULAR" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_TYPE_DIRECTORY" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_TYPE_SYMBOLIC_LINK" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_TYPE_SPECIAL" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_TYPE_SHORTCUT" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_TYPE_MOUNTABLE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GFileType" 'enumname))

(cffi:defcenum #.(swig-lispify "GFilesystemPreviewType" 'enumname)
	(#.(swig-lispify "G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS" 'enumvalue :keyword) #.0)
	#.(swig-lispify "G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL" 'enumvalue :keyword)
	#.(swig-lispify "G_FILESYSTEM_PREVIEW_TYPE_NEVER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GFilesystemPreviewType" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileMonitorEvent" 'enumname)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_CHANGED" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_DELETED" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_CREATED" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_PRE_UNMOUNT" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_UNMOUNTED" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_MOVED" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_RENAMED" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_MOVED_IN" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_MONITOR_EVENT_MOVED_OUT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GFileMonitorEvent" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOErrorEnum" 'enumname)
	#.(swig-lispify "G_IO_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_EXISTS" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_IS_DIRECTORY" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NOT_DIRECTORY" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NOT_EMPTY" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NOT_REGULAR_FILE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NOT_SYMBOLIC_LINK" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NOT_MOUNTABLE_FILE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_FILENAME_TOO_LONG" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_INVALID_FILENAME" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_TOO_MANY_LINKS" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NO_SPACE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_INVALID_ARGUMENT" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_PERMISSION_DENIED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NOT_SUPPORTED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NOT_MOUNTED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_ALREADY_MOUNTED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_CLOSED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_CANCELLED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_PENDING" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_READ_ONLY" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_CANT_CREATE_BACKUP" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_WRONG_ETAG" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_TIMED_OUT" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_WOULD_RECURSE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_BUSY" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_WOULD_BLOCK" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_HOST_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_WOULD_MERGE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_FAILED_HANDLED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_TOO_MANY_OPEN_FILES" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NOT_INITIALIZED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_ADDRESS_IN_USE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_PARTIAL_INPUT" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_INVALID_DATA" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_DBUS_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_HOST_UNREACHABLE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_NETWORK_UNREACHABLE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_CONNECTION_REFUSED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_PROXY_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_PROXY_AUTH_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_PROXY_NEED_AUTH" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_PROXY_NOT_ALLOWED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_BROKEN_PIPE" 'enumvalue :keyword)
  ;;(#.(swig-lispify "G_IO_ERROR_CONNECTION_CLOSED" 'enumvalue :keyword) #.G_IO_ERROR_BROKEN_PIPE)
	#.(swig-lispify "G_IO_ERROR_NOT_CONNECTED" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_MESSAGE_TOO_LARGE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GIOErrorEnum" 'enumname))

(cffi:defcenum #.(swig-lispify "GAskPasswordFlags" 'enumname)
	(#.(swig-lispify "G_ASK_PASSWORD_NEED_PASSWORD" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_ASK_PASSWORD_NEED_USERNAME" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_ASK_PASSWORD_NEED_DOMAIN" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_ASK_PASSWORD_SAVING_SUPPORTED" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_ASK_PASSWORD_ANONYMOUS_SUPPORTED" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_ASK_PASSWORD_TCRYPT" 'enumvalue :keyword) #.(cl:ash 1 5)))

(cl:export '#.(swig-lispify "GAskPasswordFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GPasswordSave" 'enumname)
	#.(swig-lispify "G_PASSWORD_SAVE_NEVER" 'enumvalue :keyword)
	#.(swig-lispify "G_PASSWORD_SAVE_FOR_SESSION" 'enumvalue :keyword)
	#.(swig-lispify "G_PASSWORD_SAVE_PERMANENTLY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GPasswordSave" 'enumname))

(cffi:defcenum #.(swig-lispify "GMountOperationResult" 'enumname)
	#.(swig-lispify "G_MOUNT_OPERATION_HANDLED" 'enumvalue :keyword)
	#.(swig-lispify "G_MOUNT_OPERATION_ABORTED" 'enumvalue :keyword)
	#.(swig-lispify "G_MOUNT_OPERATION_UNHANDLED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GMountOperationResult" 'enumname))

(cffi:defcenum #.(swig-lispify "GOutputStreamSpliceFlags" 'enumname)
	(#.(swig-lispify "G_OUTPUT_STREAM_SPLICE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GOutputStreamSpliceFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOStreamSpliceFlags" 'enumname)
	(#.(swig-lispify "G_IO_STREAM_SPLICE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_IO_STREAM_SPLICE_CLOSE_STREAM1" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_IO_STREAM_SPLICE_CLOSE_STREAM2" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_IO_STREAM_SPLICE_WAIT_FOR_BOTH" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GIOStreamSpliceFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GEmblemOrigin" 'enumname)
	#.(swig-lispify "G_EMBLEM_ORIGIN_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_EMBLEM_ORIGIN_DEVICE" 'enumvalue :keyword)
	#.(swig-lispify "G_EMBLEM_ORIGIN_LIVEMETADATA" 'enumvalue :keyword)
	#.(swig-lispify "G_EMBLEM_ORIGIN_TAG" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GEmblemOrigin" 'enumname))

(cffi:defcenum #.(swig-lispify "GResolverError" 'enumname)
	#.(swig-lispify "G_RESOLVER_ERROR_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_RESOLVER_ERROR_TEMPORARY_FAILURE" 'enumvalue :keyword)
	#.(swig-lispify "G_RESOLVER_ERROR_INTERNAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GResolverError" 'enumname))

(cffi:defcenum #.(swig-lispify "GResolverRecordType" 'enumname)
	(#.(swig-lispify "G_RESOLVER_RECORD_SRV" 'enumvalue :keyword) #.1)
	#.(swig-lispify "G_RESOLVER_RECORD_MX" 'enumvalue :keyword)
	#.(swig-lispify "G_RESOLVER_RECORD_TXT" 'enumvalue :keyword)
	#.(swig-lispify "G_RESOLVER_RECORD_SOA" 'enumvalue :keyword)
	#.(swig-lispify "G_RESOLVER_RECORD_NS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GResolverRecordType" 'enumname))

(cffi:defcenum #.(swig-lispify "GResourceError" 'enumname)
	#.(swig-lispify "G_RESOURCE_ERROR_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_RESOURCE_ERROR_INTERNAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GResourceError" 'enumname))

(cffi:defcenum #.(swig-lispify "GResourceFlags" 'enumname)
	(#.(swig-lispify "G_RESOURCE_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_RESOURCE_FLAGS_COMPRESSED" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "GResourceFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GResourceLookupFlags" 'enumname)
	(#.(swig-lispify "G_RESOURCE_LOOKUP_FLAGS_NONE" 'enumvalue :keyword) #.0))

(cl:export '#.(swig-lispify "GResourceLookupFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GSocketFamily" 'enumname)
	#.(swig-lispify "G_SOCKET_FAMILY_INVALID" 'enumvalue :keyword)
	(#.(swig-lispify "G_SOCKET_FAMILY_UNIX" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_SOCKET_FAMILY_IPV4" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_SOCKET_FAMILY_IPV6" 'enumvalue :keyword) #.10))

(cl:export '#.(swig-lispify "GSocketFamily" 'enumname))

(cffi:defcenum #.(swig-lispify "GSocketType" 'enumname)
	#.(swig-lispify "G_SOCKET_TYPE_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_TYPE_STREAM" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_TYPE_DATAGRAM" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_TYPE_SEQPACKET" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GSocketType" 'enumname))

(cffi:defcenum #.(swig-lispify "GSocketMsgFlags" 'enumname)
	#.(swig-lispify "G_SOCKET_MSG_NONE" 'enumvalue :keyword)
	(#.(swig-lispify "G_SOCKET_MSG_OOB" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_SOCKET_MSG_PEEK" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_SOCKET_MSG_DONTROUTE" 'enumvalue :keyword) #.4))

(cl:export '#.(swig-lispify "GSocketMsgFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GSocketProtocol" 'enumname)
	(#.(swig-lispify "G_SOCKET_PROTOCOL_UNKNOWN" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "G_SOCKET_PROTOCOL_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_SOCKET_PROTOCOL_TCP" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "G_SOCKET_PROTOCOL_UDP" 'enumvalue :keyword) #.17)
	(#.(swig-lispify "G_SOCKET_PROTOCOL_SCTP" 'enumvalue :keyword) #.132))

(cl:export '#.(swig-lispify "GSocketProtocol" 'enumname))

(cffi:defcenum #.(swig-lispify "GZlibCompressorFormat" 'enumname)
	#.(swig-lispify "G_ZLIB_COMPRESSOR_FORMAT_ZLIB" 'enumvalue :keyword)
	#.(swig-lispify "G_ZLIB_COMPRESSOR_FORMAT_GZIP" 'enumvalue :keyword)
	#.(swig-lispify "G_ZLIB_COMPRESSOR_FORMAT_RAW" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GZlibCompressorFormat" 'enumname))

(cffi:defcenum #.(swig-lispify "GUnixSocketAddressType" 'enumname)
	#.(swig-lispify "G_UNIX_SOCKET_ADDRESS_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_UNIX_SOCKET_ADDRESS_ANONYMOUS" 'enumvalue :keyword)
	#.(swig-lispify "G_UNIX_SOCKET_ADDRESS_PATH" 'enumvalue :keyword)
	#.(swig-lispify "G_UNIX_SOCKET_ADDRESS_ABSTRACT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUnixSocketAddressType" 'enumname))

(cffi:defcenum #.(swig-lispify "GBusType" 'enumname)
	(#.(swig-lispify "G_BUS_TYPE_STARTER" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "G_BUS_TYPE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_BUS_TYPE_SYSTEM" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_BUS_TYPE_SESSION" 'enumvalue :keyword) #.2))

(cl:export '#.(swig-lispify "GBusType" 'enumname))

(cffi:defcenum #.(swig-lispify "GBusNameOwnerFlags" 'enumname)
	(#.(swig-lispify "G_BUS_NAME_OWNER_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_BUS_NAME_OWNER_FLAGS_REPLACE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_BUS_NAME_OWNER_FLAGS_DO_NOT_QUEUE" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GBusNameOwnerFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GBusNameWatcherFlags" 'enumname)
	(#.(swig-lispify "G_BUS_NAME_WATCHER_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_BUS_NAME_WATCHER_FLAGS_AUTO_START" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "GBusNameWatcherFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusProxyFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_PROXY_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_DBUS_PROXY_FLAGS_NO_MATCH_RULE" 'enumvalue :keyword) #.(cl:ash 1 5)))

(cl:export '#.(swig-lispify "GDBusProxyFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusError" 'enumname)
	#.(swig-lispify "G_DBUS_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_NO_MEMORY" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SERVICE_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_NAME_HAS_NO_OWNER" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_NO_REPLY" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_IO_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_BAD_ADDRESS" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_NOT_SUPPORTED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_LIMITS_EXCEEDED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_ACCESS_DENIED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_AUTH_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_NO_SERVER" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_TIMEOUT" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_NO_NETWORK" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_ADDRESS_IN_USE" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_DISCONNECTED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_INVALID_ARGS" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_FILE_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_FILE_EXISTS" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_UNKNOWN_METHOD" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_TIMED_OUT" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_MATCH_RULE_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_MATCH_RULE_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_EXEC_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_FORK_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_CHILD_EXITED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_CHILD_SIGNALED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_SETUP_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_CONFIG_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_SERVICE_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_FILE_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SPAWN_NO_MEMORY" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_INVALID_SIGNATURE" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_INVALID_FILE_CONTENT" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_OBJECT_PATH_IN_USE" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_UNKNOWN_OBJECT" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_UNKNOWN_INTERFACE" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_UNKNOWN_PROPERTY" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_ERROR_PROPERTY_READ_ONLY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GDBusError" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusConnectionFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_CONNECTION_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER" 'enumvalue :keyword) #.(cl:ash 1 5)))

(cl:export '#.(swig-lispify "GDBusConnectionFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusCapabilityFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_CAPABILITY_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "GDBusCapabilityFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusCallFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_CALL_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_CALL_FLAGS_NO_AUTO_START" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GDBusCallFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusMessageType" 'enumname)
	#.(swig-lispify "G_DBUS_MESSAGE_TYPE_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_TYPE_METHOD_CALL" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_TYPE_METHOD_RETURN" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_TYPE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_TYPE_SIGNAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GDBusMessageType" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusMessageFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_MESSAGE_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_DBUS_MESSAGE_FLAGS_NO_AUTO_START" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GDBusMessageFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusMessageHeaderField" 'enumname)
	#.(swig-lispify "G_DBUS_MESSAGE_HEADER_FIELD_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_HEADER_FIELD_PATH" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_HEADER_FIELD_MEMBER" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_HEADER_FIELD_SENDER" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE" 'enumvalue :keyword)
	#.(swig-lispify "G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GDBusMessageHeaderField" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusPropertyInfoFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_PROPERTY_INFO_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_PROPERTY_INFO_FLAGS_READABLE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GDBusPropertyInfoFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusSubtreeFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_SUBTREE_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "GDBusSubtreeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusServerFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_SERVER_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_SERVER_FLAGS_RUN_IN_THREAD" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_DBUS_SERVER_FLAGS_AUTHENTICATION_REQUIRE_SAME_USER" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GDBusServerFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusSignalFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_SIGNAL_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GDBusSignalFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusSendMessageFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_SEND_MESSAGE_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "GDBusSendMessageFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GCredentialsType" 'enumname)
	#.(swig-lispify "G_CREDENTIALS_TYPE_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_CREDENTIALS_TYPE_LINUX_UCRED" 'enumvalue :keyword)
	#.(swig-lispify "G_CREDENTIALS_TYPE_FREEBSD_CMSGCRED" 'enumvalue :keyword)
	#.(swig-lispify "G_CREDENTIALS_TYPE_OPENBSD_SOCKPEERCRED" 'enumvalue :keyword)
	#.(swig-lispify "G_CREDENTIALS_TYPE_SOLARIS_UCRED" 'enumvalue :keyword)
	#.(swig-lispify "G_CREDENTIALS_TYPE_NETBSD_UNPCBID" 'enumvalue :keyword)
	#.(swig-lispify "G_CREDENTIALS_TYPE_APPLE_XUCRED" 'enumvalue :keyword)
	#.(swig-lispify "G_CREDENTIALS_TYPE_WIN32_PID" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GCredentialsType" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GDBusMessageByteOrder" 'enumname)
	(#.(swig-lispify "G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN" 'enumvalue :keyword) #.#\B)
	(#.(swig-lispify "G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN" 'enumvalue :keyword) #.#\l))

;;(cl:export '#.(swig-lispify "GDBusMessageByteOrder" 'enumname))

(cffi:defcenum #.(swig-lispify "GApplicationFlags" 'enumname)
	#.(swig-lispify "G_APPLICATION_FLAGS_NONE" 'enumvalue :keyword)
	(#.(swig-lispify "G_APPLICATION_IS_SERVICE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_APPLICATION_IS_LAUNCHER" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_APPLICATION_HANDLES_OPEN" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_APPLICATION_HANDLES_COMMAND_LINE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_APPLICATION_SEND_ENVIRONMENT" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_APPLICATION_NON_UNIQUE" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_APPLICATION_CAN_OVERRIDE_APP_ID" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_APPLICATION_ALLOW_REPLACEMENT" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_APPLICATION_REPLACE" 'enumvalue :keyword) #.(cl:ash 1 8)))

(cl:export '#.(swig-lispify "GApplicationFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsError" 'enumname)
	#.(swig-lispify "G_TLS_ERROR_UNAVAILABLE" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_ERROR_MISC" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_ERROR_BAD_CERTIFICATE" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_ERROR_NOT_TLS" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_ERROR_HANDSHAKE" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_ERROR_CERTIFICATE_REQUIRED" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_ERROR_EOF" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_ERROR_INAPPROPRIATE_FALLBACK" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_ERROR_BAD_CERTIFICATE_PASSWORD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTlsError" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsCertificateFlags" 'enumname)
	(#.(swig-lispify "G_TLS_CERTIFICATE_UNKNOWN_CA" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_TLS_CERTIFICATE_BAD_IDENTITY" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_TLS_CERTIFICATE_NOT_ACTIVATED" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_TLS_CERTIFICATE_EXPIRED" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_TLS_CERTIFICATE_REVOKED" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_TLS_CERTIFICATE_INSECURE" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_TLS_CERTIFICATE_GENERIC_ERROR" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_TLS_CERTIFICATE_VALIDATE_ALL" 'enumvalue :keyword) #.#x007f))

(cl:export '#.(swig-lispify "GTlsCertificateFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsAuthenticationMode" 'enumname)
	#.(swig-lispify "G_TLS_AUTHENTICATION_NONE" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_AUTHENTICATION_REQUESTED" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_AUTHENTICATION_REQUIRED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTlsAuthenticationMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsChannelBindingType" 'enumname)
	#.(swig-lispify "G_TLS_CHANNEL_BINDING_TLS_UNIQUE" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_CHANNEL_BINDING_TLS_SERVER_END_POINT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTlsChannelBindingType" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsChannelBindingError" 'enumname)
	#.(swig-lispify "G_TLS_CHANNEL_BINDING_ERROR_NOT_IMPLEMENTED" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_CHANNEL_BINDING_ERROR_INVALID_STATE" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_CHANNEL_BINDING_ERROR_NOT_AVAILABLE" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_CHANNEL_BINDING_ERROR_NOT_SUPPORTED" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_CHANNEL_BINDING_ERROR_GENERAL_ERROR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTlsChannelBindingError" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsRehandshakeMode" 'enumname)
	#.(swig-lispify "G_TLS_REHANDSHAKE_NEVER" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_REHANDSHAKE_SAFELY" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_REHANDSHAKE_UNSAFELY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTlsRehandshakeMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsPasswordFlags" 'enumname)
	(#.(swig-lispify "G_TLS_PASSWORD_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_TLS_PASSWORD_RETRY" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_TLS_PASSWORD_MANY_TRIES" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_TLS_PASSWORD_FINAL_TRY" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_TLS_PASSWORD_PKCS11_USER" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_TLS_PASSWORD_PKCS11_SECURITY_OFFICER" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_TLS_PASSWORD_PKCS11_CONTEXT_SPECIFIC" 'enumvalue :keyword) #.(cl:ash 1 6)))

(cl:export '#.(swig-lispify "GTlsPasswordFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsInteractionResult" 'enumname)
	#.(swig-lispify "G_TLS_INTERACTION_UNHANDLED" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_INTERACTION_HANDLED" 'enumvalue :keyword)
	#.(swig-lispify "G_TLS_INTERACTION_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTlsInteractionResult" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusInterfaceSkeletonFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_INTERFACE_SKELETON_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "GDBusInterfaceSkeletonFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GDBusObjectManagerClientFlags" 'enumname)
	(#.(swig-lispify "G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "GDBusObjectManagerClientFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsDatabaseVerifyFlags" 'enumname)
	(#.(swig-lispify "G_TLS_DATABASE_VERIFY_NONE" 'enumvalue :keyword) #.0))

(cl:export '#.(swig-lispify "GTlsDatabaseVerifyFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsDatabaseLookupFlags" 'enumname)
	(#.(swig-lispify "G_TLS_DATABASE_LOOKUP_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_TLS_DATABASE_LOOKUP_KEYPAIR" 'enumvalue :keyword) #.1))

(cl:export '#.(swig-lispify "GTlsDatabaseLookupFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsCertificateRequestFlags" 'enumname)
	(#.(swig-lispify "G_TLS_CERTIFICATE_REQUEST_NONE" 'enumvalue :keyword) #.0))

(cl:export '#.(swig-lispify "GTlsCertificateRequestFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTlsProtocolVersion" 'enumname)
	(#.(swig-lispify "G_TLS_PROTOCOL_VERSION_UNKNOWN" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_TLS_PROTOCOL_VERSION_SSL_3_0" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_TLS_PROTOCOL_VERSION_TLS_1_0" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_TLS_PROTOCOL_VERSION_TLS_1_1" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "G_TLS_PROTOCOL_VERSION_TLS_1_2" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "G_TLS_PROTOCOL_VERSION_TLS_1_3" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "G_TLS_PROTOCOL_VERSION_DTLS_1_0" 'enumvalue :keyword) #.201)
	(#.(swig-lispify "G_TLS_PROTOCOL_VERSION_DTLS_1_2" 'enumvalue :keyword) #.202))

(cl:export '#.(swig-lispify "GTlsProtocolVersion" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOModuleScopeFlags" 'enumname)
	#.(swig-lispify "G_IO_MODULE_SCOPE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_MODULE_SCOPE_BLOCK_DUPLICATES" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GIOModuleScopeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GSocketClientEvent" 'enumname)
	#.(swig-lispify "G_SOCKET_CLIENT_RESOLVING" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_CLIENT_RESOLVED" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_CLIENT_CONNECTING" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_CLIENT_CONNECTED" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_CLIENT_PROXY_NEGOTIATING" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_CLIENT_PROXY_NEGOTIATED" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_CLIENT_TLS_HANDSHAKING" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_CLIENT_TLS_HANDSHAKED" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_CLIENT_COMPLETE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GSocketClientEvent" 'enumname))

(cffi:defcenum #.(swig-lispify "GSocketListenerEvent" 'enumname)
	#.(swig-lispify "G_SOCKET_LISTENER_BINDING" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_LISTENER_BOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_LISTENER_LISTENING" 'enumvalue :keyword)
	#.(swig-lispify "G_SOCKET_LISTENER_LISTENED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GSocketListenerEvent" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestDBusFlags" 'enumname)
	(#.(swig-lispify "G_TEST_DBUS_NONE" 'enumvalue :keyword) #.0))

(cl:export '#.(swig-lispify "GTestDBusFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GSubprocessFlags" 'enumname)
	(#.(swig-lispify "G_SUBPROCESS_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_SUBPROCESS_FLAGS_STDIN_PIPE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_SUBPROCESS_FLAGS_STDIN_INHERIT" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_SUBPROCESS_FLAGS_STDOUT_PIPE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_SUBPROCESS_FLAGS_STDOUT_SILENCE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_SUBPROCESS_FLAGS_STDERR_PIPE" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_SUBPROCESS_FLAGS_STDERR_SILENCE" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_SUBPROCESS_FLAGS_STDERR_MERGE" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_SUBPROCESS_FLAGS_INHERIT_FDS" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_SUBPROCESS_FLAGS_SEARCH_PATH_FROM_ENVP" 'enumvalue :keyword) #.(cl:ash 1 8)))

(cl:export '#.(swig-lispify "GSubprocessFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GNotificationPriority" 'enumname)
	#.(swig-lispify "G_NOTIFICATION_PRIORITY_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "G_NOTIFICATION_PRIORITY_LOW" 'enumvalue :keyword)
	#.(swig-lispify "G_NOTIFICATION_PRIORITY_HIGH" 'enumvalue :keyword)
	#.(swig-lispify "G_NOTIFICATION_PRIORITY_URGENT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GNotificationPriority" 'enumname))

(cffi:defcenum #.(swig-lispify "GNetworkConnectivity" 'enumname)
	(#.(swig-lispify "G_NETWORK_CONNECTIVITY_LOCAL" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_NETWORK_CONNECTIVITY_LIMITED" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_NETWORK_CONNECTIVITY_PORTAL" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "G_NETWORK_CONNECTIVITY_FULL" 'enumvalue :keyword) #.4))

(cl:export '#.(swig-lispify "GNetworkConnectivity" 'enumname))

(cffi:defcenum #.(swig-lispify "GPollableReturn" 'enumname)
	(#.(swig-lispify "G_POLLABLE_RETURN_FAILED" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_POLLABLE_RETURN_OK" 'enumvalue :keyword) #.1)
	;;(#.(swig-lispify "G_POLLABLE_RETURN_WOULD_BLOCK" 'enumvalue :keyword) #.-G_IO_ERROR_WOD_BOCK)
  )

(cl:export '#.(swig-lispify "GPollableReturn" 'enumname))

(cffi:defcenum #.(swig-lispify "GMemoryMonitorWarningLevel" 'enumname)
	(#.(swig-lispify "G_MEMORY_MONITOR_WARNING_LEVEL_LOW" 'enumvalue :keyword) #.50)
	(#.(swig-lispify "G_MEMORY_MONITOR_WARNING_LEVEL_MEDIUM" 'enumvalue :keyword) #.100)
	(#.(swig-lispify "G_MEMORY_MONITOR_WARNING_LEVEL_CRITICAL" 'enumvalue :keyword) #.255))

(cl:export '#.(swig-lispify "GMemoryMonitorWarningLevel" 'enumname))

(defanonenum 
	#.(swig-lispify "_PC_LINK_MAX" 'enumvalue)
	#.(swig-lispify "_PC_MAX_CANON" 'enumvalue)
	#.(swig-lispify "_PC_MAX_INPUT" 'enumvalue)
	#.(swig-lispify "_PC_NAME_MAX" 'enumvalue)
	#.(swig-lispify "_PC_PATH_MAX" 'enumvalue)
	#.(swig-lispify "_PC_PIPE_BUF" 'enumvalue)
	#.(swig-lispify "_PC_CHOWN_RESTRICTED" 'enumvalue)
	#.(swig-lispify "_PC_NO_TRUNC" 'enumvalue)
	#.(swig-lispify "_PC_VDISABLE" 'enumvalue)
	#.(swig-lispify "_PC_SYNC_IO" 'enumvalue)
	#.(swig-lispify "_PC_ASYNC_IO" 'enumvalue)
	#.(swig-lispify "_PC_PRIO_IO" 'enumvalue)
	#.(swig-lispify "_PC_SOCK_MAXBUF" 'enumvalue)
	#.(swig-lispify "_PC_FILESIZEBITS" 'enumvalue)
	#.(swig-lispify "_PC_REC_INCR_XFER_SIZE" 'enumvalue)
	#.(swig-lispify "_PC_REC_MAX_XFER_SIZE" 'enumvalue)
	#.(swig-lispify "_PC_REC_MIN_XFER_SIZE" 'enumvalue)
	#.(swig-lispify "_PC_REC_XFER_ALIGN" 'enumvalue)
	#.(swig-lispify "_PC_ALLOC_SIZE_MIN" 'enumvalue)
	#.(swig-lispify "_PC_SYMLINK_MAX" 'enumvalue)
	#.(swig-lispify "_PC_2_SYMLINKS" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_LINK_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_MAX_CANON" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_MAX_INPUT" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_NAME_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_PATH_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_PIPE_BUF" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_CHOWN_RESTRICTED" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_NO_TRUNC" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_VDISABLE" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_SYNC_IO" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_ASYNC_IO" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_PRIO_IO" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_SOCK_MAXBUF" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_FILESIZEBITS" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_REC_INCR_XFER_SIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_REC_MAX_XFER_SIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_REC_MIN_XFER_SIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_REC_XFER_ALIGN" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_ALLOC_SIZE_MIN" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_SYMLINK_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_PC_2_SYMLINKS" 'enumvalue))

(defanonenum 
	#.(swig-lispify "_SC_ARG_MAX" 'enumvalue)
	#.(swig-lispify "_SC_CHILD_MAX" 'enumvalue)
	#.(swig-lispify "_SC_CLK_TCK" 'enumvalue)
	#.(swig-lispify "_SC_NGROUPS_MAX" 'enumvalue)
	#.(swig-lispify "_SC_OPEN_MAX" 'enumvalue)
	#.(swig-lispify "_SC_STREAM_MAX" 'enumvalue)
	#.(swig-lispify "_SC_TZNAME_MAX" 'enumvalue)
	#.(swig-lispify "_SC_JOB_CONTROL" 'enumvalue)
	#.(swig-lispify "_SC_SAVED_IDS" 'enumvalue)
	#.(swig-lispify "_SC_REALTIME_SIGNALS" 'enumvalue)
	#.(swig-lispify "_SC_PRIORITY_SCHEDULING" 'enumvalue)
	#.(swig-lispify "_SC_TIMERS" 'enumvalue)
	#.(swig-lispify "_SC_ASYNCHRONOUS_IO" 'enumvalue)
	#.(swig-lispify "_SC_PRIORITIZED_IO" 'enumvalue)
	#.(swig-lispify "_SC_SYNCHRONIZED_IO" 'enumvalue)
	#.(swig-lispify "_SC_FSYNC" 'enumvalue)
	#.(swig-lispify "_SC_MAPPED_FILES" 'enumvalue)
	#.(swig-lispify "_SC_MEMLOCK" 'enumvalue)
	#.(swig-lispify "_SC_MEMLOCK_RANGE" 'enumvalue)
	#.(swig-lispify "_SC_MEMORY_PROTECTION" 'enumvalue)
	#.(swig-lispify "_SC_MESSAGE_PASSING" 'enumvalue)
	#.(swig-lispify "_SC_SEMAPHORES" 'enumvalue)
	#.(swig-lispify "_SC_SHARED_MEMORY_OBJECTS" 'enumvalue)
	#.(swig-lispify "_SC_AIO_LISTIO_MAX" 'enumvalue)
	#.(swig-lispify "_SC_AIO_MAX" 'enumvalue)
	#.(swig-lispify "_SC_AIO_PRIO_DELTA_MAX" 'enumvalue)
	#.(swig-lispify "_SC_DELAYTIMER_MAX" 'enumvalue)
	#.(swig-lispify "_SC_MQ_OPEN_MAX" 'enumvalue)
	#.(swig-lispify "_SC_MQ_PRIO_MAX" 'enumvalue)
	#.(swig-lispify "_SC_VERSION" 'enumvalue)
	#.(swig-lispify "_SC_PAGESIZE" 'enumvalue)
	#.(swig-lispify "_SC_RTSIG_MAX" 'enumvalue)
	#.(swig-lispify "_SC_SEM_NSEMS_MAX" 'enumvalue)
	#.(swig-lispify "_SC_SEM_VALUE_MAX" 'enumvalue)
	#.(swig-lispify "_SC_SIGQUEUE_MAX" 'enumvalue)
	#.(swig-lispify "_SC_TIMER_MAX" 'enumvalue)
	#.(swig-lispify "_SC_BC_BASE_MAX" 'enumvalue)
	#.(swig-lispify "_SC_BC_DIM_MAX" 'enumvalue)
	#.(swig-lispify "_SC_BC_SCALE_MAX" 'enumvalue)
	#.(swig-lispify "_SC_BC_STRING_MAX" 'enumvalue)
	#.(swig-lispify "_SC_COLL_WEIGHTS_MAX" 'enumvalue)
	#.(swig-lispify "_SC_EQUIV_CLASS_MAX" 'enumvalue)
	#.(swig-lispify "_SC_EXPR_NEST_MAX" 'enumvalue)
	#.(swig-lispify "_SC_LINE_MAX" 'enumvalue)
	#.(swig-lispify "_SC_RE_DUP_MAX" 'enumvalue)
	#.(swig-lispify "_SC_CHARCLASS_NAME_MAX" 'enumvalue)
	#.(swig-lispify "_SC_2_VERSION" 'enumvalue)
	#.(swig-lispify "_SC_2_C_BIND" 'enumvalue)
	#.(swig-lispify "_SC_2_C_DEV" 'enumvalue)
	#.(swig-lispify "_SC_2_FORT_DEV" 'enumvalue)
	#.(swig-lispify "_SC_2_FORT_RUN" 'enumvalue)
	#.(swig-lispify "_SC_2_SW_DEV" 'enumvalue)
	#.(swig-lispify "_SC_2_LOCALEDEF" 'enumvalue)
	#.(swig-lispify "_SC_PII" 'enumvalue)
	#.(swig-lispify "_SC_PII_XTI" 'enumvalue)
	#.(swig-lispify "_SC_PII_SOCKET" 'enumvalue)
	#.(swig-lispify "_SC_PII_INTERNET" 'enumvalue)
	#.(swig-lispify "_SC_PII_OSI" 'enumvalue)
	#.(swig-lispify "_SC_POLL" 'enumvalue)
	#.(swig-lispify "_SC_SELECT" 'enumvalue)
	#.(swig-lispify "_SC_UIO_MAXIOV" 'enumvalue)
  ;;(#.(swig-lispify "_SC_IOV_MAX" 'enumvalue) #._SC_UIO_MAXIOV)
	#.(swig-lispify "_SC_PII_INTERNET_STREAM" 'enumvalue)
	#.(swig-lispify "_SC_PII_INTERNET_DGRAM" 'enumvalue)
	#.(swig-lispify "_SC_PII_OSI_COTS" 'enumvalue)
	#.(swig-lispify "_SC_PII_OSI_CLTS" 'enumvalue)
	#.(swig-lispify "_SC_PII_OSI_M" 'enumvalue)
	#.(swig-lispify "_SC_T_IOV_MAX" 'enumvalue)
	#.(swig-lispify "_SC_THREADS" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_SAFE_FUNCTIONS" 'enumvalue)
	#.(swig-lispify "_SC_GETGR_R_SIZE_MAX" 'enumvalue)
	#.(swig-lispify "_SC_GETPW_R_SIZE_MAX" 'enumvalue)
	#.(swig-lispify "_SC_LOGIN_NAME_MAX" 'enumvalue)
	#.(swig-lispify "_SC_TTY_NAME_MAX" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_DESTRUCTOR_ITERATIONS" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_KEYS_MAX" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_STACK_MIN" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_THREADS_MAX" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_ATTR_STACKADDR" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_ATTR_STACKSIZE" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_PRIORITY_SCHEDULING" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_PRIO_INHERIT" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_PRIO_PROTECT" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_PROCESS_SHARED" 'enumvalue)
	#.(swig-lispify "_SC_NPROCESSORS_CONF" 'enumvalue)
	#.(swig-lispify "_SC_NPROCESSORS_ONLN" 'enumvalue)
	#.(swig-lispify "_SC_PHYS_PAGES" 'enumvalue)
	#.(swig-lispify "_SC_AVPHYS_PAGES" 'enumvalue)
	#.(swig-lispify "_SC_ATEXIT_MAX" 'enumvalue)
	#.(swig-lispify "_SC_PASS_MAX" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_VERSION" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_XCU_VERSION" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_UNIX" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_CRYPT" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_ENH_I18N" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_SHM" 'enumvalue)
	#.(swig-lispify "_SC_2_CHAR_TERM" 'enumvalue)
	#.(swig-lispify "_SC_2_C_VERSION" 'enumvalue)
	#.(swig-lispify "_SC_2_UPE" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_XPG2" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_XPG3" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_XPG4" 'enumvalue)
	#.(swig-lispify "_SC_CHAR_BIT" 'enumvalue)
	#.(swig-lispify "_SC_CHAR_MAX" 'enumvalue)
	#.(swig-lispify "_SC_CHAR_MIN" 'enumvalue)
	#.(swig-lispify "_SC_INT_MAX" 'enumvalue)
	#.(swig-lispify "_SC_INT_MIN" 'enumvalue)
	#.(swig-lispify "_SC_LONG_BIT" 'enumvalue)
	#.(swig-lispify "_SC_WORD_BIT" 'enumvalue)
	#.(swig-lispify "_SC_MB_LEN_MAX" 'enumvalue)
	#.(swig-lispify "_SC_NZERO" 'enumvalue)
	#.(swig-lispify "_SC_SSIZE_MAX" 'enumvalue)
	#.(swig-lispify "_SC_SCHAR_MAX" 'enumvalue)
	#.(swig-lispify "_SC_SCHAR_MIN" 'enumvalue)
	#.(swig-lispify "_SC_SHRT_MAX" 'enumvalue)
	#.(swig-lispify "_SC_SHRT_MIN" 'enumvalue)
	#.(swig-lispify "_SC_UCHAR_MAX" 'enumvalue)
	#.(swig-lispify "_SC_UINT_MAX" 'enumvalue)
	#.(swig-lispify "_SC_ULONG_MAX" 'enumvalue)
	#.(swig-lispify "_SC_USHRT_MAX" 'enumvalue)
	#.(swig-lispify "_SC_NL_ARGMAX" 'enumvalue)
	#.(swig-lispify "_SC_NL_LANGMAX" 'enumvalue)
	#.(swig-lispify "_SC_NL_MSGMAX" 'enumvalue)
	#.(swig-lispify "_SC_NL_NMAX" 'enumvalue)
	#.(swig-lispify "_SC_NL_SETMAX" 'enumvalue)
	#.(swig-lispify "_SC_NL_TEXTMAX" 'enumvalue)
	#.(swig-lispify "_SC_XBS5_ILP32_OFF32" 'enumvalue)
	#.(swig-lispify "_SC_XBS5_ILP32_OFFBIG" 'enumvalue)
	#.(swig-lispify "_SC_XBS5_LP64_OFF64" 'enumvalue)
	#.(swig-lispify "_SC_XBS5_LPBIG_OFFBIG" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_LEGACY" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_REALTIME" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_REALTIME_THREADS" 'enumvalue)
	#.(swig-lispify "_SC_ADVISORY_INFO" 'enumvalue)
	#.(swig-lispify "_SC_BARRIERS" 'enumvalue)
	#.(swig-lispify "_SC_BASE" 'enumvalue)
	#.(swig-lispify "_SC_C_LANG_SUPPORT" 'enumvalue)
	#.(swig-lispify "_SC_C_LANG_SUPPORT_R" 'enumvalue)
	#.(swig-lispify "_SC_CLOCK_SELECTION" 'enumvalue)
	#.(swig-lispify "_SC_CPUTIME" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_CPUTIME" 'enumvalue)
	#.(swig-lispify "_SC_DEVICE_IO" 'enumvalue)
	#.(swig-lispify "_SC_DEVICE_SPECIFIC" 'enumvalue)
	#.(swig-lispify "_SC_DEVICE_SPECIFIC_R" 'enumvalue)
	#.(swig-lispify "_SC_FD_MGMT" 'enumvalue)
	#.(swig-lispify "_SC_FIFO" 'enumvalue)
	#.(swig-lispify "_SC_PIPE" 'enumvalue)
	#.(swig-lispify "_SC_FILE_ATTRIBUTES" 'enumvalue)
	#.(swig-lispify "_SC_FILE_LOCKING" 'enumvalue)
	#.(swig-lispify "_SC_FILE_SYSTEM" 'enumvalue)
	#.(swig-lispify "_SC_MONOTONIC_CLOCK" 'enumvalue)
	#.(swig-lispify "_SC_MULTI_PROCESS" 'enumvalue)
	#.(swig-lispify "_SC_SINGLE_PROCESS" 'enumvalue)
	#.(swig-lispify "_SC_NETWORKING" 'enumvalue)
	#.(swig-lispify "_SC_READER_WRITER_LOCKS" 'enumvalue)
	#.(swig-lispify "_SC_SPIN_LOCKS" 'enumvalue)
	#.(swig-lispify "_SC_REGEXP" 'enumvalue)
	#.(swig-lispify "_SC_REGEX_VERSION" 'enumvalue)
	#.(swig-lispify "_SC_SHELL" 'enumvalue)
	#.(swig-lispify "_SC_SIGNALS" 'enumvalue)
	#.(swig-lispify "_SC_SPAWN" 'enumvalue)
	#.(swig-lispify "_SC_SPORADIC_SERVER" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_SPORADIC_SERVER" 'enumvalue)
	#.(swig-lispify "_SC_SYSTEM_DATABASE" 'enumvalue)
	#.(swig-lispify "_SC_SYSTEM_DATABASE_R" 'enumvalue)
	#.(swig-lispify "_SC_TIMEOUTS" 'enumvalue)
	#.(swig-lispify "_SC_TYPED_MEMORY_OBJECTS" 'enumvalue)
	#.(swig-lispify "_SC_USER_GROUPS" 'enumvalue)
	#.(swig-lispify "_SC_USER_GROUPS_R" 'enumvalue)
	#.(swig-lispify "_SC_2_PBS" 'enumvalue)
	#.(swig-lispify "_SC_2_PBS_ACCOUNTING" 'enumvalue)
	#.(swig-lispify "_SC_2_PBS_LOCATE" 'enumvalue)
	#.(swig-lispify "_SC_2_PBS_MESSAGE" 'enumvalue)
	#.(swig-lispify "_SC_2_PBS_TRACK" 'enumvalue)
	#.(swig-lispify "_SC_SYMLOOP_MAX" 'enumvalue)
	#.(swig-lispify "_SC_STREAMS" 'enumvalue)
	#.(swig-lispify "_SC_2_PBS_CHECKPOINT" 'enumvalue)
	#.(swig-lispify "_SC_V6_ILP32_OFF32" 'enumvalue)
	#.(swig-lispify "_SC_V6_ILP32_OFFBIG" 'enumvalue)
	#.(swig-lispify "_SC_V6_LP64_OFF64" 'enumvalue)
	#.(swig-lispify "_SC_V6_LPBIG_OFFBIG" 'enumvalue)
	#.(swig-lispify "_SC_HOST_NAME_MAX" 'enumvalue)
	#.(swig-lispify "_SC_TRACE" 'enumvalue)
	#.(swig-lispify "_SC_TRACE_EVENT_FILTER" 'enumvalue)
	#.(swig-lispify "_SC_TRACE_INHERIT" 'enumvalue)
	#.(swig-lispify "_SC_TRACE_LOG" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL1_ICACHE_SIZE" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL1_ICACHE_ASSOC" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL1_ICACHE_LINESIZE" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL1_DCACHE_SIZE" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL1_DCACHE_ASSOC" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL1_DCACHE_LINESIZE" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL2_CACHE_SIZE" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL2_CACHE_ASSOC" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL2_CACHE_LINESIZE" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL3_CACHE_SIZE" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL3_CACHE_ASSOC" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL3_CACHE_LINESIZE" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL4_CACHE_SIZE" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL4_CACHE_ASSOC" 'enumvalue)
	#.(swig-lispify "_SC_LEVEL4_CACHE_LINESIZE" 'enumvalue)
	;;(#.(swig-lispify "_SC_IPV6" 'enumvalue) #.(cl:+ _SC_LEVEL1_ICACHE_SIZE 50))
	#.(swig-lispify "_SC_RAW_SOCKETS" 'enumvalue)
	#.(swig-lispify "_SC_V7_ILP32_OFF32" 'enumvalue)
	#.(swig-lispify "_SC_V7_ILP32_OFFBIG" 'enumvalue)
	#.(swig-lispify "_SC_V7_LP64_OFF64" 'enumvalue)
	#.(swig-lispify "_SC_V7_LPBIG_OFFBIG" 'enumvalue)
	#.(swig-lispify "_SC_SS_REPL_MAX" 'enumvalue)
	#.(swig-lispify "_SC_TRACE_EVENT_NAME_MAX" 'enumvalue)
	#.(swig-lispify "_SC_TRACE_NAME_MAX" 'enumvalue)
	#.(swig-lispify "_SC_TRACE_SYS_MAX" 'enumvalue)
	#.(swig-lispify "_SC_TRACE_USER_EVENT_MAX" 'enumvalue)
	#.(swig-lispify "_SC_XOPEN_STREAMS" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_ROBUST_PRIO_INHERIT" 'enumvalue)
	#.(swig-lispify "_SC_THREAD_ROBUST_PRIO_PROTECT" 'enumvalue)
	#.(swig-lispify "_SC_MINSIGSTKSZ" 'enumvalue)
	#.(swig-lispify "_SC_SIGSTKSZ" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_ARG_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_CHILD_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_CLK_TCK" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NGROUPS_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_OPEN_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_STREAM_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TZNAME_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_JOB_CONTROL" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SAVED_IDS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_REALTIME_SIGNALS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PRIORITY_SCHEDULING" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TIMERS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_ASYNCHRONOUS_IO" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PRIORITIZED_IO" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SYNCHRONIZED_IO" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_FSYNC" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MAPPED_FILES" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MEMLOCK" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MEMLOCK_RANGE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MEMORY_PROTECTION" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MESSAGE_PASSING" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SEMAPHORES" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SHARED_MEMORY_OBJECTS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_AIO_LISTIO_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_AIO_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_AIO_PRIO_DELTA_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_DELAYTIMER_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MQ_OPEN_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MQ_PRIO_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_VERSION" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PAGESIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_RTSIG_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SEM_NSEMS_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SEM_VALUE_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SIGQUEUE_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TIMER_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_BC_BASE_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_BC_DIM_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_BC_SCALE_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_BC_STRING_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_COLL_WEIGHTS_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_EQUIV_CLASS_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_EXPR_NEST_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LINE_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_RE_DUP_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_CHARCLASS_NAME_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_VERSION" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_C_BIND" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_C_DEV" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_FORT_DEV" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_FORT_RUN" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_SW_DEV" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_LOCALEDEF" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PII" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PII_XTI" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PII_SOCKET" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PII_INTERNET" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PII_OSI" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_POLL" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SELECT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_UIO_MAXIOV" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_IOV_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PII_INTERNET_STREAM" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PII_INTERNET_DGRAM" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PII_OSI_COTS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PII_OSI_CLTS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PII_OSI_M" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_T_IOV_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREADS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_SAFE_FUNCTIONS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_GETGR_R_SIZE_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_GETPW_R_SIZE_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LOGIN_NAME_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TTY_NAME_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_DESTRUCTOR_ITERATIONS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_KEYS_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_STACK_MIN" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_THREADS_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_ATTR_STACKADDR" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_ATTR_STACKSIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_PRIORITY_SCHEDULING" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_PRIO_INHERIT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_PRIO_PROTECT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_PROCESS_SHARED" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NPROCESSORS_CONF" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NPROCESSORS_ONLN" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PHYS_PAGES" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_AVPHYS_PAGES" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_ATEXIT_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PASS_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_VERSION" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_XCU_VERSION" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_UNIX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_CRYPT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_ENH_I18N" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_SHM" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_CHAR_TERM" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_C_VERSION" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_UPE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_XPG2" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_XPG3" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_XPG4" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_CHAR_BIT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_CHAR_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_CHAR_MIN" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_INT_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_INT_MIN" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LONG_BIT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_WORD_BIT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MB_LEN_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NZERO" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SSIZE_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SCHAR_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SCHAR_MIN" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SHRT_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SHRT_MIN" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_UCHAR_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_UINT_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_ULONG_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_USHRT_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NL_ARGMAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NL_LANGMAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NL_MSGMAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NL_NMAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NL_SETMAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NL_TEXTMAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XBS5_ILP32_OFF32" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XBS5_ILP32_OFFBIG" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XBS5_LP64_OFF64" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XBS5_LPBIG_OFFBIG" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_LEGACY" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_REALTIME" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_REALTIME_THREADS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_ADVISORY_INFO" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_BARRIERS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_BASE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_C_LANG_SUPPORT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_C_LANG_SUPPORT_R" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_CLOCK_SELECTION" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_CPUTIME" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_CPUTIME" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_DEVICE_IO" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_DEVICE_SPECIFIC" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_DEVICE_SPECIFIC_R" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_FD_MGMT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_FIFO" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_PIPE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_FILE_ATTRIBUTES" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_FILE_LOCKING" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_FILE_SYSTEM" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MONOTONIC_CLOCK" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MULTI_PROCESS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SINGLE_PROCESS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_NETWORKING" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_READER_WRITER_LOCKS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SPIN_LOCKS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_REGEXP" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_REGEX_VERSION" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SHELL" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SIGNALS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SPAWN" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SPORADIC_SERVER" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_SPORADIC_SERVER" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SYSTEM_DATABASE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SYSTEM_DATABASE_R" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TIMEOUTS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TYPED_MEMORY_OBJECTS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_USER_GROUPS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_USER_GROUPS_R" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_PBS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_PBS_ACCOUNTING" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_PBS_LOCATE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_PBS_MESSAGE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_PBS_TRACK" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SYMLOOP_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_STREAMS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_2_PBS_CHECKPOINT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_V6_ILP32_OFF32" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_V6_ILP32_OFFBIG" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_V6_LP64_OFF64" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_V6_LPBIG_OFFBIG" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_HOST_NAME_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TRACE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TRACE_EVENT_FILTER" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TRACE_INHERIT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TRACE_LOG" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL1_ICACHE_SIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL1_ICACHE_ASSOC" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL1_ICACHE_LINESIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL1_DCACHE_SIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL1_DCACHE_ASSOC" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL1_DCACHE_LINESIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL2_CACHE_SIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL2_CACHE_ASSOC" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL2_CACHE_LINESIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL3_CACHE_SIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL3_CACHE_ASSOC" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL3_CACHE_LINESIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL4_CACHE_SIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL4_CACHE_ASSOC" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_LEVEL4_CACHE_LINESIZE" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_IPV6" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_RAW_SOCKETS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_V7_ILP32_OFF32" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_V7_ILP32_OFFBIG" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_V7_LP64_OFF64" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_V7_LPBIG_OFFBIG" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SS_REPL_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TRACE_EVENT_NAME_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TRACE_NAME_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TRACE_SYS_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_TRACE_USER_EVENT_MAX" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_XOPEN_STREAMS" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_ROBUST_PRIO_INHERIT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_THREAD_ROBUST_PRIO_PROTECT" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_MINSIGSTKSZ" 'enumvalue))

(cl:export '#.(swig-lispify "_SC_SIGSTKSZ" 'enumvalue))

(defanonenum 
	#.(swig-lispify "_CS_PATH" 'enumvalue)
	#.(swig-lispify "_CS_V6_WIDTH_RESTRICTED_ENVS" 'enumvalue)
	#.(swig-lispify "_CS_GNU_LIBC_VERSION" 'enumvalue)
	#.(swig-lispify "_CS_GNU_LIBPTHREAD_VERSION" 'enumvalue)
	#.(swig-lispify "_CS_V5_WIDTH_RESTRICTED_ENVS" 'enumvalue)
	#.(swig-lispify "_CS_V7_WIDTH_RESTRICTED_ENVS" 'enumvalue)
	(#.(swig-lispify "_CS_LFS_CFLAGS" 'enumvalue) #.1000)
	#.(swig-lispify "_CS_LFS_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_LFS_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_LFS_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_LFS64_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_LFS64_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_LFS64_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_LFS64_LINTFLAGS" 'enumvalue)
	(#.(swig-lispify "_CS_XBS5_ILP32_OFF32_CFLAGS" 'enumvalue) #.1100)
	#.(swig-lispify "_CS_XBS5_ILP32_OFF32_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_ILP32_OFF32_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_ILP32_OFF32_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_ILP32_OFFBIG_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_ILP32_OFFBIG_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_ILP32_OFFBIG_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_ILP32_OFFBIG_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_LP64_OFF64_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_LP64_OFF64_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_LP64_OFF64_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_LP64_OFF64_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_LPBIG_OFFBIG_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_LPBIG_OFFBIG_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_LPBIG_OFFBIG_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_ILP32_OFF32_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_ILP32_OFF32_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_ILP32_OFF32_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_ILP32_OFFBIG_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_LP64_OFF64_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_LP64_OFF64_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_LP64_OFF64_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_LP64_OFF64_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_LPBIG_OFFBIG_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_ILP32_OFF32_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_ILP32_OFF32_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_ILP32_OFF32_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_ILP32_OFFBIG_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_LP64_OFF64_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_LP64_OFF64_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_LP64_OFF64_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_LP64_OFF64_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_LPBIG_OFFBIG_LIBS" 'enumvalue)
	#.(swig-lispify "_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS" 'enumvalue)
	#.(swig-lispify "_CS_V6_ENV" 'enumvalue)
	#.(swig-lispify "_CS_V7_ENV" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_PATH" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_V6_WIDTH_RESTRICTED_ENVS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_GNU_LIBC_VERSION" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_GNU_LIBPTHREAD_VERSION" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_V5_WIDTH_RESTRICTED_ENVS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_V7_WIDTH_RESTRICTED_ENVS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_LFS_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_LFS_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_LFS_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_LFS_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_LFS64_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_LFS64_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_LFS64_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_LFS64_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_ILP32_OFF32_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_ILP32_OFF32_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_ILP32_OFF32_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_ILP32_OFF32_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_ILP32_OFFBIG_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_ILP32_OFFBIG_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_ILP32_OFFBIG_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_ILP32_OFFBIG_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_LP64_OFF64_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_LP64_OFF64_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_LP64_OFF64_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_LP64_OFF64_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_LPBIG_OFFBIG_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_LPBIG_OFFBIG_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_LPBIG_OFFBIG_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_ILP32_OFF32_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_ILP32_OFF32_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_ILP32_OFF32_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_ILP32_OFFBIG_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_LP64_OFF64_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_LP64_OFF64_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_LP64_OFF64_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_LP64_OFF64_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_LPBIG_OFFBIG_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_ILP32_OFF32_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_ILP32_OFF32_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_ILP32_OFF32_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_ILP32_OFFBIG_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_LP64_OFF64_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_LP64_OFF64_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_LP64_OFF64_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_LP64_OFF64_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_LPBIG_OFFBIG_LIBS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_V6_ENV" 'enumvalue))

(cl:export '#.(swig-lispify "_CS_V7_ENV" 'enumvalue))

(cffi:defcenum #.(swig-lispify "GModuleFlags" 'enumname)
	(#.(swig-lispify "G_MODULE_BIND_LAZY" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_MODULE_BIND_LOCAL" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_MODULE_BIND_MASK" 'enumvalue :keyword) #.#x03))

(cl:export '#.(swig-lispify "GModuleFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GModuleError" 'enumname)
	#.(swig-lispify "G_MODULE_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_MODULE_ERROR_CHECK_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GModuleError" 'enumname))

(cffi:defcenum #.(swig-lispify "GResolverNameLookupFlags" 'enumname)
	(#.(swig-lispify "G_RESOLVER_NAME_LOOKUP_FLAGS_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_RESOLVER_NAME_LOOKUP_FLAGS_IPV4_ONLY" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_RESOLVER_NAME_LOOKUP_FLAGS_IPV6_ONLY" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GResolverNameLookupFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GSettingsBindFlags" 'enumname)
	#.(swig-lispify "G_SETTINGS_BIND_DEFAULT" 'enumvalue :keyword)
	(#.(swig-lispify "G_SETTINGS_BIND_GET" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_SETTINGS_BIND_SET" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_SETTINGS_BIND_NO_SENSITIVITY" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_SETTINGS_BIND_GET_NO_CHANGES" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_SETTINGS_BIND_INVERT_BOOLEAN" 'enumvalue :keyword) #.(cl:ash 1 4)))

(cl:export '#.(swig-lispify "GSettingsBindFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_status_t" 'enumname)
	(#.(swig-lispify "CAIRO_STATUS_SUCCESS" 'enumvalue :keyword) #.0)
	#.(swig-lispify "CAIRO_STATUS_NO_MEMORY" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_RESTORE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_POP_GROUP" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_NO_CURRENT_POINT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_MATRIX" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_STATUS" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_NULL_POINTER" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_STRING" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_PATH_DATA" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_READ_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_WRITE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_SURFACE_FINISHED" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_SURFACE_TYPE_MISMATCH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_PATTERN_TYPE_MISMATCH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_CONTENT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_FORMAT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_VISUAL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_FILE_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_DASH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_DSC_COMMENT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_INDEX" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_CLIP_NOT_REPRESENTABLE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_TEMP_FILE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_STRIDE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_FONT_TYPE_MISMATCH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_USER_FONT_IMMUTABLE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_USER_FONT_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_NEGATIVE_COUNT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_CLUSTERS" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_SLANT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_WEIGHT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_SIZE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_DEVICE_TYPE_MISMATCH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_DEVICE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_MESH_CONSTRUCTION" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_DEVICE_FINISHED" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_JBIG2_GLOBAL_MISSING" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_PNG_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_FREETYPE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_WIN32_GDI_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_TAG_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_LAST_STATUS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_status_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_content_t" 'enumname)
	(#.(swig-lispify "CAIRO_CONTENT_COLOR" 'enumvalue :keyword) #.#x1000)
	(#.(swig-lispify "CAIRO_CONTENT_ALPHA" 'enumvalue :keyword) #.#x2000)
	(#.(swig-lispify "CAIRO_CONTENT_COLOR_ALPHA" 'enumvalue :keyword) #.#x3000))

(cl:export '#.(swig-lispify "cairo_content_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_format_t" 'enumname)
	(#.(swig-lispify "CAIRO_FORMAT_INVALID" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "CAIRO_FORMAT_ARGB32" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "CAIRO_FORMAT_RGB24" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "CAIRO_FORMAT_A8" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "CAIRO_FORMAT_A1" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "CAIRO_FORMAT_RGB16_565" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "CAIRO_FORMAT_RGB30" 'enumvalue :keyword) #.5))

(cl:export '#.(swig-lispify "cairo_format_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_operator_t" 'enumname)
	#.(swig-lispify "CAIRO_OPERATOR_CLEAR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_SOURCE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_OVER" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_IN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_OUT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_ATOP" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DEST" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DEST_OVER" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DEST_IN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DEST_OUT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DEST_ATOP" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_XOR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_ADD" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_SATURATE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_MULTIPLY" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_SCREEN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_OVERLAY" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DARKEN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_LIGHTEN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_COLOR_DODGE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_COLOR_BURN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_HARD_LIGHT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_SOFT_LIGHT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DIFFERENCE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_EXCLUSION" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_HSL_HUE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_HSL_SATURATION" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_HSL_COLOR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_HSL_LUMINOSITY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_operator_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_antialias_t" 'enumname)
	#.(swig-lispify "CAIRO_ANTIALIAS_DEFAULT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_NONE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_GRAY" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_SUBPIXEL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_FAST" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_GOOD" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_BEST" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_antialias_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_fill_rule_t" 'enumname)
	#.(swig-lispify "CAIRO_FILL_RULE_WINDING" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILL_RULE_EVEN_ODD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_fill_rule_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_line_cap_t" 'enumname)
	#.(swig-lispify "CAIRO_LINE_CAP_BUTT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_LINE_CAP_ROUND" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_LINE_CAP_SQUARE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_line_cap_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_line_join_t" 'enumname)
	#.(swig-lispify "CAIRO_LINE_JOIN_MITER" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_LINE_JOIN_ROUND" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_LINE_JOIN_BEVEL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_line_join_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_text_cluster_flags_t" 'enumname)
	(#.(swig-lispify "CAIRO_TEXT_CLUSTER_FLAG_BACKWARD" 'enumvalue :keyword) #.#x00000001))

(cl:export '#.(swig-lispify "cairo_text_cluster_flags_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_font_slant_t" 'enumname)
	#.(swig-lispify "CAIRO_FONT_SLANT_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_SLANT_ITALIC" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_SLANT_OBLIQUE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_font_slant_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_font_weight_t" 'enumname)
	#.(swig-lispify "CAIRO_FONT_WEIGHT_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_WEIGHT_BOLD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_font_weight_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_subpixel_order_t" 'enumname)
	#.(swig-lispify "CAIRO_SUBPIXEL_ORDER_DEFAULT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SUBPIXEL_ORDER_RGB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SUBPIXEL_ORDER_BGR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SUBPIXEL_ORDER_VRGB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SUBPIXEL_ORDER_VBGR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_subpixel_order_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_hint_style_t" 'enumname)
	#.(swig-lispify "CAIRO_HINT_STYLE_DEFAULT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_STYLE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_STYLE_SLIGHT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_STYLE_MEDIUM" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_STYLE_FULL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_hint_style_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_hint_metrics_t" 'enumname)
	#.(swig-lispify "CAIRO_HINT_METRICS_DEFAULT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_METRICS_OFF" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_METRICS_ON" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_hint_metrics_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_font_type_t" 'enumname)
	#.(swig-lispify "CAIRO_FONT_TYPE_TOY" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_TYPE_FT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_TYPE_WIN32" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_TYPE_QUARTZ" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_TYPE_USER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_font_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_path_data_type_t" 'enumname)
	#.(swig-lispify "CAIRO_PATH_MOVE_TO" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATH_LINE_TO" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATH_CURVE_TO" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATH_CLOSE_PATH" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_path_data_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_device_type_t" 'enumname)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_DRM" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_GL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_SCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_XCB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_XLIB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_XML" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_COGL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_WIN32" 'enumvalue :keyword)
	(#.(swig-lispify "CAIRO_DEVICE_TYPE_INVALID" 'enumvalue :keyword) #.-1))

(cl:export '#.(swig-lispify "cairo_device_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_surface_observer_mode_t" 'enumname)
	(#.(swig-lispify "CAIRO_SURFACE_OBSERVER_NORMAL" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "CAIRO_SURFACE_OBSERVER_RECORD_OPERATIONS" 'enumvalue :keyword) #.#x1))

(cl:export '#.(swig-lispify "cairo_surface_observer_mode_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_surface_type_t" 'enumname)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_IMAGE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_PDF" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_PS" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_XLIB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_XCB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_GLITZ" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_QUARTZ" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_WIN32" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_BEOS" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_DIRECTFB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_SVG" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_OS2" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_WIN32_PRINTING" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_QUARTZ_IMAGE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_SCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_QT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_RECORDING" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_VG" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_GL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_DRM" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_TEE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_XML" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_SKIA" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_SUBSURFACE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_COGL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_surface_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_pattern_type_t" 'enumname)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_SOLID" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_SURFACE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_LINEAR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_RADIAL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_MESH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_RASTER_SOURCE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_pattern_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_extend_t" 'enumname)
	#.(swig-lispify "CAIRO_EXTEND_NONE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_EXTEND_REPEAT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_EXTEND_REFLECT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_EXTEND_PAD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_extend_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_filter_t" 'enumname)
	#.(swig-lispify "CAIRO_FILTER_FAST" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILTER_GOOD" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILTER_BEST" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILTER_NEAREST" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILTER_BILINEAR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILTER_GAUSSIAN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_filter_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_region_overlap_t" 'enumname)
	#.(swig-lispify "CAIRO_REGION_OVERLAP_IN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_REGION_OVERLAP_OUT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_REGION_OVERLAP_PART" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_region_overlap_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_direction_t" 'enumname)
	(#.(swig-lispify "HB_DIRECTION_INVALID" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "HB_DIRECTION_LTR" 'enumvalue :keyword) #.4)
	#.(swig-lispify "HB_DIRECTION_RTL" 'enumvalue :keyword)
	#.(swig-lispify "HB_DIRECTION_TTB" 'enumvalue :keyword)
	#.(swig-lispify "HB_DIRECTION_BTT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "hb_direction_t" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "hb_script_t" 'enumname)
	(#.(swig-lispify "HB_SCRIPT_COMMON" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Z) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (y #xFF))))
	(#.(swig-lispify "HB_SCRIPT_INHERITED" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Z) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_UNKNOWN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Z) #xFF) << 24) (cl:logand (uint32_t) (z #xFF) << 16) (cl:logand (uint32_t) (z #xFF) << 8) (cl:logand uint32_t) (z #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ARABIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ARMENIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (n #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BENGALI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CYRILLIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (l #xFF))))
	(#.(swig-lispify "HB_SCRIPT_DEVANAGARI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (D) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (v #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GEORGIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GREEK" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (e #xFF) << 8) (cl:logand uint32_t) (k #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GUJARATI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (j #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GURMUKHI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HANGUL" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HEBREW" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (b #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HIRAGANA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KANNADA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (n #xFF) << 16) (cl:logand (uint32_t) (d #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KATAKANA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LAO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LATIN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (n #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MALAYALAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ORIYA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAMIL" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (l #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TELUGU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_THAI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TIBETAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (b #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BOPOMOFO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (p #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BRAILLE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CANADIAN_SYLLABICS" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (s #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CHEROKEE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (e #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ETHIOPIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (E) #xFF) << 24) (cl:logand (uint32_t) (t #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KHMER" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MONGOLIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MYANMAR" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OGHAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_RUNIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (R) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SINHALA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SYRIAC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (c #xFF))))
	(#.(swig-lispify "HB_SCRIPT_THAANA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_YI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Y) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (i #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_DESERET" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (D) #xFF) << 24) (cl:logand (uint32_t) (s #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GOTHIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_ITALIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (I) #xFF) << 24) (cl:logand (uint32_t) (t #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (l #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BUHID" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HANUNOO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAGALOG" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAGBANWA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CYPRIOT" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (p #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LIMBU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LINEAR_B" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OSMANYA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (s #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SHAVIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (w #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAI_LE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (e #xFF))))
	(#.(swig-lispify "HB_SCRIPT_UGARITIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (U) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BUGINESE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_COPTIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (p #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GLAGOLITIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KHAROSHTHI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NEW_TAI_LUE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_PERSIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (X) #xFF) << 24) (cl:logand (uint32_t) (p #xFF) << 16) (cl:logand (uint32_t) (e #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SYLOTI_NAGRI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TIFINAGH" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (f #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BALINESE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CUNEIFORM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (X) #xFF) << 24) (cl:logand (uint32_t) (s #xFF) << 16) (cl:logand (uint32_t) (u #xFF) << 8) (cl:logand uint32_t) (x #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NKO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (k #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PHAGS_PA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PHOENICIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (x #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CARIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CHAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KAYAH_LI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LEPCHA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (p #xFF) << 8) (cl:logand uint32_t) (c #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LYCIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (c #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LYDIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (d #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OL_CHIKI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (c #xFF) << 8) (cl:logand uint32_t) (k #xFF))))
	(#.(swig-lispify "HB_SCRIPT_REJANG" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (R) #xFF) << 24) (cl:logand (uint32_t) (j #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SAURASHTRA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (u #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SUNDANESE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_VAI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (V) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (i #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_AVESTAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (v #xFF) << 16) (cl:logand (uint32_t) (s #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BAMUM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_EGYPTIAN_HIEROGLYPHS" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (E) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (p #xFF))))
	(#.(swig-lispify "HB_SCRIPT_IMPERIAL_ARAMAIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_INSCRIPTIONAL_PAHLAVI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_INSCRIPTIONAL_PARTHIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_JAVANESE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (J) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (v #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KAITHI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (t #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LISU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (s #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MEETEI_MAYEK" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (t #xFF) << 16) (cl:logand (uint32_t) (e #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_SOUTH_ARABIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_TURKIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (k #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SAMARITAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAI_THAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAI_VIET" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (v #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BATAK" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (k #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BRAHMI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MANDAIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CHAKMA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (k #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MEROITIC_CURSIVE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (c #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MEROITIC_HIEROGLYPHS" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MIAO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SHARADA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SORA_SOMPENG" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAKRI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (k #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BASSA_VAH" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (s #xFF) << 8) (cl:logand uint32_t) (s #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CAUCASIAN_ALBANIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_DUPLOYAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (D) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (p #xFF) << 8) (cl:logand uint32_t) (l #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ELBASAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (E) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (b #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GRANTHA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (n #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KHOJKI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (j #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KHUDAWADI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LINEAR_A" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MAHAJANI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (j #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MANICHAEAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MENDE_KIKAKUI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MODI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (d #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MRO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NABATAEAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (b #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_NORTH_ARABIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_PERMIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PAHAWH_HMONG" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (m #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PALMYRENE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PAU_CIN_HAU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (u #xFF) << 8) (cl:logand uint32_t) (c #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PSALTER_PAHLAVI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (p #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SIDDHAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (d #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TIRHUTA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_WARANG_CITI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (W) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_AHOM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ANATOLIAN_HIEROGLYPHS" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (u #xFF) << 8) (cl:logand uint32_t) (w #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HATRAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MULTANI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_HUNGARIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SIGNWRITING" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (w #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ADLAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (d #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BHAIKSUKI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (k #xFF) << 8) (cl:logand uint32_t) (s #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MARCHEN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (c #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OSAGE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (s #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (e #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TANGUT" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NEWA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (w #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MASARAM_GONDI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NUSHU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (s #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SOYOMBO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ZANABAZAR_SQUARE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Z) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_DOGRA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (D) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GUNJALA_GONDI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HANIFI_ROHINGYA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (R) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MAKASAR" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (k #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MEDEFAIDRIN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (d #xFF) << 8) (cl:logand uint32_t) (f #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_SOGDIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SOGDIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ELYMAIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (E) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NANDINAGARI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NYIAKENG_PUACHUE_HMONG" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (m #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (p #xFF))))
	(#.(swig-lispify "HB_SCRIPT_WANCHO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (W) #xFF) << 24) (cl:logand (uint32_t) (c #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CHORASMIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (s #xFF))))
	(#.(swig-lispify "HB_SCRIPT_DIVES_AKURU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (D) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (k #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KHITAN_SMALL_SCRIPT" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (s #xFF))))
	(#.(swig-lispify "HB_SCRIPT_YEZIDI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Y) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (z #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_INVALID" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (0) #xFF) << 24) (cl:logand (uint32_t) (0 #xFF) << 16) (cl:logand (uint32_t) (0 #xFF) << 8) (cl:logand uint32_t) (0 #xFF))))
	(#.(swig-lispify "_HB_SCRIPT_MAX_VALUE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (0x7f) #xFF) << 24) (cl:logand (uint32_t) (0xff #xFF) << 16) (cl:logand (uint32_t) (0xff #xFF) << 8) (cl:logand uint32_t) (0xff #xFF))))
	(#.(swig-lispify "_HB_SCRIPT_MAX_VALUE_SIGNED" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (0x7f) #xFF) << 24) (cl:logand (uint32_t) (0xff #xFF) << 16) (cl:logand (uint32_t) (0xff #xFF) << 8) (cl:logand uint32_t) (0xff #xFF)))))

;;(cl:export '#.(swig-lispify "hb_script_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_memory_mode_t" 'enumname)
	#.(swig-lispify "HB_MEMORY_MODE_DUPLICATE" 'enumvalue :keyword)
	#.(swig-lispify "HB_MEMORY_MODE_READONLY" 'enumvalue :keyword)
	#.(swig-lispify "HB_MEMORY_MODE_WRITABLE" 'enumvalue :keyword)
	#.(swig-lispify "HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "hb_memory_mode_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_unicode_general_category_t" 'enumname)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_CONTROL" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_FORMAT" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_SURROGATE" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "hb_unicode_general_category_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_unicode_combining_class_t" 'enumname)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_NOT_REORDERED" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_OVERLAY" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_NUKTA" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_KANA_VOICING" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_VIRAMA" 'enumvalue :keyword) #.9)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC10" 'enumvalue :keyword) #.10)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC11" 'enumvalue :keyword) #.11)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC12" 'enumvalue :keyword) #.12)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC13" 'enumvalue :keyword) #.13)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC14" 'enumvalue :keyword) #.14)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC15" 'enumvalue :keyword) #.15)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC16" 'enumvalue :keyword) #.16)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC17" 'enumvalue :keyword) #.17)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC18" 'enumvalue :keyword) #.18)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC19" 'enumvalue :keyword) #.19)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC20" 'enumvalue :keyword) #.20)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC21" 'enumvalue :keyword) #.21)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC22" 'enumvalue :keyword) #.22)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC23" 'enumvalue :keyword) #.23)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC24" 'enumvalue :keyword) #.24)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC25" 'enumvalue :keyword) #.25)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC26" 'enumvalue :keyword) #.26)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC27" 'enumvalue :keyword) #.27)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC28" 'enumvalue :keyword) #.28)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC29" 'enumvalue :keyword) #.29)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC30" 'enumvalue :keyword) #.30)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC31" 'enumvalue :keyword) #.31)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC32" 'enumvalue :keyword) #.32)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC33" 'enumvalue :keyword) #.33)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC34" 'enumvalue :keyword) #.34)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC35" 'enumvalue :keyword) #.35)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC36" 'enumvalue :keyword) #.36)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC84" 'enumvalue :keyword) #.84)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC91" 'enumvalue :keyword) #.91)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC103" 'enumvalue :keyword) #.103)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC107" 'enumvalue :keyword) #.107)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC118" 'enumvalue :keyword) #.118)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC122" 'enumvalue :keyword) #.122)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC129" 'enumvalue :keyword) #.129)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC130" 'enumvalue :keyword) #.130)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC133" 'enumvalue :keyword) #.132)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT" 'enumvalue :keyword) #.200)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW" 'enumvalue :keyword) #.202)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE" 'enumvalue :keyword) #.214)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT" 'enumvalue :keyword) #.216)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_BELOW_LEFT" 'enumvalue :keyword) #.218)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_BELOW" 'enumvalue :keyword) #.220)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT" 'enumvalue :keyword) #.222)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_LEFT" 'enumvalue :keyword) #.224)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_RIGHT" 'enumvalue :keyword) #.226)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT" 'enumvalue :keyword) #.228)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ABOVE" 'enumvalue :keyword) #.230)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT" 'enumvalue :keyword) #.232)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW" 'enumvalue :keyword) #.233)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE" 'enumvalue :keyword) #.234)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT" 'enumvalue :keyword) #.240)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_INVALID" 'enumvalue :keyword) #.255))

(cl:export '#.(swig-lispify "hb_unicode_combining_class_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_glyph_flags_t" 'enumname)
	(#.(swig-lispify "HB_GLYPH_FLAG_UNSAFE_TO_BREAK" 'enumvalue :keyword) #.#x00000001)
	(#.(swig-lispify "HB_GLYPH_FLAG_DEFINED" 'enumvalue :keyword) #.#x00000001))

(cl:export '#.(swig-lispify "hb_glyph_flags_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_buffer_content_type_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_CONTENT_TYPE_INVALID" 'enumvalue :keyword) #.0)
	#.(swig-lispify "HB_BUFFER_CONTENT_TYPE_UNICODE" 'enumvalue :keyword)
	#.(swig-lispify "HB_BUFFER_CONTENT_TYPE_GLYPHS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "hb_buffer_content_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_buffer_flags_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_FLAG_DEFAULT" 'enumvalue :keyword) #.#x00000000)
	(#.(swig-lispify "HB_BUFFER_FLAG_BOT" 'enumvalue :keyword) #.#x00000001)
	(#.(swig-lispify "HB_BUFFER_FLAG_EOT" 'enumvalue :keyword) #.#x00000002)
	(#.(swig-lispify "HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES" 'enumvalue :keyword) #.#x00000004)
	(#.(swig-lispify "HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES" 'enumvalue :keyword) #.#x00000008)
	(#.(swig-lispify "HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE" 'enumvalue :keyword) #.#x00000010))

(cl:export '#.(swig-lispify "hb_buffer_flags_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_buffer_cluster_level_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "HB_BUFFER_CLUSTER_LEVEL_CHARACTERS" 'enumvalue :keyword) #.2)
	;;(#.(swig-lispify "HB_BUFFER_CLUSTER_LEVEL_DEFAULT" 'enumvalue :keyword) #.HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES)
  )

(cl:export '#.(swig-lispify "hb_buffer_cluster_level_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_buffer_serialize_flags_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_DEFAULT" 'enumvalue :keyword) #.#x00000000)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS" 'enumvalue :keyword) #.#x00000001)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS" 'enumvalue :keyword) #.#x00000002)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES" 'enumvalue :keyword) #.#x00000004)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS" 'enumvalue :keyword) #.#x00000008)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_GLYPH_FLAGS" 'enumvalue :keyword) #.#x00000010)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_NO_ADVANCES" 'enumvalue :keyword) #.#x00000020))

(cl:export '#.(swig-lispify "hb_buffer_serialize_flags_t" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "hb_buffer_serialize_format_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FORMAT_TEXT" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (E #xFF) << 16) (cl:logand (uint32_t) (X #xFF) << 8) (cl:logand uint32_t) (T #xFF))))
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FORMAT_JSON" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (J) #xFF) << 24) (cl:logand (uint32_t) (S #xFF) << 16) (cl:logand (uint32_t) (O #xFF) << 8) (cl:logand uint32_t) (N #xFF))))
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FORMAT_INVALID" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (0) #xFF) << 24) (cl:logand (uint32_t) (0 #xFF) << 16) (cl:logand (uint32_t) (0 #xFF) << 8) (cl:logand uint32_t) (0 #xFF)))))

(cl:export '#.(swig-lispify "hb_buffer_serialize_format_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_buffer_diff_flags_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_EQUAL" 'enumvalue :keyword) #.#x0000)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_CONTENT_TYPE_MISMATCH" 'enumvalue :keyword) #.#x0001)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_LENGTH_MISMATCH" 'enumvalue :keyword) #.#x0002)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT" 'enumvalue :keyword) #.#x0004)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT" 'enumvalue :keyword) #.#x0008)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_CODEPOINT_MISMATCH" 'enumvalue :keyword) #.#x0010)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_CLUSTER_MISMATCH" 'enumvalue :keyword) #.#x0020)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_GLYPH_FLAGS_MISMATCH" 'enumvalue :keyword) #.#x0040)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_POSITION_MISMATCH" 'enumvalue :keyword) #.#x0080))

(cl:export '#.(swig-lispify "hb_buffer_diff_flags_t" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoCoverageLevel" 'enumname)
	#.(swig-lispify "PANGO_COVERAGE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_COVERAGE_FALLBACK" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_COVERAGE_APPROXIMATE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_COVERAGE_EXACT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoCoverageLevel" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoGravity" 'enumname)
	#.(swig-lispify "PANGO_GRAVITY_SOUTH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_EAST" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_NORTH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_WEST" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_AUTO" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoGravity" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoGravityHint" 'enumname)
	#.(swig-lispify "PANGO_GRAVITY_HINT_NATURAL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_HINT_STRONG" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_HINT_LINE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoGravityHint" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoScript" 'enumname)
	(#.(swig-lispify "PANGO_SCRIPT_INVALID_CODE" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "PANGO_SCRIPT_COMMON" 'enumvalue :keyword) #.0)
	#.(swig-lispify "PANGO_SCRIPT_INHERITED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ARABIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ARMENIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BENGALI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BOPOMOFO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CHEROKEE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_COPTIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CYRILLIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_DESERET" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_DEVANAGARI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ETHIOPIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GEORGIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GOTHIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GREEK" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GUJARATI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GURMUKHI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HANGUL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HEBREW" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HIRAGANA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KANNADA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KATAKANA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KHMER" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LAO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LATIN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MALAYALAM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MONGOLIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MYANMAR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OGHAM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OLD_ITALIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ORIYA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_RUNIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SINHALA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SYRIAC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TAMIL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TELUGU" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_THAANA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_THAI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TIBETAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CANADIAN_ABORIGINAL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_YI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TAGALOG" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HANUNOO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BUHID" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TAGBANWA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BRAILLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CYPRIOT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LIMBU" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OSMANYA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SHAVIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LINEAR_B" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TAI_LE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_UGARITIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_NEW_TAI_LUE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BUGINESE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GLAGOLITIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TIFINAGH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SYLOTI_NAGRI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OLD_PERSIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KHAROSHTHI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BALINESE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CUNEIFORM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PHOENICIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PHAGS_PA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_NKO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KAYAH_LI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LEPCHA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_REJANG" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SUNDANESE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SAURASHTRA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CHAM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OL_CHIKI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_VAI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CARIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LYCIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LYDIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BATAK" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BRAHMI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MANDAIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CHAKMA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MEROITIC_CURSIVE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MEROITIC_HIEROGLYPHS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MIAO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SHARADA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SORA_SOMPENG" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TAKRI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BASSA_VAH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CAUCASIAN_ALBANIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_DUPLOYAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ELBASAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GRANTHA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KHOJKI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KHUDAWADI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LINEAR_A" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MAHAJANI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MANICHAEAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MENDE_KIKAKUI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MODI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MRO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_NABATAEAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OLD_NORTH_ARABIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OLD_PERMIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PAHAWH_HMONG" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PALMYRENE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PAU_CIN_HAU" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PSALTER_PAHLAVI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SIDDHAM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TIRHUTA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_WARANG_CITI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_AHOM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ANATOLIAN_HIEROGLYPHS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HATRAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MULTANI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OLD_HUNGARIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SIGNWRITING" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoScript" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoDirection" 'enumname)
	#.(swig-lispify "PANGO_DIRECTION_LTR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_RTL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_TTB_LTR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_TTB_RTL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_WEAK_LTR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_WEAK_RTL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_NEUTRAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoDirection" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoBidiType" 'enumname)
	#.(swig-lispify "PANGO_BIDI_TYPE_L" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_LRE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_LRO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_R" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_AL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_RLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_RLO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_PDF" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_EN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_ES" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_ET" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_AN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_CS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_NSM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_BN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_B" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_S" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_WS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_ON" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_LRI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_RLI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_FSI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_PDI" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoBidiType" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoStyle" 'enumname)
	#.(swig-lispify "PANGO_STYLE_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STYLE_OBLIQUE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STYLE_ITALIC" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoStyle" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoVariant" 'enumname)
	#.(swig-lispify "PANGO_VARIANT_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_SMALL_CAPS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_ALL_SMALL_CAPS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_PETITE_CAPS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_ALL_PETITE_CAPS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_UNICASE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_TITLE_CAPS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoVariant" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoWeight" 'enumname)
	(#.(swig-lispify "PANGO_WEIGHT_THIN" 'enumvalue :keyword) #.100)
	(#.(swig-lispify "PANGO_WEIGHT_ULTRALIGHT" 'enumvalue :keyword) #.200)
	(#.(swig-lispify "PANGO_WEIGHT_LIGHT" 'enumvalue :keyword) #.300)
	(#.(swig-lispify "PANGO_WEIGHT_SEMILIGHT" 'enumvalue :keyword) #.350)
	(#.(swig-lispify "PANGO_WEIGHT_BOOK" 'enumvalue :keyword) #.380)
	(#.(swig-lispify "PANGO_WEIGHT_NORMAL" 'enumvalue :keyword) #.400)
	(#.(swig-lispify "PANGO_WEIGHT_MEDIUM" 'enumvalue :keyword) #.500)
	(#.(swig-lispify "PANGO_WEIGHT_SEMIBOLD" 'enumvalue :keyword) #.600)
	(#.(swig-lispify "PANGO_WEIGHT_BOLD" 'enumvalue :keyword) #.700)
	(#.(swig-lispify "PANGO_WEIGHT_ULTRABOLD" 'enumvalue :keyword) #.800)
	(#.(swig-lispify "PANGO_WEIGHT_HEAVY" 'enumvalue :keyword) #.900)
	(#.(swig-lispify "PANGO_WEIGHT_ULTRAHEAVY" 'enumvalue :keyword) #.1000))

(cl:export '#.(swig-lispify "PangoWeight" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoStretch" 'enumname)
	#.(swig-lispify "PANGO_STRETCH_ULTRA_CONDENSED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_EXTRA_CONDENSED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_CONDENSED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_SEMI_CONDENSED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_SEMI_EXPANDED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_EXPANDED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_EXTRA_EXPANDED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_ULTRA_EXPANDED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoStretch" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoFontMask" 'enumname)
	(#.(swig-lispify "PANGO_FONT_MASK_FAMILY" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "PANGO_FONT_MASK_STYLE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "PANGO_FONT_MASK_VARIANT" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "PANGO_FONT_MASK_WEIGHT" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "PANGO_FONT_MASK_STRETCH" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "PANGO_FONT_MASK_SIZE" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "PANGO_FONT_MASK_GRAVITY" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "PANGO_FONT_MASK_VARIATIONS" 'enumvalue :keyword) #.(cl:ash 1 7)))

(cl:export '#.(swig-lispify "PangoFontMask" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoAttrType" 'enumname)
	#.(swig-lispify "PANGO_ATTR_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_LANGUAGE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FAMILY" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_STYLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_WEIGHT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_VARIANT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_STRETCH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_SIZE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FONT_DESC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FOREGROUND" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_BACKGROUND" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_UNDERLINE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_STRIKETHROUGH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_RISE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_SHAPE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_SCALE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FALLBACK" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_LETTER_SPACING" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_UNDERLINE_COLOR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_STRIKETHROUGH_COLOR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_ABSOLUTE_SIZE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_GRAVITY" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_GRAVITY_HINT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FONT_FEATURES" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FOREGROUND_ALPHA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_BACKGROUND_ALPHA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_ALLOW_BREAKS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_SHOW" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_INSERT_HYPHENS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_OVERLINE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_OVERLINE_COLOR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_LINE_HEIGHT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_ABSOLUTE_LINE_HEIGHT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_TEXT_TRANSFORM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_WORD" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_SENTENCE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_BASELINE_SHIFT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FONT_SCALE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoAttrType" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoUnderline" 'enumname)
	#.(swig-lispify "PANGO_UNDERLINE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_SINGLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_DOUBLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_LOW" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_SINGLE_LINE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_DOUBLE_LINE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_ERROR_LINE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoUnderline" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoOverline" 'enumname)
	#.(swig-lispify "PANGO_OVERLINE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_OVERLINE_SINGLE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoOverline" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoShowFlags" 'enumname)
	(#.(swig-lispify "PANGO_SHOW_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "PANGO_SHOW_SPACES" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "PANGO_SHOW_LINE_BREAKS" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "PANGO_SHOW_IGNORABLES" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "PangoShowFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoTextTransform" 'enumname)
	#.(swig-lispify "PANGO_TEXT_TRANSFORM_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TEXT_TRANSFORM_LOWERCASE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TEXT_TRANSFORM_UPPERCASE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TEXT_TRANSFORM_CAPITALIZE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoTextTransform" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoBaselineShift" 'enumname)
	#.(swig-lispify "PANGO_BASELINE_SHIFT_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BASELINE_SHIFT_SUPERSCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BASELINE_SHIFT_SUBSCRIPT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoBaselineShift" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoFontScale" 'enumname)
	#.(swig-lispify "PANGO_FONT_SCALE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_FONT_SCALE_SUPERSCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_FONT_SCALE_SUBSCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_FONT_SCALE_SMALL_CAPS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoFontScale" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoShapeFlags" 'enumname)
	(#.(swig-lispify "PANGO_SHAPE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "PANGO_SHAPE_ROUND_POSITIONS" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "PangoShapeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoTabAlign" 'enumname)
	#.(swig-lispify "PANGO_TAB_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TAB_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TAB_CENTER" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TAB_DECIMAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoTabAlign" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoAlignment" 'enumname)
	#.(swig-lispify "PANGO_ALIGN_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ALIGN_CENTER" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ALIGN_RIGHT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoAlignment" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoWrapMode" 'enumname)
	#.(swig-lispify "PANGO_WRAP_WORD" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_WRAP_CHAR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_WRAP_WORD_CHAR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoWrapMode" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoEllipsizeMode" 'enumname)
	#.(swig-lispify "PANGO_ELLIPSIZE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ELLIPSIZE_START" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ELLIPSIZE_MIDDLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ELLIPSIZE_END" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoEllipsizeMode" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoLayoutSerializeFlags" 'enumname)
	(#.(swig-lispify "PANGO_LAYOUT_SERIALIZE_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "PANGO_LAYOUT_SERIALIZE_CONTEXT" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "PANGO_LAYOUT_SERIALIZE_OUTPUT" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "PangoLayoutSerializeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoLayoutDeserializeError" 'enumname)
	#.(swig-lispify "PANGO_LAYOUT_DESERIALIZE_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_LAYOUT_DESERIALIZE_INVALID_VALUE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_LAYOUT_DESERIALIZE_MISSING_VALUE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoLayoutDeserializeError" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoLayoutDeserializeFlags" 'enumname)
	(#.(swig-lispify "PANGO_LAYOUT_DESERIALIZE_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "PANGO_LAYOUT_DESERIALIZE_CONTEXT" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "PangoLayoutDeserializeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoRenderPart" 'enumname)
	#.(swig-lispify "PANGO_RENDER_PART_FOREGROUND" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_RENDER_PART_BACKGROUND" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_RENDER_PART_UNDERLINE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_RENDER_PART_STRIKETHROUGH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_RENDER_PART_OVERLINE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoRenderPart" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkPixbufAlphaMode" 'enumname)
	#.(swig-lispify "GDK_PIXBUF_ALPHA_BILEVEL" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PIXBUF_ALPHA_FULL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkPixbufAlphaMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkColorspace" 'enumname)
	#.(swig-lispify "GDK_COLORSPACE_RGB" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkColorspace" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkPixbufError" 'enumname)
	#.(swig-lispify "GDK_PIXBUF_ERROR_CORRUPT_IMAGE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PIXBUF_ERROR_INSUFFICIENT_MEMORY" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PIXBUF_ERROR_BAD_OPTION" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PIXBUF_ERROR_UNKNOWN_TYPE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PIXBUF_ERROR_UNSUPPORTED_OPERATION" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PIXBUF_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PIXBUF_ERROR_INCOMPLETE_ANIMATION" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkPixbufError" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkInterpType" 'enumname)
	#.(swig-lispify "GDK_INTERP_NEAREST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_INTERP_TILES" 'enumvalue :keyword)
	#.(swig-lispify "GDK_INTERP_BILINEAR" 'enumvalue :keyword)
	#.(swig-lispify "GDK_INTERP_HYPER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkInterpType" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkPixbufRotation" 'enumname)
	(#.(swig-lispify "GDK_PIXBUF_ROTATE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GDK_PIXBUF_ROTATE_COUNTERCLOCKWISE" 'enumvalue :keyword) #.90)
	(#.(swig-lispify "GDK_PIXBUF_ROTATE_UPSIDEDOWN" 'enumvalue :keyword) #.180)
	(#.(swig-lispify "GDK_PIXBUF_ROTATE_CLOCKWISE" 'enumvalue :keyword) #.270))

(cl:export '#.(swig-lispify "GdkPixbufRotation" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkTextureError" 'enumname)
	#.(swig-lispify "GDK_TEXTURE_ERROR_TOO_LARGE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TEXTURE_ERROR_CORRUPT_IMAGE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TEXTURE_ERROR_UNSUPPORTED_CONTENT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TEXTURE_ERROR_UNSUPPORTED_FORMAT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkTextureError" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkGravity" 'enumname)
	(#.(swig-lispify "GDK_GRAVITY_NORTH_WEST" 'enumvalue :keyword) #.1)
	#.(swig-lispify "GDK_GRAVITY_NORTH" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GRAVITY_NORTH_EAST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GRAVITY_WEST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GRAVITY_CENTER" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GRAVITY_EAST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GRAVITY_SOUTH_WEST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GRAVITY_SOUTH" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GRAVITY_SOUTH_EAST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GRAVITY_STATIC" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkGravity" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkModifierType" 'enumname)
	(#.(swig-lispify "GDK_SHIFT_MASK" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GDK_LOCK_MASK" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "GDK_CONTROL_MASK" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "GDK_ALT_MASK" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "GDK_BUTTON1_MASK" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "GDK_BUTTON2_MASK" 'enumvalue :keyword) #.(cl:ash 1 9))
	(#.(swig-lispify "GDK_BUTTON3_MASK" 'enumvalue :keyword) #.(cl:ash 1 10))
	(#.(swig-lispify "GDK_BUTTON4_MASK" 'enumvalue :keyword) #.(cl:ash 1 11))
	(#.(swig-lispify "GDK_BUTTON5_MASK" 'enumvalue :keyword) #.(cl:ash 1 12))
	(#.(swig-lispify "GDK_SUPER_MASK" 'enumvalue :keyword) #.(cl:ash 1 26))
	(#.(swig-lispify "GDK_HYPER_MASK" 'enumvalue :keyword) #.(cl:ash 1 27))
	(#.(swig-lispify "GDK_META_MASK" 'enumvalue :keyword) #.(cl:ash 1 28)))

(cl:export '#.(swig-lispify "GdkModifierType" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkGLError" 'enumname)
	#.(swig-lispify "GDK_GL_ERROR_NOT_AVAILABLE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GL_ERROR_UNSUPPORTED_FORMAT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GL_ERROR_UNSUPPORTED_PROFILE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GL_ERROR_COMPILATION_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GL_ERROR_LINK_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkGLError" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkVulkanError" 'enumname)
	#.(swig-lispify "GDK_VULKAN_ERROR_UNSUPPORTED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_VULKAN_ERROR_NOT_AVAILABLE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkVulkanError" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkAxisUse" 'enumname)
	#.(swig-lispify "GDK_AXIS_IGNORE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_X" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_Y" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_DELTA_X" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_DELTA_Y" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_PRESSURE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_XTILT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_YTILT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_WHEEL" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_DISTANCE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_ROTATION" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_SLIDER" 'enumvalue :keyword)
	#.(swig-lispify "GDK_AXIS_LAST" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkAxisUse" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GdkAxisFlags" 'enumname)
	(#.(swig-lispify "GDK_AXIS_FLAG_X" 'enumvalue :keyword) #.1 << GDK_AXIS_X)
	(#.(swig-lispify "GDK_AXIS_FLAG_Y" 'enumvalue :keyword) #.1 << GDK_AXIS_Y)
	(#.(swig-lispify "GDK_AXIS_FLAG_DELTA_X" 'enumvalue :keyword) #.1 << GDK_AXIS_DETA_X)
	(#.(swig-lispify "GDK_AXIS_FLAG_DELTA_Y" 'enumvalue :keyword) #.1 << GDK_AXIS_DETA_Y)
	(#.(swig-lispify "GDK_AXIS_FLAG_PRESSURE" 'enumvalue :keyword) #.1 << GDK_AXIS_PRESSRE)
	(#.(swig-lispify "GDK_AXIS_FLAG_XTILT" 'enumvalue :keyword) #.1 << GDK_AXIS_XTIT)
	(#.(swig-lispify "GDK_AXIS_FLAG_YTILT" 'enumvalue :keyword) #.1 << GDK_AXIS_YTIT)
	(#.(swig-lispify "GDK_AXIS_FLAG_WHEEL" 'enumvalue :keyword) #.1 << GDK_AXIS_WHEE)
	(#.(swig-lispify "GDK_AXIS_FLAG_DISTANCE" 'enumvalue :keyword) #.1 << GDK_AXIS_DISTANCE)
	(#.(swig-lispify "GDK_AXIS_FLAG_ROTATION" 'enumvalue :keyword) #.1 << GDK_AXIS_ROTATION)
	(#.(swig-lispify "GDK_AXIS_FLAG_SLIDER" 'enumvalue :keyword) #.1 << GDK_AXIS_SIDER))

;;(cl:export '#.(swig-lispify "GdkAxisFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkDragAction" 'enumname)
	(#.(swig-lispify "GDK_ACTION_COPY" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GDK_ACTION_MOVE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "GDK_ACTION_LINK" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "GDK_ACTION_ASK" 'enumvalue :keyword) #.(cl:ash 1 3)))

(cl:export '#.(swig-lispify "GdkDragAction" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkMemoryFormat" 'enumname)
	#.(swig-lispify "GDK_MEMORY_B8G8R8A8_PREMULTIPLIED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_A8R8G8B8_PREMULTIPLIED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R8G8B8A8_PREMULTIPLIED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_B8G8R8A8" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_A8R8G8B8" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R8G8B8A8" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_A8B8G8R8" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R8G8B8" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_B8G8R8" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R16G16B16" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R16G16B16A16_PREMULTIPLIED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R16G16B16A16" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R16G16B16_FLOAT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R16G16B16A16_FLOAT_PREMULTIPLIED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R16G16B16A16_FLOAT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R32G32B32_FLOAT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R32G32B32A32_FLOAT_PREMULTIPLIED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_R32G32B32A32_FLOAT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MEMORY_N_FORMATS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkMemoryFormat" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkDeviceToolType" 'enumname)
	#.(swig-lispify "GDK_DEVICE_TOOL_TYPE_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DEVICE_TOOL_TYPE_PEN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DEVICE_TOOL_TYPE_ERASER" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DEVICE_TOOL_TYPE_BRUSH" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DEVICE_TOOL_TYPE_PENCIL" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DEVICE_TOOL_TYPE_AIRBRUSH" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DEVICE_TOOL_TYPE_MOUSE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DEVICE_TOOL_TYPE_LENS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkDeviceToolType" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkInputSource" 'enumname)
	#.(swig-lispify "GDK_SOURCE_MOUSE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SOURCE_PEN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SOURCE_KEYBOARD" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SOURCE_TOUCHSCREEN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SOURCE_TOUCHPAD" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SOURCE_TRACKPOINT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SOURCE_TABLET_PAD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkInputSource" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkDevicePadFeature" 'enumname)
	#.(swig-lispify "GDK_DEVICE_PAD_FEATURE_BUTTON" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DEVICE_PAD_FEATURE_RING" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DEVICE_PAD_FEATURE_STRIP" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkDevicePadFeature" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkDragCancelReason" 'enumname)
	#.(swig-lispify "GDK_DRAG_CANCEL_NO_TARGET" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DRAG_CANCEL_USER_CANCELLED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DRAG_CANCEL_ERROR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkDragCancelReason" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkEventType" 'enumname)
	#.(swig-lispify "GDK_DELETE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_MOTION_NOTIFY" 'enumvalue :keyword)
	#.(swig-lispify "GDK_BUTTON_PRESS" 'enumvalue :keyword)
	#.(swig-lispify "GDK_BUTTON_RELEASE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_KEY_PRESS" 'enumvalue :keyword)
	#.(swig-lispify "GDK_KEY_RELEASE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_ENTER_NOTIFY" 'enumvalue :keyword)
	#.(swig-lispify "GDK_LEAVE_NOTIFY" 'enumvalue :keyword)
	#.(swig-lispify "GDK_FOCUS_CHANGE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PROXIMITY_IN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PROXIMITY_OUT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DRAG_ENTER" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DRAG_LEAVE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DRAG_MOTION" 'enumvalue :keyword)
	#.(swig-lispify "GDK_DROP_START" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SCROLL" 'enumvalue :keyword)
	#.(swig-lispify "GDK_GRAB_BROKEN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TOUCH_BEGIN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TOUCH_UPDATE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TOUCH_END" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TOUCH_CANCEL" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TOUCHPAD_SWIPE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TOUCHPAD_PINCH" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PAD_BUTTON_PRESS" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PAD_BUTTON_RELEASE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PAD_RING" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PAD_STRIP" 'enumvalue :keyword)
	#.(swig-lispify "GDK_PAD_GROUP_MODE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TOUCHPAD_HOLD" 'enumvalue :keyword)
	#.(swig-lispify "GDK_EVENT_LAST" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkEventType" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkTouchpadGesturePhase" 'enumname)
	#.(swig-lispify "GDK_TOUCHPAD_GESTURE_PHASE_BEGIN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TOUCHPAD_GESTURE_PHASE_UPDATE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TOUCHPAD_GESTURE_PHASE_END" 'enumvalue :keyword)
	#.(swig-lispify "GDK_TOUCHPAD_GESTURE_PHASE_CANCEL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkTouchpadGesturePhase" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkScrollDirection" 'enumname)
	#.(swig-lispify "GDK_SCROLL_UP" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SCROLL_DOWN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SCROLL_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SCROLL_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SCROLL_SMOOTH" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkScrollDirection" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkNotifyType" 'enumname)
	(#.(swig-lispify "GDK_NOTIFY_ANCESTOR" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GDK_NOTIFY_VIRTUAL" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "GDK_NOTIFY_INFERIOR" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "GDK_NOTIFY_NONLINEAR" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "GDK_NOTIFY_NONLINEAR_VIRTUAL" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "GDK_NOTIFY_UNKNOWN" 'enumvalue :keyword) #.5))

(cl:export '#.(swig-lispify "GdkNotifyType" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkCrossingMode" 'enumname)
	#.(swig-lispify "GDK_CROSSING_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "GDK_CROSSING_GRAB" 'enumvalue :keyword)
	#.(swig-lispify "GDK_CROSSING_UNGRAB" 'enumvalue :keyword)
	#.(swig-lispify "GDK_CROSSING_GTK_GRAB" 'enumvalue :keyword)
	#.(swig-lispify "GDK_CROSSING_GTK_UNGRAB" 'enumvalue :keyword)
	#.(swig-lispify "GDK_CROSSING_STATE_CHANGED" 'enumvalue :keyword)
	#.(swig-lispify "GDK_CROSSING_TOUCH_BEGIN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_CROSSING_TOUCH_END" 'enumvalue :keyword)
	#.(swig-lispify "GDK_CROSSING_DEVICE_SWITCH" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkCrossingMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkKeyMatch" 'enumname)
	#.(swig-lispify "GDK_KEY_MATCH_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_KEY_MATCH_PARTIAL" 'enumvalue :keyword)
	#.(swig-lispify "GDK_KEY_MATCH_EXACT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkKeyMatch" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkFrameClockPhase" 'enumname)
	(#.(swig-lispify "GDK_FRAME_CLOCK_PHASE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GDK_FRAME_CLOCK_PHASE_FLUSH_EVENTS" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GDK_FRAME_CLOCK_PHASE_BEFORE_PAINT" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "GDK_FRAME_CLOCK_PHASE_UPDATE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "GDK_FRAME_CLOCK_PHASE_LAYOUT" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "GDK_FRAME_CLOCK_PHASE_PAINT" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "GDK_FRAME_CLOCK_PHASE_RESUME_EVENTS" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "GDK_FRAME_CLOCK_PHASE_AFTER_PAINT" 'enumvalue :keyword) #.(cl:ash 1 6)))

(cl:export '#.(swig-lispify "GdkFrameClockPhase" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkSubpixelLayout" 'enumname)
	#.(swig-lispify "GDK_SUBPIXEL_LAYOUT_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SUBPIXEL_LAYOUT_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SUBPIXEL_LAYOUT_HORIZONTAL_RGB" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SUBPIXEL_LAYOUT_HORIZONTAL_BGR" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SUBPIXEL_LAYOUT_VERTICAL_RGB" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SUBPIXEL_LAYOUT_VERTICAL_BGR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkSubpixelLayout" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GdkAnchorHints" 'enumname)
	(#.(swig-lispify "GDK_ANCHOR_FLIP_X" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GDK_ANCHOR_FLIP_Y" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "GDK_ANCHOR_SLIDE_X" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "GDK_ANCHOR_SLIDE_Y" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "GDK_ANCHOR_RESIZE_X" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "GDK_ANCHOR_RESIZE_Y" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "GDK_ANCHOR_FLIP" 'enumvalue :keyword) #.(cl:logior GDK_ANCHOR_FLIP_X GDK_ANCHOR_FLIP_Y))
	(#.(swig-lispify "GDK_ANCHOR_SLIDE" 'enumvalue :keyword) #.(cl:logior GDK_ANCHOR_SLIDE_X GDK_ANCHOR_SLIDE_Y))
	(#.(swig-lispify "GDK_ANCHOR_RESIZE" 'enumvalue :keyword) #.(cl:logior GDK_ANCHOR_RESIZE_X GDK_ANCHOR_RESIZE_Y)))

;;(cl:export '#.(swig-lispify "GdkAnchorHints" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GdkSeatCapabilities" 'enumname)
	(#.(swig-lispify "GDK_SEAT_CAPABILITY_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GDK_SEAT_CAPABILITY_POINTER" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GDK_SEAT_CAPABILITY_TOUCH" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "GDK_SEAT_CAPABILITY_TABLET_STYLUS" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "GDK_SEAT_CAPABILITY_KEYBOARD" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "GDK_SEAT_CAPABILITY_TABLET_PAD" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "GDK_SEAT_CAPABILITY_ALL_POINTING" 'enumvalue :keyword) #.(cl:logior GDK_SEAT_CAPABILITY_POINTER GDK_SEAT_CAPABILITY_TOUCH GDK_SEAT_CAPABILITY_TABLET_STYLUS))
	(#.(swig-lispify "GDK_SEAT_CAPABILITY_ALL" 'enumvalue :keyword) #.(cl:logior GDK_SEAT_CAPABILITY_ALL_POINTING GDK_SEAT_CAPABILITY_KEYBOARD)))

(cl:export '#.(swig-lispify "GdkSeatCapabilities" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkGLAPI" 'enumname)
	(#.(swig-lispify "GDK_GL_API_GL" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GDK_GL_API_GLES" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GdkGLAPI" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkPaintableFlags" 'enumname)
	(#.(swig-lispify "GDK_PAINTABLE_STATIC_SIZE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GDK_PAINTABLE_STATIC_CONTENTS" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GdkPaintableFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkSurfaceEdge" 'enumname)
	#.(swig-lispify "GDK_SURFACE_EDGE_NORTH_WEST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SURFACE_EDGE_NORTH" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SURFACE_EDGE_NORTH_EAST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SURFACE_EDGE_WEST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SURFACE_EDGE_EAST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SURFACE_EDGE_SOUTH_WEST" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SURFACE_EDGE_SOUTH" 'enumvalue :keyword)
	#.(swig-lispify "GDK_SURFACE_EDGE_SOUTH_EAST" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkSurfaceEdge" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkFullscreenMode" 'enumname)
	#.(swig-lispify "GDK_FULLSCREEN_ON_CURRENT_MONITOR" 'enumvalue :keyword)
	#.(swig-lispify "GDK_FULLSCREEN_ON_ALL_MONITORS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GdkFullscreenMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkToplevelState" 'enumname)
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_MINIMIZED" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_MAXIMIZED" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_STICKY" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_FULLSCREEN" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_ABOVE" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_BELOW" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_FOCUSED" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_TILED" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_TOP_TILED" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_TOP_RESIZABLE" 'enumvalue :keyword) #.(cl:ash 1 9))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_RIGHT_TILED" 'enumvalue :keyword) #.(cl:ash 1 10))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_RIGHT_RESIZABLE" 'enumvalue :keyword) #.(cl:ash 1 11))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_BOTTOM_TILED" 'enumvalue :keyword) #.(cl:ash 1 12))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_BOTTOM_RESIZABLE" 'enumvalue :keyword) #.(cl:ash 1 13))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_LEFT_TILED" 'enumvalue :keyword) #.(cl:ash 1 14))
	(#.(swig-lispify "GDK_TOPLEVEL_STATE_LEFT_RESIZABLE" 'enumvalue :keyword) #.(cl:ash 1 15)))

(cl:export '#.(swig-lispify "GdkToplevelState" 'enumname))

(cffi:defcenum #.(swig-lispify "GdkTitlebarGesture" 'enumname)
	(#.(swig-lispify "GDK_TITLEBAR_GESTURE_DOUBLE_CLICK" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "GDK_TITLEBAR_GESTURE_RIGHT_CLICK" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "GDK_TITLEBAR_GESTURE_MIDDLE_CLICK" 'enumvalue :keyword) #.3))

(cl:export '#.(swig-lispify "GdkTitlebarGesture" 'enumname))

(cffi:defcenum #.(swig-lispify "GskRenderNodeType" 'enumname)
	(#.(swig-lispify "GSK_NOT_A_RENDER_NODE" 'enumvalue :keyword) #.0)
	#.(swig-lispify "GSK_CONTAINER_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_CAIRO_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_COLOR_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_LINEAR_GRADIENT_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_REPEATING_LINEAR_GRADIENT_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_RADIAL_GRADIENT_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_REPEATING_RADIAL_GRADIENT_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_CONIC_GRADIENT_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BORDER_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_TEXTURE_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_INSET_SHADOW_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_OUTSET_SHADOW_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_TRANSFORM_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_OPACITY_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_COLOR_MATRIX_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_REPEAT_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_CLIP_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_ROUNDED_CLIP_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_SHADOW_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_CROSS_FADE_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_TEXT_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLUR_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_DEBUG_NODE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_GL_SHADER_NODE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GskRenderNodeType" 'enumname))

(cffi:defcenum #.(swig-lispify "GskScalingFilter" 'enumname)
	#.(swig-lispify "GSK_SCALING_FILTER_LINEAR" 'enumvalue :keyword)
	#.(swig-lispify "GSK_SCALING_FILTER_NEAREST" 'enumvalue :keyword)
	#.(swig-lispify "GSK_SCALING_FILTER_TRILINEAR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GskScalingFilter" 'enumname))

(cffi:defcenum #.(swig-lispify "GskBlendMode" 'enumname)
	(#.(swig-lispify "GSK_BLEND_MODE_DEFAULT" 'enumvalue :keyword) #.0)
	#.(swig-lispify "GSK_BLEND_MODE_MULTIPLY" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_SCREEN" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_OVERLAY" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_DARKEN" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_LIGHTEN" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_COLOR_DODGE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_COLOR_BURN" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_HARD_LIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_SOFT_LIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_DIFFERENCE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_EXCLUSION" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_COLOR" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_HUE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_SATURATION" 'enumvalue :keyword)
	#.(swig-lispify "GSK_BLEND_MODE_LUMINOSITY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GskBlendMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GskCorner" 'enumname)
	#.(swig-lispify "GSK_CORNER_TOP_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GSK_CORNER_TOP_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GSK_CORNER_BOTTOM_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GSK_CORNER_BOTTOM_LEFT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GskCorner" 'enumname))

(cffi:defcenum #.(swig-lispify "GskSerializationError" 'enumname)
	#.(swig-lispify "GSK_SERIALIZATION_UNSUPPORTED_FORMAT" 'enumvalue :keyword)
	#.(swig-lispify "GSK_SERIALIZATION_UNSUPPORTED_VERSION" 'enumvalue :keyword)
	#.(swig-lispify "GSK_SERIALIZATION_INVALID_DATA" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GskSerializationError" 'enumname))

(cffi:defcenum #.(swig-lispify "GskTransformCategory" 'enumname)
	#.(swig-lispify "GSK_TRANSFORM_CATEGORY_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "GSK_TRANSFORM_CATEGORY_ANY" 'enumvalue :keyword)
	#.(swig-lispify "GSK_TRANSFORM_CATEGORY_3D" 'enumvalue :keyword)
	#.(swig-lispify "GSK_TRANSFORM_CATEGORY_2D" 'enumvalue :keyword)
	#.(swig-lispify "GSK_TRANSFORM_CATEGORY_2D_AFFINE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_TRANSFORM_CATEGORY_2D_TRANSLATE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_TRANSFORM_CATEGORY_IDENTITY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GskTransformCategory" 'enumname))

(cffi:defcenum #.(swig-lispify "GskGLUniformType" 'enumname)
	#.(swig-lispify "GSK_GL_UNIFORM_TYPE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GSK_GL_UNIFORM_TYPE_FLOAT" 'enumvalue :keyword)
	#.(swig-lispify "GSK_GL_UNIFORM_TYPE_INT" 'enumvalue :keyword)
	#.(swig-lispify "GSK_GL_UNIFORM_TYPE_UINT" 'enumvalue :keyword)
	#.(swig-lispify "GSK_GL_UNIFORM_TYPE_BOOL" 'enumvalue :keyword)
	#.(swig-lispify "GSK_GL_UNIFORM_TYPE_VEC2" 'enumvalue :keyword)
	#.(swig-lispify "GSK_GL_UNIFORM_TYPE_VEC3" 'enumvalue :keyword)
	#.(swig-lispify "GSK_GL_UNIFORM_TYPE_VEC4" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GskGLUniformType" 'enumname))

(cffi:defcenum #.(swig-lispify "graphene_euler_order_t" 'enumname)
	(#.(swig-lispify "GRAPHENE_EULER_ORDER_DEFAULT" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "GRAPHENE_EULER_ORDER_XYZ" 'enumvalue :keyword) #.0)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_YZX" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_ZXY" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_XZY" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_YXZ" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_ZYX" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SXYZ" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SXYX" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SXZY" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SXZX" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SYZX" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SYZY" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SYXZ" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SYXY" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SZXY" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SZXZ" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SZYX" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_SZYZ" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RZYX" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RXYX" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RYZX" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RXZX" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RXZY" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RYZY" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RZXY" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RYXY" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RYXZ" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RZXZ" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RXYZ" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_EULER_ORDER_RZYZ" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "graphene_euler_order_t" 'enumname))

(cffi:defcenum #.(swig-lispify "graphene_ray_intersection_kind_t" 'enumname)
	#.(swig-lispify "GRAPHENE_RAY_INTERSECTION_KIND_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_RAY_INTERSECTION_KIND_ENTER" 'enumvalue :keyword)
	#.(swig-lispify "GRAPHENE_RAY_INTERSECTION_KIND_LEAVE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "graphene_ray_intersection_kind_t" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkCssParserError" 'enumname)
	#.(swig-lispify "GTK_CSS_PARSER_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CSS_PARSER_ERROR_SYNTAX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CSS_PARSER_ERROR_IMPORT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CSS_PARSER_ERROR_NAME" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CSS_PARSER_ERROR_UNKNOWN_VALUE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkCssParserError" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkCssParserWarning" 'enumname)
	#.(swig-lispify "GTK_CSS_PARSER_WARNING_DEPRECATED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CSS_PARSER_WARNING_SYNTAX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CSS_PARSER_WARNING_UNIMPLEMENTED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkCssParserWarning" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkAlign" 'enumname)
	#.(swig-lispify "GTK_ALIGN_FILL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ALIGN_START" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ALIGN_END" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ALIGN_CENTER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ALIGN_BASELINE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkAlign" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkArrowType" 'enumname)
	#.(swig-lispify "GTK_ARROW_UP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ARROW_DOWN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ARROW_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ARROW_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ARROW_NONE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkArrowType" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkBaselinePosition" 'enumname)
	#.(swig-lispify "GTK_BASELINE_POSITION_TOP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BASELINE_POSITION_CENTER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BASELINE_POSITION_BOTTOM" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkBaselinePosition" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkDeleteType" 'enumname)
	#.(swig-lispify "GTK_DELETE_CHARS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DELETE_WORD_ENDS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DELETE_WORDS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DELETE_DISPLAY_LINES" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DELETE_DISPLAY_LINE_ENDS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DELETE_PARAGRAPH_ENDS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DELETE_PARAGRAPHS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DELETE_WHITESPACE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkDeleteType" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkDirectionType" 'enumname)
	#.(swig-lispify "GTK_DIR_TAB_FORWARD" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DIR_TAB_BACKWARD" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DIR_UP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DIR_DOWN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DIR_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_DIR_RIGHT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkDirectionType" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkIconSize" 'enumname)
	#.(swig-lispify "GTK_ICON_SIZE_INHERIT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ICON_SIZE_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ICON_SIZE_LARGE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkIconSize" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkSensitivityType" 'enumname)
	#.(swig-lispify "GTK_SENSITIVITY_AUTO" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SENSITIVITY_ON" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SENSITIVITY_OFF" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkSensitivityType" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkTextDirection" 'enumname)
	#.(swig-lispify "GTK_TEXT_DIR_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_TEXT_DIR_LTR" 'enumvalue :keyword)
	#.(swig-lispify "GTK_TEXT_DIR_RTL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkTextDirection" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkJustification" 'enumname)
	#.(swig-lispify "GTK_JUSTIFY_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_JUSTIFY_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_JUSTIFY_CENTER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_JUSTIFY_FILL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkJustification" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkMessageType" 'enumname)
	#.(swig-lispify "GTK_MESSAGE_INFO" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MESSAGE_WARNING" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MESSAGE_QUESTION" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MESSAGE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MESSAGE_OTHER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkMessageType" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkMovementStep" 'enumname)
	#.(swig-lispify "GTK_MOVEMENT_LOGICAL_POSITIONS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MOVEMENT_VISUAL_POSITIONS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MOVEMENT_WORDS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MOVEMENT_DISPLAY_LINES" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MOVEMENT_DISPLAY_LINE_ENDS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MOVEMENT_PARAGRAPHS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MOVEMENT_PARAGRAPH_ENDS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MOVEMENT_PAGES" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MOVEMENT_BUFFER_ENDS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_MOVEMENT_HORIZONTAL_PAGES" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkMovementStep" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkNaturalWrapMode" 'enumname)
	#.(swig-lispify "GTK_NATURAL_WRAP_INHERIT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_NATURAL_WRAP_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_NATURAL_WRAP_WORD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkNaturalWrapMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkScrollStep" 'enumname)
	#.(swig-lispify "GTK_SCROLL_STEPS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_PAGES" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_ENDS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_HORIZONTAL_STEPS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_HORIZONTAL_PAGES" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_HORIZONTAL_ENDS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkScrollStep" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkOrientation" 'enumname)
	#.(swig-lispify "GTK_ORIENTATION_HORIZONTAL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ORIENTATION_VERTICAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkOrientation" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkOverflow" 'enumname)
	#.(swig-lispify "GTK_OVERFLOW_VISIBLE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_OVERFLOW_HIDDEN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkOverflow" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPackType" 'enumname)
	#.(swig-lispify "GTK_PACK_START" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PACK_END" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkPackType" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPositionType" 'enumname)
	#.(swig-lispify "GTK_POS_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_POS_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_POS_TOP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_POS_BOTTOM" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkPositionType" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkScrollType" 'enumname)
	#.(swig-lispify "GTK_SCROLL_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_JUMP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_STEP_BACKWARD" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_STEP_FORWARD" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_PAGE_BACKWARD" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_PAGE_FORWARD" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_STEP_UP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_STEP_DOWN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_PAGE_UP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_PAGE_DOWN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_STEP_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_STEP_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_PAGE_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_PAGE_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_START" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SCROLL_END" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkScrollType" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkSelectionMode" 'enumname)
	#.(swig-lispify "GTK_SELECTION_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SELECTION_SINGLE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SELECTION_BROWSE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SELECTION_MULTIPLE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkSelectionMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkWrapMode" 'enumname)
	#.(swig-lispify "GTK_WRAP_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_WRAP_CHAR" 'enumvalue :keyword)
	#.(swig-lispify "GTK_WRAP_WORD" 'enumvalue :keyword)
	#.(swig-lispify "GTK_WRAP_WORD_CHAR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkWrapMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkSortType" 'enumname)
	#.(swig-lispify "GTK_SORT_ASCENDING" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SORT_DESCENDING" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkSortType" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPrintPages" 'enumname)
	#.(swig-lispify "GTK_PRINT_PAGES_ALL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PRINT_PAGES_CURRENT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PRINT_PAGES_RANGES" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PRINT_PAGES_SELECTION" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkPrintPages" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPageSet" 'enumname)
	#.(swig-lispify "GTK_PAGE_SET_ALL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PAGE_SET_EVEN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PAGE_SET_ODD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkPageSet" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkNumberUpLayout" 'enumname)
	#.(swig-lispify "GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_TOP_TO_BOTTOM" 'enumvalue :keyword)
	#.(swig-lispify "GTK_NUMBER_UP_LAYOUT_LEFT_TO_RIGHT_BOTTOM_TO_TOP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_TOP_TO_BOTTOM" 'enumvalue :keyword)
	#.(swig-lispify "GTK_NUMBER_UP_LAYOUT_RIGHT_TO_LEFT_BOTTOM_TO_TOP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_LEFT_TO_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_NUMBER_UP_LAYOUT_TOP_TO_BOTTOM_RIGHT_TO_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_LEFT_TO_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_NUMBER_UP_LAYOUT_BOTTOM_TO_TOP_RIGHT_TO_LEFT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkNumberUpLayout" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkOrdering" 'enumname)
	(#.(swig-lispify "GTK_ORDERING_SMALLER" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "GTK_ORDERING_EQUAL" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GTK_ORDERING_LARGER" 'enumvalue :keyword) #.1))

(cl:export '#.(swig-lispify "GtkOrdering" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPageOrientation" 'enumname)
	#.(swig-lispify "GTK_PAGE_ORIENTATION_PORTRAIT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PAGE_ORIENTATION_LANDSCAPE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PAGE_ORIENTATION_REVERSE_PORTRAIT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PAGE_ORIENTATION_REVERSE_LANDSCAPE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkPageOrientation" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPrintQuality" 'enumname)
	#.(swig-lispify "GTK_PRINT_QUALITY_LOW" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PRINT_QUALITY_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PRINT_QUALITY_HIGH" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PRINT_QUALITY_DRAFT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkPrintQuality" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPrintDuplex" 'enumname)
	#.(swig-lispify "GTK_PRINT_DUPLEX_SIMPLEX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PRINT_DUPLEX_HORIZONTAL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PRINT_DUPLEX_VERTICAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkPrintDuplex" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkUnit" 'enumname)
	#.(swig-lispify "GTK_UNIT_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_UNIT_POINTS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_UNIT_INCH" 'enumvalue :keyword)
	#.(swig-lispify "GTK_UNIT_MM" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkUnit" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkTreeViewGridLines" 'enumname)
	#.(swig-lispify "GTK_TREE_VIEW_GRID_LINES_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_TREE_VIEW_GRID_LINES_HORIZONTAL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_TREE_VIEW_GRID_LINES_VERTICAL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_TREE_VIEW_GRID_LINES_BOTH" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkTreeViewGridLines" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkSizeGroupMode" 'enumname)
	#.(swig-lispify "GTK_SIZE_GROUP_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SIZE_GROUP_HORIZONTAL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SIZE_GROUP_VERTICAL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SIZE_GROUP_BOTH" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkSizeGroupMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkSizeRequestMode" 'enumname)
	(#.(swig-lispify "GTK_SIZE_REQUEST_HEIGHT_FOR_WIDTH" 'enumvalue :keyword) #.0)
	#.(swig-lispify "GTK_SIZE_REQUEST_WIDTH_FOR_HEIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SIZE_REQUEST_CONSTANT_SIZE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkSizeRequestMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkScrollablePolicy" 'enumname)
	(#.(swig-lispify "GTK_SCROLL_MINIMUM" 'enumvalue :keyword) #.0)
	#.(swig-lispify "GTK_SCROLL_NATURAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkScrollablePolicy" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkStateFlags" 'enumname)
	(#.(swig-lispify "GTK_STATE_FLAG_NORMAL" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GTK_STATE_FLAG_ACTIVE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GTK_STATE_FLAG_PRELIGHT" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "GTK_STATE_FLAG_SELECTED" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "GTK_STATE_FLAG_INSENSITIVE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "GTK_STATE_FLAG_INCONSISTENT" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "GTK_STATE_FLAG_FOCUSED" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "GTK_STATE_FLAG_BACKDROP" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "GTK_STATE_FLAG_DIR_LTR" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "GTK_STATE_FLAG_DIR_RTL" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "GTK_STATE_FLAG_LINK" 'enumvalue :keyword) #.(cl:ash 1 9))
	(#.(swig-lispify "GTK_STATE_FLAG_VISITED" 'enumvalue :keyword) #.(cl:ash 1 10))
	(#.(swig-lispify "GTK_STATE_FLAG_CHECKED" 'enumvalue :keyword) #.(cl:ash 1 11))
	(#.(swig-lispify "GTK_STATE_FLAG_DROP_ACTIVE" 'enumvalue :keyword) #.(cl:ash 1 12))
	(#.(swig-lispify "GTK_STATE_FLAG_FOCUS_VISIBLE" 'enumvalue :keyword) #.(cl:ash 1 13))
	(#.(swig-lispify "GTK_STATE_FLAG_FOCUS_WITHIN" 'enumvalue :keyword) #.(cl:ash 1 14)))

(cl:export '#.(swig-lispify "GtkStateFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkBorderStyle" 'enumname)
	#.(swig-lispify "GTK_BORDER_STYLE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BORDER_STYLE_HIDDEN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BORDER_STYLE_SOLID" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BORDER_STYLE_INSET" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BORDER_STYLE_OUTSET" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BORDER_STYLE_DOTTED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BORDER_STYLE_DASHED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BORDER_STYLE_DOUBLE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BORDER_STYLE_GROOVE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_BORDER_STYLE_RIDGE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkBorderStyle" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkLevelBarMode" 'enumname)
	#.(swig-lispify "GTK_LEVEL_BAR_MODE_CONTINUOUS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_LEVEL_BAR_MODE_DISCRETE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkLevelBarMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkInputPurpose" 'enumname)
	#.(swig-lispify "GTK_INPUT_PURPOSE_FREE_FORM" 'enumvalue :keyword)
	#.(swig-lispify "GTK_INPUT_PURPOSE_ALPHA" 'enumvalue :keyword)
	#.(swig-lispify "GTK_INPUT_PURPOSE_DIGITS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_INPUT_PURPOSE_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_INPUT_PURPOSE_PHONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_INPUT_PURPOSE_URL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_INPUT_PURPOSE_EMAIL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_INPUT_PURPOSE_NAME" 'enumvalue :keyword)
	#.(swig-lispify "GTK_INPUT_PURPOSE_PASSWORD" 'enumvalue :keyword)
	#.(swig-lispify "GTK_INPUT_PURPOSE_PIN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_INPUT_PURPOSE_TERMINAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkInputPurpose" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkInputHints" 'enumname)
	(#.(swig-lispify "GTK_INPUT_HINT_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GTK_INPUT_HINT_SPELLCHECK" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GTK_INPUT_HINT_NO_SPELLCHECK" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "GTK_INPUT_HINT_WORD_COMPLETION" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "GTK_INPUT_HINT_LOWERCASE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "GTK_INPUT_HINT_UPPERCASE_CHARS" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "GTK_INPUT_HINT_UPPERCASE_WORDS" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "GTK_INPUT_HINT_UPPERCASE_SENTENCES" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "GTK_INPUT_HINT_INHIBIT_OSK" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "GTK_INPUT_HINT_VERTICAL_WRITING" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "GTK_INPUT_HINT_EMOJI" 'enumvalue :keyword) #.(cl:ash 1 9))
	(#.(swig-lispify "GTK_INPUT_HINT_NO_EMOJI" 'enumvalue :keyword) #.(cl:ash 1 10))
	(#.(swig-lispify "GTK_INPUT_HINT_PRIVATE" 'enumvalue :keyword) #.(cl:ash 1 11)))

(cl:export '#.(swig-lispify "GtkInputHints" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPropagationPhase" 'enumname)
	#.(swig-lispify "GTK_PHASE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PHASE_CAPTURE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PHASE_BUBBLE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PHASE_TARGET" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkPropagationPhase" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPropagationLimit" 'enumname)
	#.(swig-lispify "GTK_LIMIT_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_LIMIT_SAME_NATIVE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkPropagationLimit" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkEventSequenceState" 'enumname)
	#.(swig-lispify "GTK_EVENT_SEQUENCE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_EVENT_SEQUENCE_CLAIMED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_EVENT_SEQUENCE_DENIED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkEventSequenceState" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPanDirection" 'enumname)
	#.(swig-lispify "GTK_PAN_DIRECTION_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PAN_DIRECTION_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PAN_DIRECTION_UP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_PAN_DIRECTION_DOWN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkPanDirection" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkShortcutScope" 'enumname)
	#.(swig-lispify "GTK_SHORTCUT_SCOPE_LOCAL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SHORTCUT_SCOPE_MANAGED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SHORTCUT_SCOPE_GLOBAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkShortcutScope" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkPickFlags" 'enumname)
	(#.(swig-lispify "GTK_PICK_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GTK_PICK_INSENSITIVE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "GTK_PICK_NON_TARGETABLE" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GtkPickFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkConstraintRelation" 'enumname)
	(#.(swig-lispify "GTK_CONSTRAINT_RELATION_LE" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "GTK_CONSTRAINT_RELATION_EQ" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GTK_CONSTRAINT_RELATION_GE" 'enumvalue :keyword) #.1))

(cl:export '#.(swig-lispify "GtkConstraintRelation" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkConstraintStrength" 'enumname)
	(#.(swig-lispify "GTK_CONSTRAINT_STRENGTH_REQUIRED" 'enumvalue :keyword) #.1001001000)
	(#.(swig-lispify "GTK_CONSTRAINT_STRENGTH_STRONG" 'enumvalue :keyword) #.1000000000)
	(#.(swig-lispify "GTK_CONSTRAINT_STRENGTH_MEDIUM" 'enumvalue :keyword) #.1000)
	(#.(swig-lispify "GTK_CONSTRAINT_STRENGTH_WEAK" 'enumvalue :keyword) #.1))

(cl:export '#.(swig-lispify "GtkConstraintStrength" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkConstraintAttribute" 'enumname)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_TOP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_BOTTOM" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_START" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_END" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_WIDTH" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_HEIGHT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_CENTER_X" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_CENTER_Y" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_ATTRIBUTE_BASELINE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkConstraintAttribute" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkConstraintVflParserError" 'enumname)
	#.(swig-lispify "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_ATTRIBUTE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_VIEW" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_METRIC" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_PRIORITY" 'enumvalue :keyword)
	#.(swig-lispify "GTK_CONSTRAINT_VFL_PARSER_ERROR_INVALID_RELATION" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkConstraintVflParserError" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkSystemSetting" 'enumname)
	#.(swig-lispify "GTK_SYSTEM_SETTING_DPI" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SYSTEM_SETTING_FONT_NAME" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SYSTEM_SETTING_FONT_CONFIG" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SYSTEM_SETTING_DISPLAY" 'enumvalue :keyword)
	#.(swig-lispify "GTK_SYSTEM_SETTING_ICON_THEME" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkSystemSetting" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkSymbolicColor" 'enumname)
	(#.(swig-lispify "GTK_SYMBOLIC_COLOR_FOREGROUND" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "GTK_SYMBOLIC_COLOR_ERROR" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "GTK_SYMBOLIC_COLOR_WARNING" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "GTK_SYMBOLIC_COLOR_SUCCESS" 'enumvalue :keyword) #.3))

(cl:export '#.(swig-lispify "GtkSymbolicColor" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkAccessibleRole" 'enumname)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_ALERT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_ALERT_DIALOG" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_BANNER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_BUTTON" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_CAPTION" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_CELL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_CHECKBOX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_COLUMN_HEADER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_COMBO_BOX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_COMMAND" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_COMPOSITE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_DIALOG" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_DOCUMENT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_FEED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_FORM" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_GENERIC" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_GRID" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_GRID_CELL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_GROUP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_HEADING" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_IMG" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_INPUT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_LABEL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_LANDMARK" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_LEGEND" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_LINK" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_LIST" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_LIST_BOX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_LIST_ITEM" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_LOG" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_MAIN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_MARQUEE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_MATH" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_METER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_MENU" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_MENU_BAR" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_MENU_ITEM" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_MENU_ITEM_CHECKBOX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_MENU_ITEM_RADIO" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_NAVIGATION" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_NOTE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_OPTION" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_PRESENTATION" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_PROGRESS_BAR" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_RADIO" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_RADIO_GROUP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_RANGE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_REGION" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_ROW" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_ROW_GROUP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_ROW_HEADER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_SCROLLBAR" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_SEARCH" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_SEARCH_BOX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_SECTION" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_SECTION_HEAD" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_SELECT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_SLIDER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_SPIN_BUTTON" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_STATUS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_STRUCTURE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_SWITCH" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TAB" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TABLE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TAB_LIST" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TAB_PANEL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TEXT_BOX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TIME" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TIMER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TOOLBAR" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TOOLTIP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TREE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TREE_GRID" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_TREE_ITEM" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_WIDGET" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_ROLE_WINDOW" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkAccessibleRole" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkAccessibleState" 'enumname)
	#.(swig-lispify "GTK_ACCESSIBLE_STATE_BUSY" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_STATE_CHECKED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_STATE_DISABLED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_STATE_EXPANDED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_STATE_HIDDEN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_STATE_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_STATE_PRESSED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_STATE_SELECTED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkAccessibleState" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkAccessibleProperty" 'enumname)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_AUTOCOMPLETE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_DESCRIPTION" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_HAS_POPUP" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_KEY_SHORTCUTS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_LABEL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_LEVEL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_MODAL" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_MULTI_LINE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_MULTI_SELECTABLE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_ORIENTATION" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_PLACEHOLDER" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_READ_ONLY" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_REQUIRED" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_ROLE_DESCRIPTION" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_SORT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_VALUE_MAX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_VALUE_MIN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_VALUE_NOW" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_PROPERTY_VALUE_TEXT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkAccessibleProperty" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkAccessibleRelation" 'enumname)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_ACTIVE_DESCENDANT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_COL_COUNT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_COL_INDEX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_COL_INDEX_TEXT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_COL_SPAN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_CONTROLS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_DESCRIBED_BY" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_DETAILS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_ERROR_MESSAGE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_FLOW_TO" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_LABELLED_BY" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_OWNS" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_POS_IN_SET" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_ROW_COUNT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_ROW_INDEX" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_ROW_INDEX_TEXT" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_ROW_SPAN" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_RELATION_SET_SIZE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkAccessibleRelation" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkAccessibleTristate" 'enumname)
	#.(swig-lispify "GTK_ACCESSIBLE_TRISTATE_FALSE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_TRISTATE_TRUE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_TRISTATE_MIXED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkAccessibleTristate" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkAccessibleInvalidState" 'enumname)
	#.(swig-lispify "GTK_ACCESSIBLE_INVALID_FALSE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_INVALID_TRUE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_INVALID_GRAMMAR" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_INVALID_SPELLING" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkAccessibleInvalidState" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkAccessibleAutocomplete" 'enumname)
	#.(swig-lispify "GTK_ACCESSIBLE_AUTOCOMPLETE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_AUTOCOMPLETE_INLINE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_AUTOCOMPLETE_LIST" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_AUTOCOMPLETE_BOTH" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkAccessibleAutocomplete" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkAccessibleSort" 'enumname)
	#.(swig-lispify "GTK_ACCESSIBLE_SORT_NONE" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_SORT_ASCENDING" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_SORT_DESCENDING" 'enumvalue :keyword)
	#.(swig-lispify "GTK_ACCESSIBLE_SORT_OTHER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GtkAccessibleSort" 'enumname))

(cffi:defcenum #.(swig-lispify "GtkShortcutActionFlags" 'enumname)
	(#.(swig-lispify "GTK_SHORTCUT_ACTION_EXCLUSIVE" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "GtkShortcutActionFlags" 'enumname))

(cffi:defcstruct #.(swig-lispify "_GtkRequisition" 'classname)
	(#.(swig-lispify "width" 'slotname) :int)
	(#.(swig-lispify "height" 'slotname) :int))

(cl:export '#.(swig-lispify "_GtkRequisition" 'classname))

(cl:export '#.(swig-lispify "width" 'slotname))

(cl:export '#.(swig-lispify "height" 'slotname))

(cffi:defcstruct #.(swig-lispify "_GtkWidget" 'classname)
	(#.(swig-lispify "parent_instance" 'slotname) :pointer)
	(#.(swig-lispify "priv" 'slotname) :pointer))

(cl:export '#.(swig-lispify "_GtkWidget" 'classname))

(cl:export '#.(swig-lispify "parent_instance" 'slotname))

(cl:export '#.(swig-lispify "priv" 'slotname))

(cffi:defcstruct #.(swig-lispify "_GtkWidgetClass" 'classname)
	(#.(swig-lispify "parent_class" 'slotname) :pointer)
	(#.(swig-lispify "show" 'slotname) :pointer)
	(#.(swig-lispify "hide" 'slotname) :pointer)
	(#.(swig-lispify "map" 'slotname) :pointer)
	(#.(swig-lispify "unmap" 'slotname) :pointer)
	(#.(swig-lispify "realize" 'slotname) :pointer)
	(#.(swig-lispify "unrealize" 'slotname) :pointer)
	(#.(swig-lispify "root" 'slotname) :pointer)
	(#.(swig-lispify "unroot" 'slotname) :pointer)
	(#.(swig-lispify "size_allocate" 'slotname) :pointer)
	(#.(swig-lispify "state_flags_changed" 'slotname) :pointer)
	(#.(swig-lispify "direction_changed" 'slotname) :pointer)
	(#.(swig-lispify "get_request_mode" 'slotname) :pointer)
	(#.(swig-lispify "measure" 'slotname) :pointer)
	(#.(swig-lispify "mnemonic_activate" 'slotname) :pointer)
	(#.(swig-lispify "grab_focus" 'slotname) :pointer)
	(#.(swig-lispify "focus" 'slotname) :pointer)
	(#.(swig-lispify "set_focus_child" 'slotname) :pointer)
	(#.(swig-lispify "move_focus" 'slotname) :pointer)
	(#.(swig-lispify "keynav_failed" 'slotname) :pointer)
	(#.(swig-lispify "query_tooltip" 'slotname) :pointer)
	(#.(swig-lispify "compute_expand" 'slotname) :pointer)
	(#.(swig-lispify "css_changed" 'slotname) :pointer)
	(#.(swig-lispify "system_setting_changed" 'slotname) :pointer)
	(#.(swig-lispify "snapshot" 'slotname) :pointer)
	(#.(swig-lispify "contains" 'slotname) :pointer)
	(#.(swig-lispify "priv" 'slotname) :pointer)
	(#.(swig-lispify "padding" 'slotname) :pointer :count 8))

(cl:export '#.(swig-lispify "_GtkWidgetClass" 'classname))

(cl:export '#.(swig-lispify "parent_class" 'slotname))

(cl:export '#.(swig-lispify "show" 'slotname))

(cl:export '#.(swig-lispify "hide" 'slotname))

(cl:export '#.(swig-lispify "map" 'slotname))

(cl:export '#.(swig-lispify "unmap" 'slotname))

(cl:export '#.(swig-lispify "realize" 'slotname))

(cl:export '#.(swig-lispify "unrealize" 'slotname))

(cl:export '#.(swig-lispify "root" 'slotname))

(cl:export '#.(swig-lispify "unroot" 'slotname))

(cl:export '#.(swig-lispify "size_allocate" 'slotname))

(cl:export '#.(swig-lispify "state_flags_changed" 'slotname))

(cl:export '#.(swig-lispify "direction_changed" 'slotname))

(cl:export '#.(swig-lispify "get_request_mode" 'slotname))

(cl:export '#.(swig-lispify "measure" 'slotname))

(cl:export '#.(swig-lispify "mnemonic_activate" 'slotname))

(cl:export '#.(swig-lispify "grab_focus" 'slotname))

(cl:export '#.(swig-lispify "focus" 'slotname))

(cl:export '#.(swig-lispify "set_focus_child" 'slotname))

(cl:export '#.(swig-lispify "move_focus" 'slotname))

(cl:export '#.(swig-lispify "keynav_failed" 'slotname))

(cl:export '#.(swig-lispify "query_tooltip" 'slotname))

(cl:export '#.(swig-lispify "compute_expand" 'slotname))

(cl:export '#.(swig-lispify "css_changed" 'slotname))

(cl:export '#.(swig-lispify "system_setting_changed" 'slotname))

(cl:export '#.(swig-lispify "snapshot" 'slotname))

(cl:export '#.(swig-lispify "contains" 'slotname))

(cl:export '#.(swig-lispify "priv" 'slotname))

(cl:export '#.(swig-lispify "padding" 'slotname))

(cffi:defcfun ("gtk_widget_get_type" #.(swig-lispify "gtk_widget_get_type" 'function)) :unsigned-long)

(cl:export '#.(swig-lispify "gtk_widget_get_type" 'function))

(cffi:defcfun ("gtk_widget_unparent" #.(swig-lispify "gtk_widget_unparent" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_unparent" 'function))

(cffi:defcfun ("gtk_widget_show" #.(swig-lispify "gtk_widget_show" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_show" 'function))

(cffi:defcfun ("gtk_widget_hide" #.(swig-lispify "gtk_widget_hide" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_hide" 'function))

(cffi:defcfun ("gtk_widget_map" #.(swig-lispify "gtk_widget_map" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_map" 'function))

(cffi:defcfun ("gtk_widget_unmap" #.(swig-lispify "gtk_widget_unmap" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_unmap" 'function))

(cffi:defcfun ("gtk_widget_realize" #.(swig-lispify "gtk_widget_realize" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_realize" 'function))

(cffi:defcfun ("gtk_widget_unrealize" #.(swig-lispify "gtk_widget_unrealize" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_unrealize" 'function))

(cffi:defcfun ("gtk_widget_queue_draw" #.(swig-lispify "gtk_widget_queue_draw" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_queue_draw" 'function))

(cffi:defcfun ("gtk_widget_queue_resize" #.(swig-lispify "gtk_widget_queue_resize" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_queue_resize" 'function))

(cffi:defcfun ("gtk_widget_queue_allocate" #.(swig-lispify "gtk_widget_queue_allocate" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_queue_allocate" 'function))

(cffi:defcfun ("gtk_widget_get_frame_clock" #.(swig-lispify "gtk_widget_get_frame_clock" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_frame_clock" 'function))

(cffi:defcfun ("gtk_widget_size_allocate" #.(swig-lispify "gtk_widget_size_allocate" 'function)) :void
  (widget :pointer)
  (allocation :pointer)
  (baseline :int))

(cl:export '#.(swig-lispify "gtk_widget_size_allocate" 'function))

(cffi:defcfun ("gtk_widget_allocate" #.(swig-lispify "gtk_widget_allocate" 'function)) :void
  (widget :pointer)
  (width :int)
  (height :int)
  (baseline :int)
  (transform :pointer))

(cl:export '#.(swig-lispify "gtk_widget_allocate" 'function))

(cffi:defcfun ("gtk_widget_get_request_mode" #.(swig-lispify "gtk_widget_get_request_mode" 'function)) #.(swig-lispify "GtkSizeRequestMode" 'enumname)
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_request_mode" 'function))

(cffi:defcfun ("gtk_widget_measure" #.(swig-lispify "gtk_widget_measure" 'function)) :void
  (widget :pointer)
  (orientation #.(swig-lispify "GtkOrientation" 'enumname))
  (for_size :int)
  (minimum :pointer)
  (natural :pointer)
  (minimum_baseline :pointer)
  (natural_baseline :pointer))

(cl:export '#.(swig-lispify "gtk_widget_measure" 'function))

(cffi:defcfun ("gtk_widget_get_preferred_size" #.(swig-lispify "gtk_widget_get_preferred_size" 'function)) :void
  (widget :pointer)
  (minimum_size :pointer)
  (natural_size :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_preferred_size" 'function))

(cffi:defcfun ("gtk_widget_set_layout_manager" #.(swig-lispify "gtk_widget_set_layout_manager" 'function)) :void
  (widget :pointer)
  (layout_manager :pointer))

(cl:export '#.(swig-lispify "gtk_widget_set_layout_manager" 'function))

(cffi:defcfun ("gtk_widget_get_layout_manager" #.(swig-lispify "gtk_widget_get_layout_manager" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_layout_manager" 'function))

(cffi:defcfun ("gtk_widget_class_set_layout_manager_type" #.(swig-lispify "gtk_widget_class_set_layout_manager_type" 'function)) :void
  (widget_class :pointer)
  (type :unsigned-long))

(cl:export '#.(swig-lispify "gtk_widget_class_set_layout_manager_type" 'function))

(cffi:defcfun ("gtk_widget_class_get_layout_manager_type" #.(swig-lispify "gtk_widget_class_get_layout_manager_type" 'function)) :unsigned-long
  (widget_class :pointer))

(cl:export '#.(swig-lispify "gtk_widget_class_get_layout_manager_type" 'function))

(cffi:defcfun ("gtk_widget_class_add_binding" #.(swig-lispify "gtk_widget_class_add_binding" 'function)) :void
  (widget_class :pointer)
  (keyval :unsigned-int)
  (mods #.(swig-lispify "GdkModifierType" 'enumname))
  (callback :pointer)
  (format_string :string)
  &rest)

(cl:export '#.(swig-lispify "gtk_widget_class_add_binding" 'function))

(cffi:defcfun ("gtk_widget_class_add_binding_signal" #.(swig-lispify "gtk_widget_class_add_binding_signal" 'function)) :void
  (widget_class :pointer)
  (keyval :unsigned-int)
  (mods #.(swig-lispify "GdkModifierType" 'enumname))
  (signal :string)
  (format_string :string)
  &rest)

(cl:export '#.(swig-lispify "gtk_widget_class_add_binding_signal" 'function))

(cffi:defcfun ("gtk_widget_class_add_binding_action" #.(swig-lispify "gtk_widget_class_add_binding_action" 'function)) :void
  (widget_class :pointer)
  (keyval :unsigned-int)
  (mods #.(swig-lispify "GdkModifierType" 'enumname))
  (action_name :string)
  (format_string :string)
  &rest)

(cl:export '#.(swig-lispify "gtk_widget_class_add_binding_action" 'function))

(cffi:defcfun ("gtk_widget_class_add_shortcut" #.(swig-lispify "gtk_widget_class_add_shortcut" 'function)) :void
  (widget_class :pointer)
  (shortcut :pointer))

(cl:export '#.(swig-lispify "gtk_widget_class_add_shortcut" 'function))

(cffi:defcfun ("gtk_widget_class_set_activate_signal" #.(swig-lispify "gtk_widget_class_set_activate_signal" 'function)) :void
  (widget_class :pointer)
  (signal_id :unsigned-int))

(cl:export '#.(swig-lispify "gtk_widget_class_set_activate_signal" 'function))

(cffi:defcfun ("gtk_widget_class_set_activate_signal_from_name" #.(swig-lispify "gtk_widget_class_set_activate_signal_from_name" 'function)) :void
  (widget_class :pointer)
  (signal_name :string))

(cl:export '#.(swig-lispify "gtk_widget_class_set_activate_signal_from_name" 'function))

(cffi:defcfun ("gtk_widget_class_get_activate_signal" #.(swig-lispify "gtk_widget_class_get_activate_signal" 'function)) :unsigned-int
  (widget_class :pointer))

(cl:export '#.(swig-lispify "gtk_widget_class_get_activate_signal" 'function))

(cffi:defcfun ("gtk_widget_mnemonic_activate" #.(swig-lispify "gtk_widget_mnemonic_activate" 'function)) :int
  (widget :pointer)
  (group_cycling :int))

(cl:export '#.(swig-lispify "gtk_widget_mnemonic_activate" 'function))

(cffi:defcfun ("gtk_widget_activate" #.(swig-lispify "gtk_widget_activate" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_activate" 'function))

(cffi:defcfun ("gtk_widget_set_can_focus" #.(swig-lispify "gtk_widget_set_can_focus" 'function)) :void
  (widget :pointer)
  (can_focus :int))

(cl:export '#.(swig-lispify "gtk_widget_set_can_focus" 'function))

(cffi:defcfun ("gtk_widget_get_can_focus" #.(swig-lispify "gtk_widget_get_can_focus" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_can_focus" 'function))

(cffi:defcfun ("gtk_widget_set_focusable" #.(swig-lispify "gtk_widget_set_focusable" 'function)) :void
  (widget :pointer)
  (focusable :int))

(cl:export '#.(swig-lispify "gtk_widget_set_focusable" 'function))

(cffi:defcfun ("gtk_widget_get_focusable" #.(swig-lispify "gtk_widget_get_focusable" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_focusable" 'function))

(cffi:defcfun ("gtk_widget_has_focus" #.(swig-lispify "gtk_widget_has_focus" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_has_focus" 'function))

(cffi:defcfun ("gtk_widget_is_focus" #.(swig-lispify "gtk_widget_is_focus" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_is_focus" 'function))

(cffi:defcfun ("gtk_widget_has_visible_focus" #.(swig-lispify "gtk_widget_has_visible_focus" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_has_visible_focus" 'function))

(cffi:defcfun ("gtk_widget_grab_focus" #.(swig-lispify "gtk_widget_grab_focus" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_grab_focus" 'function))

(cffi:defcfun ("gtk_widget_set_focus_on_click" #.(swig-lispify "gtk_widget_set_focus_on_click" 'function)) :void
  (widget :pointer)
  (focus_on_click :int))

(cl:export '#.(swig-lispify "gtk_widget_set_focus_on_click" 'function))

(cffi:defcfun ("gtk_widget_get_focus_on_click" #.(swig-lispify "gtk_widget_get_focus_on_click" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_focus_on_click" 'function))

(cffi:defcfun ("gtk_widget_set_can_target" #.(swig-lispify "gtk_widget_set_can_target" 'function)) :void
  (widget :pointer)
  (can_target :int))

(cl:export '#.(swig-lispify "gtk_widget_set_can_target" 'function))

(cffi:defcfun ("gtk_widget_get_can_target" #.(swig-lispify "gtk_widget_get_can_target" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_can_target" 'function))

(cffi:defcfun ("gtk_widget_has_default" #.(swig-lispify "gtk_widget_has_default" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_has_default" 'function))

(cffi:defcfun ("gtk_widget_set_receives_default" #.(swig-lispify "gtk_widget_set_receives_default" 'function)) :void
  (widget :pointer)
  (receives_default :int))

(cl:export '#.(swig-lispify "gtk_widget_set_receives_default" 'function))

(cffi:defcfun ("gtk_widget_get_receives_default" #.(swig-lispify "gtk_widget_get_receives_default" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_receives_default" 'function))

(cffi:defcfun ("gtk_widget_set_name" #.(swig-lispify "gtk_widget_set_name" 'function)) :void
  (widget :pointer)
  (name :string))

(cl:export '#.(swig-lispify "gtk_widget_set_name" 'function))

(cffi:defcfun ("gtk_widget_get_name" #.(swig-lispify "gtk_widget_get_name" 'function)) :string
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_name" 'function))

(cffi:defcfun ("gtk_widget_set_state_flags" #.(swig-lispify "gtk_widget_set_state_flags" 'function)) :void
  (widget :pointer)
  (flags #.(swig-lispify "GtkStateFlags" 'enumname))
  (clear :int))

(cl:export '#.(swig-lispify "gtk_widget_set_state_flags" 'function))

(cffi:defcfun ("gtk_widget_unset_state_flags" #.(swig-lispify "gtk_widget_unset_state_flags" 'function)) :void
  (widget :pointer)
  (flags #.(swig-lispify "GtkStateFlags" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_unset_state_flags" 'function))

(cffi:defcfun ("gtk_widget_get_state_flags" #.(swig-lispify "gtk_widget_get_state_flags" 'function)) #.(swig-lispify "GtkStateFlags" 'enumname)
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_state_flags" 'function))

(cffi:defcfun ("gtk_widget_set_sensitive" #.(swig-lispify "gtk_widget_set_sensitive" 'function)) :void
  (widget :pointer)
  (sensitive :int))

(cl:export '#.(swig-lispify "gtk_widget_set_sensitive" 'function))

(cffi:defcfun ("gtk_widget_get_sensitive" #.(swig-lispify "gtk_widget_get_sensitive" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_sensitive" 'function))

(cffi:defcfun ("gtk_widget_is_sensitive" #.(swig-lispify "gtk_widget_is_sensitive" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_is_sensitive" 'function))

(cffi:defcfun ("gtk_widget_set_visible" #.(swig-lispify "gtk_widget_set_visible" 'function)) :void
  (widget :pointer)
  (visible :int))

(cl:export '#.(swig-lispify "gtk_widget_set_visible" 'function))

(cffi:defcfun ("gtk_widget_get_visible" #.(swig-lispify "gtk_widget_get_visible" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_visible" 'function))

(cffi:defcfun ("gtk_widget_is_visible" #.(swig-lispify "gtk_widget_is_visible" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_is_visible" 'function))

(cffi:defcfun ("gtk_widget_is_drawable" #.(swig-lispify "gtk_widget_is_drawable" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_is_drawable" 'function))

(cffi:defcfun ("gtk_widget_get_realized" #.(swig-lispify "gtk_widget_get_realized" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_realized" 'function))

(cffi:defcfun ("gtk_widget_get_mapped" #.(swig-lispify "gtk_widget_get_mapped" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_mapped" 'function))

(cffi:defcfun ("gtk_widget_set_parent" #.(swig-lispify "gtk_widget_set_parent" 'function)) :void
  (widget :pointer)
  (parent :pointer))

(cl:export '#.(swig-lispify "gtk_widget_set_parent" 'function))

(cffi:defcfun ("gtk_widget_get_parent" #.(swig-lispify "gtk_widget_get_parent" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_parent" 'function))

(cffi:defcfun ("gtk_widget_get_root" #.(swig-lispify "gtk_widget_get_root" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_root" 'function))

(cffi:defcfun ("gtk_widget_get_native" #.(swig-lispify "gtk_widget_get_native" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_native" 'function))

(cffi:defcfun ("gtk_widget_set_child_visible" #.(swig-lispify "gtk_widget_set_child_visible" 'function)) :void
  (widget :pointer)
  (child_visible :int))

(cl:export '#.(swig-lispify "gtk_widget_set_child_visible" 'function))

(cffi:defcfun ("gtk_widget_get_child_visible" #.(swig-lispify "gtk_widget_get_child_visible" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_child_visible" 'function))

(cffi:defcfun ("gtk_widget_get_allocated_width" #.(swig-lispify "gtk_widget_get_allocated_width" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_allocated_width" 'function))

(cffi:defcfun ("gtk_widget_get_allocated_height" #.(swig-lispify "gtk_widget_get_allocated_height" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_allocated_height" 'function))

(cffi:defcfun ("gtk_widget_get_allocated_baseline" #.(swig-lispify "gtk_widget_get_allocated_baseline" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_allocated_baseline" 'function))

(cffi:defcfun ("gtk_widget_get_allocation" #.(swig-lispify "gtk_widget_get_allocation" 'function)) :void
  (widget :pointer)
  (allocation :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_allocation" 'function))

(cffi:defcfun ("gtk_widget_compute_transform" #.(swig-lispify "gtk_widget_compute_transform" 'function)) :int
  (widget :pointer)
  (target :pointer)
  (out_transform :pointer))

(cl:export '#.(swig-lispify "gtk_widget_compute_transform" 'function))

(cffi:defcfun ("gtk_widget_compute_bounds" #.(swig-lispify "gtk_widget_compute_bounds" 'function)) :int
  (widget :pointer)
  (target :pointer)
  (out_bounds :pointer))

(cl:export '#.(swig-lispify "gtk_widget_compute_bounds" 'function))

(cffi:defcfun ("gtk_widget_compute_point" #.(swig-lispify "gtk_widget_compute_point" 'function)) :int
  (widget :pointer)
  (target :pointer)
  (point :pointer)
  (out_point :pointer))

(cl:export '#.(swig-lispify "gtk_widget_compute_point" 'function))

(cffi:defcfun ("gtk_widget_get_width" #.(swig-lispify "gtk_widget_get_width" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_width" 'function))

(cffi:defcfun ("gtk_widget_get_height" #.(swig-lispify "gtk_widget_get_height" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_height" 'function))

(cffi:defcfun ("gtk_widget_get_size" #.(swig-lispify "gtk_widget_get_size" 'function)) :int
  (widget :pointer)
  (orientation #.(swig-lispify "GtkOrientation" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_get_size" 'function))

(cffi:defcfun ("gtk_widget_child_focus" #.(swig-lispify "gtk_widget_child_focus" 'function)) :int
  (widget :pointer)
  (direction #.(swig-lispify "GtkDirectionType" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_child_focus" 'function))

(cffi:defcfun ("gtk_widget_keynav_failed" #.(swig-lispify "gtk_widget_keynav_failed" 'function)) :int
  (widget :pointer)
  (direction #.(swig-lispify "GtkDirectionType" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_keynav_failed" 'function))

(cffi:defcfun ("gtk_widget_error_bell" #.(swig-lispify "gtk_widget_error_bell" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_error_bell" 'function))

(cffi:defcfun ("gtk_widget_set_size_request" #.(swig-lispify "gtk_widget_set_size_request" 'function)) :void
  (widget :pointer)
  (width :int)
  (height :int))

(cl:export '#.(swig-lispify "gtk_widget_set_size_request" 'function))

(cffi:defcfun ("gtk_widget_get_size_request" #.(swig-lispify "gtk_widget_get_size_request" 'function)) :void
  (widget :pointer)
  (width :pointer)
  (height :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_size_request" 'function))

(cffi:defcfun ("gtk_widget_set_opacity" #.(swig-lispify "gtk_widget_set_opacity" 'function)) :void
  (widget :pointer)
  (opacity :double))

(cl:export '#.(swig-lispify "gtk_widget_set_opacity" 'function))

(cffi:defcfun ("gtk_widget_get_opacity" #.(swig-lispify "gtk_widget_get_opacity" 'function)) :double
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_opacity" 'function))

(cffi:defcfun ("gtk_widget_set_overflow" #.(swig-lispify "gtk_widget_set_overflow" 'function)) :void
  (widget :pointer)
  (overflow #.(swig-lispify "GtkOverflow" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_set_overflow" 'function))

(cffi:defcfun ("gtk_widget_get_overflow" #.(swig-lispify "gtk_widget_get_overflow" 'function)) #.(swig-lispify "GtkOverflow" 'enumname)
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_overflow" 'function))

(cffi:defcfun ("gtk_widget_get_ancestor" #.(swig-lispify "gtk_widget_get_ancestor" 'function)) :pointer
  (widget :pointer)
  (widget_type :unsigned-long))

(cl:export '#.(swig-lispify "gtk_widget_get_ancestor" 'function))

(cffi:defcfun ("gtk_widget_get_scale_factor" #.(swig-lispify "gtk_widget_get_scale_factor" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_scale_factor" 'function))

(cffi:defcfun ("gtk_widget_get_display" #.(swig-lispify "gtk_widget_get_display" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_display" 'function))

(cffi:defcfun ("gtk_widget_get_settings" #.(swig-lispify "gtk_widget_get_settings" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_settings" 'function))

(cffi:defcfun ("gtk_widget_get_clipboard" #.(swig-lispify "gtk_widget_get_clipboard" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_clipboard" 'function))

(cffi:defcfun ("gtk_widget_get_primary_clipboard" #.(swig-lispify "gtk_widget_get_primary_clipboard" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_primary_clipboard" 'function))

(cffi:defcfun ("gtk_widget_get_hexpand" #.(swig-lispify "gtk_widget_get_hexpand" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_hexpand" 'function))

(cffi:defcfun ("gtk_widget_set_hexpand" #.(swig-lispify "gtk_widget_set_hexpand" 'function)) :void
  (widget :pointer)
  (expand :int))

(cl:export '#.(swig-lispify "gtk_widget_set_hexpand" 'function))

(cffi:defcfun ("gtk_widget_get_hexpand_set" #.(swig-lispify "gtk_widget_get_hexpand_set" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_hexpand_set" 'function))

(cffi:defcfun ("gtk_widget_set_hexpand_set" #.(swig-lispify "gtk_widget_set_hexpand_set" 'function)) :void
  (widget :pointer)
  (set :int))

(cl:export '#.(swig-lispify "gtk_widget_set_hexpand_set" 'function))

(cffi:defcfun ("gtk_widget_get_vexpand" #.(swig-lispify "gtk_widget_get_vexpand" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_vexpand" 'function))

(cffi:defcfun ("gtk_widget_set_vexpand" #.(swig-lispify "gtk_widget_set_vexpand" 'function)) :void
  (widget :pointer)
  (expand :int))

(cl:export '#.(swig-lispify "gtk_widget_set_vexpand" 'function))

(cffi:defcfun ("gtk_widget_get_vexpand_set" #.(swig-lispify "gtk_widget_get_vexpand_set" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_vexpand_set" 'function))

(cffi:defcfun ("gtk_widget_set_vexpand_set" #.(swig-lispify "gtk_widget_set_vexpand_set" 'function)) :void
  (widget :pointer)
  (set :int))

(cl:export '#.(swig-lispify "gtk_widget_set_vexpand_set" 'function))

(cffi:defcfun ("gtk_widget_compute_expand" #.(swig-lispify "gtk_widget_compute_expand" 'function)) :int
  (widget :pointer)
  (orientation #.(swig-lispify "GtkOrientation" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_compute_expand" 'function))

(cffi:defcfun ("gtk_widget_get_halign" #.(swig-lispify "gtk_widget_get_halign" 'function)) #.(swig-lispify "GtkAlign" 'enumname)
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_halign" 'function))

(cffi:defcfun ("gtk_widget_set_halign" #.(swig-lispify "gtk_widget_set_halign" 'function)) :void
  (widget :pointer)
  (align #.(swig-lispify "GtkAlign" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_set_halign" 'function))

(cffi:defcfun ("gtk_widget_get_valign" #.(swig-lispify "gtk_widget_get_valign" 'function)) #.(swig-lispify "GtkAlign" 'enumname)
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_valign" 'function))

(cffi:defcfun ("gtk_widget_set_valign" #.(swig-lispify "gtk_widget_set_valign" 'function)) :void
  (widget :pointer)
  (align #.(swig-lispify "GtkAlign" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_set_valign" 'function))

(cffi:defcfun ("gtk_widget_get_margin_start" #.(swig-lispify "gtk_widget_get_margin_start" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_margin_start" 'function))

(cffi:defcfun ("gtk_widget_set_margin_start" #.(swig-lispify "gtk_widget_set_margin_start" 'function)) :void
  (widget :pointer)
  (margin :int))

(cl:export '#.(swig-lispify "gtk_widget_set_margin_start" 'function))

(cffi:defcfun ("gtk_widget_get_margin_end" #.(swig-lispify "gtk_widget_get_margin_end" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_margin_end" 'function))

(cffi:defcfun ("gtk_widget_set_margin_end" #.(swig-lispify "gtk_widget_set_margin_end" 'function)) :void
  (widget :pointer)
  (margin :int))

(cl:export '#.(swig-lispify "gtk_widget_set_margin_end" 'function))

(cffi:defcfun ("gtk_widget_get_margin_top" #.(swig-lispify "gtk_widget_get_margin_top" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_margin_top" 'function))

(cffi:defcfun ("gtk_widget_set_margin_top" #.(swig-lispify "gtk_widget_set_margin_top" 'function)) :void
  (widget :pointer)
  (margin :int))

(cl:export '#.(swig-lispify "gtk_widget_set_margin_top" 'function))

(cffi:defcfun ("gtk_widget_get_margin_bottom" #.(swig-lispify "gtk_widget_get_margin_bottom" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_margin_bottom" 'function))

(cffi:defcfun ("gtk_widget_set_margin_bottom" #.(swig-lispify "gtk_widget_set_margin_bottom" 'function)) :void
  (widget :pointer)
  (margin :int))

(cl:export '#.(swig-lispify "gtk_widget_set_margin_bottom" 'function))

(cffi:defcfun ("gtk_widget_is_ancestor" #.(swig-lispify "gtk_widget_is_ancestor" 'function)) :int
  (widget :pointer)
  (ancestor :pointer))

(cl:export '#.(swig-lispify "gtk_widget_is_ancestor" 'function))

(cffi:defcfun ("gtk_widget_translate_coordinates" #.(swig-lispify "gtk_widget_translate_coordinates" 'function)) :int
  (src_widget :pointer)
  (dest_widget :pointer)
  (src_x :double)
  (src_y :double)
  (dest_x :pointer)
  (dest_y :pointer))

(cl:export '#.(swig-lispify "gtk_widget_translate_coordinates" 'function))

(cffi:defcfun ("gtk_widget_contains" #.(swig-lispify "gtk_widget_contains" 'function)) :int
  (widget :pointer)
  (x :double)
  (y :double))

(cl:export '#.(swig-lispify "gtk_widget_contains" 'function))

(cffi:defcfun ("gtk_widget_pick" #.(swig-lispify "gtk_widget_pick" 'function)) :pointer
  (widget :pointer)
  (x :double)
  (y :double)
  (flags #.(swig-lispify "GtkPickFlags" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_pick" 'function))

(cffi:defcfun ("gtk_widget_add_controller" #.(swig-lispify "gtk_widget_add_controller" 'function)) :void
  (widget :pointer)
  (controller :pointer))

(cl:export '#.(swig-lispify "gtk_widget_add_controller" 'function))

(cffi:defcfun ("gtk_widget_remove_controller" #.(swig-lispify "gtk_widget_remove_controller" 'function)) :void
  (widget :pointer)
  (controller :pointer))

(cl:export '#.(swig-lispify "gtk_widget_remove_controller" 'function))

(cffi:defcfun ("gtk_widget_create_pango_context" #.(swig-lispify "gtk_widget_create_pango_context" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_create_pango_context" 'function))

(cffi:defcfun ("gtk_widget_get_pango_context" #.(swig-lispify "gtk_widget_get_pango_context" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_pango_context" 'function))

(cffi:defcfun ("gtk_widget_set_font_options" #.(swig-lispify "gtk_widget_set_font_options" 'function)) :void
  (widget :pointer)
  (options :pointer))

(cl:export '#.(swig-lispify "gtk_widget_set_font_options" 'function))

(cffi:defcfun ("gtk_widget_get_font_options" #.(swig-lispify "gtk_widget_get_font_options" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_font_options" 'function))

(cffi:defcfun ("gtk_widget_create_pango_layout" #.(swig-lispify "gtk_widget_create_pango_layout" 'function)) :pointer
  (widget :pointer)
  (text :string))

(cl:export '#.(swig-lispify "gtk_widget_create_pango_layout" 'function))

(cffi:defcfun ("gtk_widget_set_direction" #.(swig-lispify "gtk_widget_set_direction" 'function)) :void
  (widget :pointer)
  (dir #.(swig-lispify "GtkTextDirection" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_set_direction" 'function))

(cffi:defcfun ("gtk_widget_get_direction" #.(swig-lispify "gtk_widget_get_direction" 'function)) #.(swig-lispify "GtkTextDirection" 'enumname)
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_direction" 'function))

(cffi:defcfun ("gtk_widget_set_default_direction" #.(swig-lispify "gtk_widget_set_default_direction" 'function)) :void
  (dir #.(swig-lispify "GtkTextDirection" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_set_default_direction" 'function))

(cffi:defcfun ("gtk_widget_get_default_direction" #.(swig-lispify "gtk_widget_get_default_direction" 'function)) #.(swig-lispify "GtkTextDirection" 'enumname))

(cl:export '#.(swig-lispify "gtk_widget_get_default_direction" 'function))

(cffi:defcfun ("gtk_widget_set_cursor" #.(swig-lispify "gtk_widget_set_cursor" 'function)) :void
  (widget :pointer)
  (cursor :pointer))

(cl:export '#.(swig-lispify "gtk_widget_set_cursor" 'function))

(cffi:defcfun ("gtk_widget_set_cursor_from_name" #.(swig-lispify "gtk_widget_set_cursor_from_name" 'function)) :void
  (widget :pointer)
  (name :string))

(cl:export '#.(swig-lispify "gtk_widget_set_cursor_from_name" 'function))

(cffi:defcfun ("gtk_widget_get_cursor" #.(swig-lispify "gtk_widget_get_cursor" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_cursor" 'function))

(cffi:defcfun ("gtk_widget_list_mnemonic_labels" #.(swig-lispify "gtk_widget_list_mnemonic_labels" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_list_mnemonic_labels" 'function))

(cffi:defcfun ("gtk_widget_add_mnemonic_label" #.(swig-lispify "gtk_widget_add_mnemonic_label" 'function)) :void
  (widget :pointer)
  (label :pointer))

(cl:export '#.(swig-lispify "gtk_widget_add_mnemonic_label" 'function))

(cffi:defcfun ("gtk_widget_remove_mnemonic_label" #.(swig-lispify "gtk_widget_remove_mnemonic_label" 'function)) :void
  (widget :pointer)
  (label :pointer))

(cl:export '#.(swig-lispify "gtk_widget_remove_mnemonic_label" 'function))

(cffi:defcfun ("gtk_widget_trigger_tooltip_query" #.(swig-lispify "gtk_widget_trigger_tooltip_query" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_trigger_tooltip_query" 'function))

(cffi:defcfun ("gtk_widget_set_tooltip_text" #.(swig-lispify "gtk_widget_set_tooltip_text" 'function)) :void
  (widget :pointer)
  (text :string))

(cl:export '#.(swig-lispify "gtk_widget_set_tooltip_text" 'function))

(cffi:defcfun ("gtk_widget_get_tooltip_text" #.(swig-lispify "gtk_widget_get_tooltip_text" 'function)) :string
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_tooltip_text" 'function))

(cffi:defcfun ("gtk_widget_set_tooltip_markup" #.(swig-lispify "gtk_widget_set_tooltip_markup" 'function)) :void
  (widget :pointer)
  (markup :string))

(cl:export '#.(swig-lispify "gtk_widget_set_tooltip_markup" 'function))

(cffi:defcfun ("gtk_widget_get_tooltip_markup" #.(swig-lispify "gtk_widget_get_tooltip_markup" 'function)) :string
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_tooltip_markup" 'function))

(cffi:defcfun ("gtk_widget_set_has_tooltip" #.(swig-lispify "gtk_widget_set_has_tooltip" 'function)) :void
  (widget :pointer)
  (has_tooltip :int))

(cl:export '#.(swig-lispify "gtk_widget_set_has_tooltip" 'function))

(cffi:defcfun ("gtk_widget_get_has_tooltip" #.(swig-lispify "gtk_widget_get_has_tooltip" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_has_tooltip" 'function))

(cffi:defcfun ("gtk_requisition_get_type" #.(swig-lispify "gtk_requisition_get_type" 'function)) :unsigned-long)

(cl:export '#.(swig-lispify "gtk_requisition_get_type" 'function))

(cffi:defcfun ("gtk_requisition_new" #.(swig-lispify "gtk_requisition_new" 'function)) :pointer)

(cl:export '#.(swig-lispify "gtk_requisition_new" 'function))

(cffi:defcfun ("gtk_requisition_copy" #.(swig-lispify "gtk_requisition_copy" 'function)) :pointer
  (requisition :pointer))

(cl:export '#.(swig-lispify "gtk_requisition_copy" 'function))

(cffi:defcfun ("gtk_requisition_free" #.(swig-lispify "gtk_requisition_free" 'function)) :void
  (requisition :pointer))

(cl:export '#.(swig-lispify "gtk_requisition_free" 'function))

(cffi:defcfun ("gtk_widget_in_destruction" #.(swig-lispify "gtk_widget_in_destruction" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_in_destruction" 'function))

(cffi:defcfun ("gtk_widget_get_style_context" #.(swig-lispify "gtk_widget_get_style_context" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_style_context" 'function))

(cffi:defcfun ("gtk_widget_class_set_css_name" #.(swig-lispify "gtk_widget_class_set_css_name" 'function)) :void
  (widget_class :pointer)
  (name :string))

(cl:export '#.(swig-lispify "gtk_widget_class_set_css_name" 'function))

(cffi:defcfun ("gtk_widget_class_get_css_name" #.(swig-lispify "gtk_widget_class_get_css_name" 'function)) :string
  (widget_class :pointer))

(cl:export '#.(swig-lispify "gtk_widget_class_get_css_name" 'function))

(cffi:defcfun ("gtk_widget_add_tick_callback" #.(swig-lispify "gtk_widget_add_tick_callback" 'function)) :unsigned-int
  (widget :pointer)
  (callback :pointer)
  (user_data :pointer)
  (notify :pointer))

(cl:export '#.(swig-lispify "gtk_widget_add_tick_callback" 'function))

(cffi:defcfun ("gtk_widget_remove_tick_callback" #.(swig-lispify "gtk_widget_remove_tick_callback" 'function)) :void
  (widget :pointer)
  (id :unsigned-int))

(cl:export '#.(swig-lispify "gtk_widget_remove_tick_callback" 'function))

(cffi:defcfun ("gtk_widget_init_template" #.(swig-lispify "gtk_widget_init_template" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_init_template" 'function))

(cffi:defcfun ("gtk_widget_get_template_child" #.(swig-lispify "gtk_widget_get_template_child" 'function)) :pointer
  (widget :pointer)
  (widget_type :unsigned-long)
  (name :string))

(cl:export '#.(swig-lispify "gtk_widget_get_template_child" 'function))

(cffi:defcfun ("gtk_widget_class_set_template" #.(swig-lispify "gtk_widget_class_set_template" 'function)) :void
  (widget_class :pointer)
  (template_bytes :pointer))

(cl:export '#.(swig-lispify "gtk_widget_class_set_template" 'function))

(cffi:defcfun ("gtk_widget_class_set_template_from_resource" #.(swig-lispify "gtk_widget_class_set_template_from_resource" 'function)) :void
  (widget_class :pointer)
  (resource_name :string))

(cl:export '#.(swig-lispify "gtk_widget_class_set_template_from_resource" 'function))

(cffi:defcfun ("gtk_widget_class_bind_template_callback_full" #.(swig-lispify "gtk_widget_class_bind_template_callback_full" 'function)) :void
  (widget_class :pointer)
  (callback_name :string)
  (callback_symbol :pointer))

(cl:export '#.(swig-lispify "gtk_widget_class_bind_template_callback_full" 'function))

(cffi:defcfun ("gtk_widget_class_set_template_scope" #.(swig-lispify "gtk_widget_class_set_template_scope" 'function)) :void
  (widget_class :pointer)
  (scope :pointer))

(cl:export '#.(swig-lispify "gtk_widget_class_set_template_scope" 'function))

(cffi:defcfun ("gtk_widget_class_bind_template_child_full" #.(swig-lispify "gtk_widget_class_bind_template_child_full" 'function)) :void
  (widget_class :pointer)
  (name :string)
  (internal_child :int)
  (struct_offset :long))

(cl:export '#.(swig-lispify "gtk_widget_class_bind_template_child_full" 'function))

(cffi:defcfun ("gtk_widget_insert_action_group" #.(swig-lispify "gtk_widget_insert_action_group" 'function)) :void
  (widget :pointer)
  (name :string)
  (group :pointer))

(cl:export '#.(swig-lispify "gtk_widget_insert_action_group" 'function))

(cffi:defcfun ("gtk_widget_activate_action" #.(swig-lispify "gtk_widget_activate_action" 'function)) :int
  (widget :pointer)
  (name :string)
  (format_string :string)
  &rest)

(cl:export '#.(swig-lispify "gtk_widget_activate_action" 'function))

(cffi:defcfun ("gtk_widget_activate_action_variant" #.(swig-lispify "gtk_widget_activate_action_variant" 'function)) :int
  (widget :pointer)
  (name :string)
  (args :pointer))

(cl:export '#.(swig-lispify "gtk_widget_activate_action_variant" 'function))

(cffi:defcfun ("gtk_widget_activate_default" #.(swig-lispify "gtk_widget_activate_default" 'function)) :void
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_activate_default" 'function))

(cffi:defcfun ("gtk_widget_set_font_map" #.(swig-lispify "gtk_widget_set_font_map" 'function)) :void
  (widget :pointer)
  (font_map :pointer))

(cl:export '#.(swig-lispify "gtk_widget_set_font_map" 'function))

(cffi:defcfun ("gtk_widget_get_font_map" #.(swig-lispify "gtk_widget_get_font_map" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_font_map" 'function))

(cffi:defcfun ("gtk_widget_get_first_child" #.(swig-lispify "gtk_widget_get_first_child" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_first_child" 'function))

(cffi:defcfun ("gtk_widget_get_last_child" #.(swig-lispify "gtk_widget_get_last_child" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_last_child" 'function))

(cffi:defcfun ("gtk_widget_get_next_sibling" #.(swig-lispify "gtk_widget_get_next_sibling" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_next_sibling" 'function))

(cffi:defcfun ("gtk_widget_get_prev_sibling" #.(swig-lispify "gtk_widget_get_prev_sibling" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_prev_sibling" 'function))

(cffi:defcfun ("gtk_widget_observe_children" #.(swig-lispify "gtk_widget_observe_children" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_observe_children" 'function))

(cffi:defcfun ("gtk_widget_observe_controllers" #.(swig-lispify "gtk_widget_observe_controllers" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_observe_controllers" 'function))

(cffi:defcfun ("gtk_widget_insert_after" #.(swig-lispify "gtk_widget_insert_after" 'function)) :void
  (widget :pointer)
  (parent :pointer)
  (previous_sibling :pointer))

(cl:export '#.(swig-lispify "gtk_widget_insert_after" 'function))

(cffi:defcfun ("gtk_widget_insert_before" #.(swig-lispify "gtk_widget_insert_before" 'function)) :void
  (widget :pointer)
  (parent :pointer)
  (next_sibling :pointer))

(cl:export '#.(swig-lispify "gtk_widget_insert_before" 'function))

(cffi:defcfun ("gtk_widget_set_focus_child" #.(swig-lispify "gtk_widget_set_focus_child" 'function)) :void
  (widget :pointer)
  (child :pointer))

(cl:export '#.(swig-lispify "gtk_widget_set_focus_child" 'function))

(cffi:defcfun ("gtk_widget_get_focus_child" #.(swig-lispify "gtk_widget_get_focus_child" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_focus_child" 'function))

(cffi:defcfun ("gtk_widget_snapshot_child" #.(swig-lispify "gtk_widget_snapshot_child" 'function)) :void
  (widget :pointer)
  (child :pointer)
  (snapshot :pointer))

(cl:export '#.(swig-lispify "gtk_widget_snapshot_child" 'function))

(cffi:defcfun ("gtk_widget_should_layout" #.(swig-lispify "gtk_widget_should_layout" 'function)) :int
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_should_layout" 'function))

(cffi:defcfun ("gtk_widget_get_css_name" #.(swig-lispify "gtk_widget_get_css_name" 'function)) :string
  (self :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_css_name" 'function))

(cffi:defcfun ("gtk_widget_add_css_class" #.(swig-lispify "gtk_widget_add_css_class" 'function)) :void
  (widget :pointer)
  (css_class :string))

(cl:export '#.(swig-lispify "gtk_widget_add_css_class" 'function))

(cffi:defcfun ("gtk_widget_remove_css_class" #.(swig-lispify "gtk_widget_remove_css_class" 'function)) :void
  (widget :pointer)
  (css_class :string))

(cl:export '#.(swig-lispify "gtk_widget_remove_css_class" 'function))

(cffi:defcfun ("gtk_widget_has_css_class" #.(swig-lispify "gtk_widget_has_css_class" 'function)) :int
  (widget :pointer)
  (css_class :string))

(cl:export '#.(swig-lispify "gtk_widget_has_css_class" 'function))

(cffi:defcfun ("gtk_widget_get_css_classes" #.(swig-lispify "gtk_widget_get_css_classes" 'function)) :pointer
  (widget :pointer))

(cl:export '#.(swig-lispify "gtk_widget_get_css_classes" 'function))

(cffi:defcfun ("gtk_widget_set_css_classes" #.(swig-lispify "gtk_widget_set_css_classes" 'function)) :void
  (widget :pointer)
  (classes :pointer))

(cl:export '#.(swig-lispify "gtk_widget_set_css_classes" 'function))

(cffi:defcfun ("gtk_widget_class_install_action" #.(swig-lispify "gtk_widget_class_install_action" 'function)) :void
  (widget_class :pointer)
  (action_name :string)
  (parameter_type :string)
  (activate :pointer))

(cl:export '#.(swig-lispify "gtk_widget_class_install_action" 'function))

(cffi:defcfun ("gtk_widget_class_install_property_action" #.(swig-lispify "gtk_widget_class_install_property_action" 'function)) :void
  (widget_class :pointer)
  (action_name :string)
  (property_name :string))

(cl:export '#.(swig-lispify "gtk_widget_class_install_property_action" 'function))

(cffi:defcfun ("gtk_widget_class_query_action" #.(swig-lispify "gtk_widget_class_query_action" 'function)) :int
  (widget_class :pointer)
  (index_ :unsigned-int)
  (owner :pointer)
  (action_name :pointer)
  (parameter_type :pointer)
  (property_name :pointer))

(cl:export '#.(swig-lispify "gtk_widget_class_query_action" 'function))

(cffi:defcfun ("gtk_widget_action_set_enabled" #.(swig-lispify "gtk_widget_action_set_enabled" 'function)) :void
  (widget :pointer)
  (action_name :string)
  (enabled :int))

(cl:export '#.(swig-lispify "gtk_widget_action_set_enabled" 'function))

(cffi:defcfun ("gtk_widget_class_set_accessible_role" #.(swig-lispify "gtk_widget_class_set_accessible_role" 'function)) :void
  (widget_class :pointer)
  (accessible_role #.(swig-lispify "GtkAccessibleRole" 'enumname)))

(cl:export '#.(swig-lispify "gtk_widget_class_set_accessible_role" 'function))

(cffi:defcfun ("gtk_widget_class_get_accessible_role" #.(swig-lispify "gtk_widget_class_get_accessible_role" 'function)) #.(swig-lispify "GtkAccessibleRole" 'enumname)
  (widget_class :pointer))

(cl:export '#.(swig-lispify "gtk_widget_class_get_accessible_role" 'function))


