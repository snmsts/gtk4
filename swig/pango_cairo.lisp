;;; This file was automatically generated by SWIG (http://www.swig.org).
;;; Version 4.0.2
;;;
;;; Do not make changes to this file unless you know what you are doing--modify
;;; the SWIG interface file instead.

(uiop/package:define-package :gtk4/swig/pango_cairo
  (:use :cl :cffi :gtk4/swig-wrap)
  (:nicknames :gtk4/pango_cairo)
  (:export
   ))
(in-package :gtk4/swig/pango_cairo)

(define-foreign-library libpango
  (:win32 "libpango-1.0-0.dll")
  (t (:default "libpango-1.0")))

(cffi:defcenum #.(swig-lispify "GUserDirectory" 'enumname)
	#.(swig-lispify "G_USER_DIRECTORY_DESKTOP" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_DOCUMENTS" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_DOWNLOAD" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_MUSIC" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_PICTURES" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_PUBLIC_SHARE" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_TEMPLATES" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_DIRECTORY_VIDEOS" 'enumvalue :keyword)
	#.(swig-lispify "G_USER_N_DIRECTORIES" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUserDirectory" 'enumname))

(cffi:defcenum #.(swig-lispify "GFormatSizeFlags" 'enumname)
	(#.(swig-lispify "G_FORMAT_SIZE_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_FORMAT_SIZE_LONG_FORMAT" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_FORMAT_SIZE_IEC_UNITS" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_FORMAT_SIZE_BITS" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GFormatSizeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GThreadError" 'enumname)
	#.(swig-lispify "G_THREAD_ERROR_AGAIN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GThreadError" 'enumname))

(cffi:defcenum #.(swig-lispify "GOnceStatus" 'enumname)
	#.(swig-lispify "G_ONCE_STATUS_NOTCALLED" 'enumvalue :keyword)
	#.(swig-lispify "G_ONCE_STATUS_PROGRESS" 'enumvalue :keyword)
	#.(swig-lispify "G_ONCE_STATUS_READY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GOnceStatus" 'enumname))

(defanonenum 
	(#.(swig-lispify "SI_ASYNCNL" 'enumvalue) #.-60)
	(#.(swig-lispify "SI_DETHREAD" 'enumvalue) #.-7)
	#.(swig-lispify "SI_TKILL" 'enumvalue)
	#.(swig-lispify "SI_SIGIO" 'enumvalue)
	#.(swig-lispify "SI_ASYNCIO" 'enumvalue)
	#.(swig-lispify "SI_MESGQ" 'enumvalue)
	#.(swig-lispify "SI_TIMER" 'enumvalue)
	#.(swig-lispify "SI_QUEUE" 'enumvalue)
	#.(swig-lispify "SI_USER" 'enumvalue)
	(#.(swig-lispify "SI_KERNEL" 'enumvalue) #.#x80))

(cl:export '#.(swig-lispify "SI_ASYNCNL" 'enumvalue))

(cl:export '#.(swig-lispify "SI_DETHREAD" 'enumvalue))

(cl:export '#.(swig-lispify "SI_TKILL" 'enumvalue))

(cl:export '#.(swig-lispify "SI_SIGIO" 'enumvalue))

(cl:export '#.(swig-lispify "SI_ASYNCIO" 'enumvalue))

(cl:export '#.(swig-lispify "SI_MESGQ" 'enumvalue))

(cl:export '#.(swig-lispify "SI_TIMER" 'enumvalue))

(cl:export '#.(swig-lispify "SI_QUEUE" 'enumvalue))

(cl:export '#.(swig-lispify "SI_USER" 'enumvalue))

(cl:export '#.(swig-lispify "SI_KERNEL" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "ILL_ILLOPC" 'enumvalue) #.1)
	#.(swig-lispify "ILL_ILLOPN" 'enumvalue)
	#.(swig-lispify "ILL_ILLADR" 'enumvalue)
	#.(swig-lispify "ILL_ILLTRP" 'enumvalue)
	#.(swig-lispify "ILL_PRVOPC" 'enumvalue)
	#.(swig-lispify "ILL_PRVREG" 'enumvalue)
	#.(swig-lispify "ILL_COPROC" 'enumvalue)
	#.(swig-lispify "ILL_BADSTK" 'enumvalue)
	#.(swig-lispify "ILL_BADIADDR" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_ILLOPC" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_ILLOPN" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_ILLADR" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_ILLTRP" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_PRVOPC" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_PRVREG" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_COPROC" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_BADSTK" 'enumvalue))

(cl:export '#.(swig-lispify "ILL_BADIADDR" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "FPE_INTDIV" 'enumvalue) #.1)
	#.(swig-lispify "FPE_INTOVF" 'enumvalue)
	#.(swig-lispify "FPE_FLTDIV" 'enumvalue)
	#.(swig-lispify "FPE_FLTOVF" 'enumvalue)
	#.(swig-lispify "FPE_FLTUND" 'enumvalue)
	#.(swig-lispify "FPE_FLTRES" 'enumvalue)
	#.(swig-lispify "FPE_FLTINV" 'enumvalue)
	#.(swig-lispify "FPE_FLTSUB" 'enumvalue)
	(#.(swig-lispify "FPE_FLTUNK" 'enumvalue) #.14)
	#.(swig-lispify "FPE_CONDTRAP" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_INTDIV" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_INTOVF" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTDIV" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTOVF" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTUND" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTRES" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTINV" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTSUB" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_FLTUNK" 'enumvalue))

(cl:export '#.(swig-lispify "FPE_CONDTRAP" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "SEGV_MAPERR" 'enumvalue) #.1)
	#.(swig-lispify "SEGV_ACCERR" 'enumvalue)
	#.(swig-lispify "SEGV_BNDERR" 'enumvalue)
	#.(swig-lispify "SEGV_PKUERR" 'enumvalue)
	#.(swig-lispify "SEGV_ACCADI" 'enumvalue)
	#.(swig-lispify "SEGV_ADIDERR" 'enumvalue)
	#.(swig-lispify "SEGV_ADIPERR" 'enumvalue)
	#.(swig-lispify "SEGV_MTEAERR" 'enumvalue)
	#.(swig-lispify "SEGV_MTESERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_MAPERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_ACCERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_BNDERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_PKUERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_ACCADI" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_ADIDERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_ADIPERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_MTEAERR" 'enumvalue))

(cl:export '#.(swig-lispify "SEGV_MTESERR" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "BUS_ADRALN" 'enumvalue) #.1)
	#.(swig-lispify "BUS_ADRERR" 'enumvalue)
	#.(swig-lispify "BUS_OBJERR" 'enumvalue)
	#.(swig-lispify "BUS_MCEERR_AR" 'enumvalue)
	#.(swig-lispify "BUS_MCEERR_AO" 'enumvalue))

(cl:export '#.(swig-lispify "BUS_ADRALN" 'enumvalue))

(cl:export '#.(swig-lispify "BUS_ADRERR" 'enumvalue))

(cl:export '#.(swig-lispify "BUS_OBJERR" 'enumvalue))

(cl:export '#.(swig-lispify "BUS_MCEERR_AR" 'enumvalue))

(cl:export '#.(swig-lispify "BUS_MCEERR_AO" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "CLD_EXITED" 'enumvalue) #.1)
	#.(swig-lispify "CLD_KILLED" 'enumvalue)
	#.(swig-lispify "CLD_DUMPED" 'enumvalue)
	#.(swig-lispify "CLD_TRAPPED" 'enumvalue)
	#.(swig-lispify "CLD_STOPPED" 'enumvalue)
	#.(swig-lispify "CLD_CONTINUED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_EXITED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_KILLED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_DUMPED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_TRAPPED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_STOPPED" 'enumvalue))

(cl:export '#.(swig-lispify "CLD_CONTINUED" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "POLL_IN" 'enumvalue) #.1)
	#.(swig-lispify "POLL_OUT" 'enumvalue)
	#.(swig-lispify "POLL_MSG" 'enumvalue)
	#.(swig-lispify "POLL_ERR" 'enumvalue)
	#.(swig-lispify "POLL_PRI" 'enumvalue)
	#.(swig-lispify "POLL_HUP" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_IN" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_OUT" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_MSG" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_ERR" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_PRI" 'enumvalue))

(cl:export '#.(swig-lispify "POLL_HUP" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "SIGEV_SIGNAL" 'enumvalue) #.0)
	#.(swig-lispify "SIGEV_NONE" 'enumvalue)
	#.(swig-lispify "SIGEV_THREAD" 'enumvalue)
	(#.(swig-lispify "SIGEV_THREAD_ID" 'enumvalue) #.4))

(cl:export '#.(swig-lispify "SIGEV_SIGNAL" 'enumvalue))

(cl:export '#.(swig-lispify "SIGEV_NONE" 'enumvalue))

(cl:export '#.(swig-lispify "SIGEV_THREAD" 'enumvalue))

(cl:export '#.(swig-lispify "SIGEV_THREAD_ID" 'enumvalue))

(defanonenum 
	(#.(swig-lispify "SS_ONSTACK" 'enumvalue) #.1)
	#.(swig-lispify "SS_DISABLE" 'enumvalue))

(cl:export '#.(swig-lispify "SS_ONSTACK" 'enumvalue))

(cl:export '#.(swig-lispify "SS_DISABLE" 'enumvalue))

(cffi:defcenum #.(swig-lispify "GTimeType" 'enumname)
	#.(swig-lispify "G_TIME_TYPE_STANDARD" 'enumvalue :keyword)
	#.(swig-lispify "G_TIME_TYPE_DAYLIGHT" 'enumvalue :keyword)
	#.(swig-lispify "G_TIME_TYPE_UNIVERSAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTimeType" 'enumname))

(cffi:defcenum #.(swig-lispify "GBookmarkFileError" 'enumname)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_INVALID_URI" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_INVALID_VALUE" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_APP_NOT_REGISTERED" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_URI_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_READ" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_UNKNOWN_ENCODING" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_WRITE" 'enumvalue :keyword)
	#.(swig-lispify "G_BOOKMARK_FILE_ERROR_FILE_NOT_FOUND" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GBookmarkFileError" 'enumname))

(cffi:defcenum #.(swig-lispify "GChecksumType" 'enumname)
	#.(swig-lispify "G_CHECKSUM_MD5" 'enumvalue :keyword)
	#.(swig-lispify "G_CHECKSUM_SHA1" 'enumvalue :keyword)
	#.(swig-lispify "G_CHECKSUM_SHA256" 'enumvalue :keyword)
	#.(swig-lispify "G_CHECKSUM_SHA512" 'enumvalue :keyword)
	#.(swig-lispify "G_CHECKSUM_SHA384" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GChecksumType" 'enumname))

(cffi:defcenum #.(swig-lispify "GConvertError" 'enumname)
	#.(swig-lispify "G_CONVERT_ERROR_NO_CONVERSION" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_ILLEGAL_SEQUENCE" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_PARTIAL_INPUT" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_BAD_URI" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_NOT_ABSOLUTE_PATH" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_NO_MEMORY" 'enumvalue :keyword)
	#.(swig-lispify "G_CONVERT_ERROR_EMBEDDED_NUL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GConvertError" 'enumname))

(cffi:defcenum #.(swig-lispify "GDateDMY" 'enumname)
	(#.(swig-lispify "G_DATE_DAY" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DATE_MONTH" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_DATE_YEAR" 'enumvalue :keyword) #.2))

(cl:export '#.(swig-lispify "GDateDMY" 'enumname))

(cffi:defcenum #.(swig-lispify "GDateWeekday" 'enumname)
	(#.(swig-lispify "G_DATE_BAD_WEEKDAY" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DATE_MONDAY" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_DATE_TUESDAY" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_DATE_WEDNESDAY" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "G_DATE_THURSDAY" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "G_DATE_FRIDAY" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "G_DATE_SATURDAY" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "G_DATE_SUNDAY" 'enumvalue :keyword) #.7))

(cl:export '#.(swig-lispify "GDateWeekday" 'enumname))

(cffi:defcenum #.(swig-lispify "GDateMonth" 'enumname)
	(#.(swig-lispify "G_DATE_BAD_MONTH" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_DATE_JANUARY" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_DATE_FEBRUARY" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_DATE_MARCH" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "G_DATE_APRIL" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "G_DATE_MAY" 'enumvalue :keyword) #.5)
	(#.(swig-lispify "G_DATE_JUNE" 'enumvalue :keyword) #.6)
	(#.(swig-lispify "G_DATE_JULY" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "G_DATE_AUGUST" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "G_DATE_SEPTEMBER" 'enumvalue :keyword) #.9)
	(#.(swig-lispify "G_DATE_OCTOBER" 'enumvalue :keyword) #.10)
	(#.(swig-lispify "G_DATE_NOVEMBER" 'enumvalue :keyword) #.11)
	(#.(swig-lispify "G_DATE_DECEMBER" 'enumvalue :keyword) #.12))

(cl:export '#.(swig-lispify "GDateMonth" 'enumname))

(defanonenum 
	(#.(swig-lispify "DT_UNKNOWN" 'enumvalue) #.0)
	(#.(swig-lispify "DT_FIFO" 'enumvalue) #.1)
	(#.(swig-lispify "DT_CHR" 'enumvalue) #.2)
	(#.(swig-lispify "DT_DIR" 'enumvalue) #.4)
	(#.(swig-lispify "DT_BLK" 'enumvalue) #.6)
	(#.(swig-lispify "DT_REG" 'enumvalue) #.8)
	(#.(swig-lispify "DT_LNK" 'enumvalue) #.10)
	(#.(swig-lispify "DT_SOCK" 'enumvalue) #.12)
	(#.(swig-lispify "DT_WHT" 'enumvalue) #.14))

(cl:export '#.(swig-lispify "DT_UNKNOWN" 'enumvalue))

(cl:export '#.(swig-lispify "DT_FIFO" 'enumvalue))

(cl:export '#.(swig-lispify "DT_CHR" 'enumvalue))

(cl:export '#.(swig-lispify "DT_DIR" 'enumvalue))

(cl:export '#.(swig-lispify "DT_BLK" 'enumvalue))

(cl:export '#.(swig-lispify "DT_REG" 'enumvalue))

(cl:export '#.(swig-lispify "DT_LNK" 'enumvalue))

(cl:export '#.(swig-lispify "DT_SOCK" 'enumvalue))

(cl:export '#.(swig-lispify "DT_WHT" 'enumvalue))

(cffi:defcenum #.(swig-lispify "GFileError" 'enumname)
	#.(swig-lispify "G_FILE_ERROR_EXIST" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_ISDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_ACCES" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NAMETOOLONG" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NOENT" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NOTDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NXIO" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NODEV" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_ROFS" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_TXTBSY" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_FAULT" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_LOOP" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NOSPC" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NOMEM" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_MFILE" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NFILE" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_BADF" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_INVAL" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_PIPE" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_AGAIN" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_INTR" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_IO" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_PERM" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_NOSYS" 'enumvalue :keyword)
	#.(swig-lispify "G_FILE_ERROR_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GFileError" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileTest" 'enumname)
	(#.(swig-lispify "G_FILE_TEST_IS_REGULAR" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_FILE_TEST_IS_SYMLINK" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_FILE_TEST_IS_DIR" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_FILE_TEST_IS_EXECUTABLE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_FILE_TEST_EXISTS" 'enumvalue :keyword) #.(cl:ash 1 4)))

(cl:export '#.(swig-lispify "GFileTest" 'enumname))

(cffi:defcenum #.(swig-lispify "GFileSetContentsFlags" 'enumname)
	(#.(swig-lispify "G_FILE_SET_CONTENTS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_FILE_SET_CONTENTS_CONSISTENT" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_FILE_SET_CONTENTS_DURABLE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_FILE_SET_CONTENTS_ONLY_EXISTING" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GFileSetContentsFlags" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GTraverseFlags" 'enumname)
	(#.(swig-lispify "G_TRAVERSE_LEAVES" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_TRAVERSE_NON_LEAVES" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_TRAVERSE_ALL" 'enumvalue :keyword) #.(cl:logior G_TRAVERSE_LEAVES G_TRAVERSE_NON_LEAVES))
	(#.(swig-lispify "G_TRAVERSE_MASK" 'enumvalue :keyword) #.#x03)
	(#.(swig-lispify "G_TRAVERSE_LEAFS" 'enumvalue :keyword) #.G_TRAVERSE_LEAVES)
	(#.(swig-lispify "G_TRAVERSE_NON_LEAFS" 'enumvalue :keyword) #.G_TRAVERSE_NON_LEAVES))

(cl:export '#.(swig-lispify "GTraverseFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTraverseType" 'enumname)
	#.(swig-lispify "G_IN_ORDER" 'enumvalue :keyword)
	#.(swig-lispify "G_PRE_ORDER" 'enumvalue :keyword)
	#.(swig-lispify "G_POST_ORDER" 'enumvalue :keyword)
	#.(swig-lispify "G_LEVEL_ORDER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTraverseType" 'enumname))

(cffi:defcenum #.(swig-lispify "GHookFlagMask" 'enumname)
	(#.(swig-lispify "G_HOOK_FLAG_ACTIVE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_HOOK_FLAG_IN_CALL" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_HOOK_FLAG_MASK" 'enumvalue :keyword) #.#x0f))

(cl:export '#.(swig-lispify "GHookFlagMask" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOCondition" 'enumname)
	(#.(swig-lispify "G_IO_IN" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_IO_OUT" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "G_IO_PRI" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "G_IO_ERR" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "G_IO_HUP" 'enumvalue :keyword) #.16)
	(#.(swig-lispify "G_IO_NVAL" 'enumvalue :keyword) #.32))

(cl:export '#.(swig-lispify "GIOCondition" 'enumname))

(cffi:defcenum #.(swig-lispify "GMainContextFlags" 'enumname)
	(#.(swig-lispify "G_MAIN_CONTEXT_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_MAIN_CONTEXT_FLAGS_OWNERLESS_POLLING" 'enumvalue :keyword) #.1))

(cl:export '#.(swig-lispify "GMainContextFlags" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GUnicodeType" 'enumname)
	#.(swig-lispify "G_UNICODE_CONTROL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_FORMAT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_UNASSIGNED" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_PRIVATE_USE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SURROGATE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_LOWERCASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_MODIFIER_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_OTHER_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_TITLECASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_UPPERCASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SPACING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_ENCLOSING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_NON_SPACING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_DECIMAL_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_LETTER_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_OTHER_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_CONNECT_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_DASH_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_CLOSE_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_FINAL_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_INITIAL_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_OTHER_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_OPEN_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_CURRENCY_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_MODIFIER_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_MATH_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_OTHER_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_LINE_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_PARAGRAPH_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SPACE_SEPARATOR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUnicodeType" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GUnicodeBreakType" 'enumname)
	#.(swig-lispify "G_UNICODE_BREAK_MANDATORY" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_CARRIAGE_RETURN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_LINE_FEED" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_COMBINING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_SURROGATE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_ZERO_WIDTH_SPACE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_INSEPARABLE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_NON_BREAKING_GLUE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_CONTINGENT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_SPACE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_AFTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_BEFORE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_BEFORE_AND_AFTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HYPHEN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_NON_STARTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_OPEN_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_CLOSE_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_QUOTATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_EXCLAMATION" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_IDEOGRAPHIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_NUMERIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_INFIX_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_ALPHABETIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_PREFIX" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_POSTFIX" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_COMPLEX_CONTEXT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_AMBIGUOUS" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_NEXT_LINE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_WORD_JOINER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HANGUL_L_JAMO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HANGUL_V_JAMO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HANGUL_T_JAMO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HANGUL_LV_SYLLABLE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HANGUL_LVT_SYLLABLE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_CLOSE_PARANTHESIS" 'enumvalue :keyword)
	(#.(swig-lispify "G_UNICODE_BREAK_CLOSE_PARENTHESIS" 'enumvalue :keyword) #.G_UNICODE_BREAK_CLOSE_PARANTHESIS)
	#.(swig-lispify "G_UNICODE_BREAK_CONDITIONAL_JAPANESE_STARTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_HEBREW_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_REGIONAL_INDICATOR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_EMOJI_BASE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_EMOJI_MODIFIER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_BREAK_ZERO_WIDTH_JOINER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUnicodeBreakType" 'enumname))

(cffi:defcenum #.(swig-lispify "GUnicodeScript" 'enumname)
	(#.(swig-lispify "G_UNICODE_SCRIPT_INVALID_CODE" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "G_UNICODE_SCRIPT_COMMON" 'enumvalue :keyword) #.0)
	#.(swig-lispify "G_UNICODE_SCRIPT_INHERITED" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ARABIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ARMENIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BENGALI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BOPOMOFO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CHEROKEE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_COPTIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CYRILLIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_DESERET" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_DEVANAGARI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ETHIOPIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GEORGIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GOTHIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GREEK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GUJARATI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GURMUKHI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HANGUL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HEBREW" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HIRAGANA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KANNADA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KATAKANA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KHMER" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LAO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LATIN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MALAYALAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MONGOLIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MYANMAR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OGHAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_ITALIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ORIYA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_RUNIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SINHALA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SYRIAC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAMIL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TELUGU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_THAANA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_THAI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TIBETAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CANADIAN_ABORIGINAL" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_YI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAGALOG" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HANUNOO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BUHID" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAGBANWA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BRAILLE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CYPRIOT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LIMBU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OSMANYA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SHAVIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LINEAR_B" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAI_LE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_UGARITIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NEW_TAI_LUE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BUGINESE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GLAGOLITIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TIFINAGH" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SYLOTI_NAGRI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_PERSIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KHAROSHTHI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BALINESE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CUNEIFORM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PHOENICIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PHAGS_PA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NKO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KAYAH_LI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LEPCHA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_REJANG" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SUNDANESE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SAURASHTRA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CHAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OL_CHIKI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_VAI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CARIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LYCIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LYDIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_AVESTAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BAMUM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_EGYPTIAN_HIEROGLYPHS" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_IMPERIAL_ARAMAIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_INSCRIPTIONAL_PAHLAVI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_INSCRIPTIONAL_PARTHIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_JAVANESE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KAITHI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LISU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MEETEI_MAYEK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_SOUTH_ARABIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_TURKIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SAMARITAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAI_THAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAI_VIET" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BATAK" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BRAHMI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MANDAIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CHAKMA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MEROITIC_CURSIVE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MEROITIC_HIEROGLYPHS" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MIAO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SHARADA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SORA_SOMPENG" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TAKRI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BASSA_VAH" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CAUCASIAN_ALBANIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_DUPLOYAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ELBASAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GRANTHA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KHOJKI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KHUDAWADI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_LINEAR_A" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MAHAJANI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MANICHAEAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MENDE_KIKAKUI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MODI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MRO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NABATAEAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_NORTH_ARABIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_PERMIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PAHAWH_HMONG" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PALMYRENE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PAU_CIN_HAU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_PSALTER_PAHLAVI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SIDDHAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TIRHUTA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_WARANG_CITI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_AHOM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ANATOLIAN_HIEROGLYPHS" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HATRAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MULTANI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_HUNGARIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SIGNWRITING" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ADLAM" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_BHAIKSUKI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MARCHEN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NEWA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OSAGE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TANGUT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MASARAM_GONDI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NUSHU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SOYOMBO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ZANABAZAR_SQUARE" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_DOGRA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_GUNJALA_GONDI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_HANIFI_ROHINGYA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MAKASAR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MEDEFAIDRIN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_SOGDIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_SOGDIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_ELYMAIC" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NANDINAGARI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_NYIAKENG_PUACHUE_HMONG" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_WANCHO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CHORASMIAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_DIVES_AKURU" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_KHITAN_SMALL_SCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_YEZIDI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_CYPRO_MINOAN" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_OLD_UYGHUR" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TANGSA" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_TOTO" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_VITHKUQI" 'enumvalue :keyword)
	#.(swig-lispify "G_UNICODE_SCRIPT_MATH" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUnicodeScript" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GNormalizeMode" 'enumname)
	#.(swig-lispify "G_NORMALIZE_DEFAULT" 'enumvalue :keyword)
	(#.(swig-lispify "G_NORMALIZE_NFD" 'enumvalue :keyword) #.G_NORMALIZE_DEFAULT)
	#.(swig-lispify "G_NORMALIZE_DEFAULT_COMPOSE" 'enumvalue :keyword)
	(#.(swig-lispify "G_NORMALIZE_NFC" 'enumvalue :keyword) #.G_NORMALIZE_DEFAULT_COMPOSE)
	#.(swig-lispify "G_NORMALIZE_ALL" 'enumvalue :keyword)
	(#.(swig-lispify "G_NORMALIZE_NFKD" 'enumvalue :keyword) #.G_NORMALIZE_ALL)
	#.(swig-lispify "G_NORMALIZE_ALL_COMPOSE" 'enumvalue :keyword)
	(#.(swig-lispify "G_NORMALIZE_NFKC" 'enumvalue :keyword) #.G_NORMALIZE_ALL_COMPOSE))

(cl:export '#.(swig-lispify "GNormalizeMode" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOError" 'enumname)
	#.(swig-lispify "G_IO_ERROR_NONE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_AGAIN" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_INVAL" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_ERROR_UNKNOWN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GIOError" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOChannelError" 'enumname)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_FBIG" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_INVAL" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_IO" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_ISDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_NOSPC" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_NXIO" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_OVERFLOW" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_PIPE" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_CHANNEL_ERROR_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GIOChannelError" 'enumname))

(cffi:defcenum #.(swig-lispify "GIOStatus" 'enumname)
	#.(swig-lispify "G_IO_STATUS_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_STATUS_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_STATUS_EOF" 'enumvalue :keyword)
	#.(swig-lispify "G_IO_STATUS_AGAIN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GIOStatus" 'enumname))

(cffi:defcenum #.(swig-lispify "GSeekType" 'enumname)
	#.(swig-lispify "G_SEEK_CUR" 'enumvalue :keyword)
	#.(swig-lispify "G_SEEK_SET" 'enumvalue :keyword)
	#.(swig-lispify "G_SEEK_END" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GSeekType" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GIOFlags" 'enumname)
	(#.(swig-lispify "G_IO_FLAG_APPEND" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_IO_FLAG_NONBLOCK" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_IO_FLAG_IS_READABLE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_IO_FLAG_IS_WRITABLE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_IO_FLAG_IS_WRITEABLE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_IO_FLAG_IS_SEEKABLE" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_IO_FLAG_MASK" 'enumvalue :keyword) #.(cl:- (cl:ash 1 5) 1))
	(#.(swig-lispify "G_IO_FLAG_GET_MASK" 'enumvalue :keyword) #.G_IO_FLAG_MASK)
	(#.(swig-lispify "G_IO_FLAG_SET_MASK" 'enumvalue :keyword) #.(cl:logior G_IO_FLAG_APPEND G_IO_FLAG_NONBLOCK)))

(cl:export '#.(swig-lispify "GIOFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GKeyFileError" 'enumname)
	#.(swig-lispify "G_KEY_FILE_ERROR_UNKNOWN_ENCODING" 'enumvalue :keyword)
	#.(swig-lispify "G_KEY_FILE_ERROR_PARSE" 'enumvalue :keyword)
	#.(swig-lispify "G_KEY_FILE_ERROR_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_KEY_FILE_ERROR_KEY_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_KEY_FILE_ERROR_GROUP_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "G_KEY_FILE_ERROR_INVALID_VALUE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GKeyFileError" 'enumname))

(cffi:defcenum #.(swig-lispify "GKeyFileFlags" 'enumname)
	(#.(swig-lispify "G_KEY_FILE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_KEY_FILE_KEEP_COMMENTS" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_KEY_FILE_KEEP_TRANSLATIONS" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GKeyFileFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GMarkupError" 'enumname)
	#.(swig-lispify "G_MARKUP_ERROR_BAD_UTF8" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_EMPTY" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_PARSE" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_UNKNOWN_ELEMENT" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_UNKNOWN_ATTRIBUTE" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_INVALID_CONTENT" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_ERROR_MISSING_ATTRIBUTE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GMarkupError" 'enumname))

(cffi:defcenum #.(swig-lispify "GMarkupParseFlags" 'enumname)
	(#.(swig-lispify "G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_MARKUP_TREAT_CDATA_AS_TEXT" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_MARKUP_PREFIX_ERROR_POSITION" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_MARKUP_IGNORE_QUALIFIED" 'enumvalue :keyword) #.(cl:ash 1 3)))

(cl:export '#.(swig-lispify "GMarkupParseFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GMarkupCollectType" 'enumname)
	#.(swig-lispify "G_MARKUP_COLLECT_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_COLLECT_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_COLLECT_STRDUP" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_COLLECT_BOOLEAN" 'enumvalue :keyword)
	#.(swig-lispify "G_MARKUP_COLLECT_TRISTATE" 'enumvalue :keyword)
	(#.(swig-lispify "G_MARKUP_COLLECT_OPTIONAL" 'enumvalue :keyword) #.(cl:ash 1 16)))

(cl:export '#.(swig-lispify "GMarkupCollectType" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GVariantClass" 'enumname)
	(#.(swig-lispify "G_VARIANT_CLASS_BOOLEAN" 'enumvalue :keyword) #.#\b)
	(#.(swig-lispify "G_VARIANT_CLASS_BYTE" 'enumvalue :keyword) #.#\y)
	(#.(swig-lispify "G_VARIANT_CLASS_INT16" 'enumvalue :keyword) #.#\n)
	(#.(swig-lispify "G_VARIANT_CLASS_UINT16" 'enumvalue :keyword) #.#\q)
	(#.(swig-lispify "G_VARIANT_CLASS_INT32" 'enumvalue :keyword) #.#\i)
	(#.(swig-lispify "G_VARIANT_CLASS_UINT32" 'enumvalue :keyword) #.#\u)
	(#.(swig-lispify "G_VARIANT_CLASS_INT64" 'enumvalue :keyword) #.#\x)
	(#.(swig-lispify "G_VARIANT_CLASS_UINT64" 'enumvalue :keyword) #.#\t)
	(#.(swig-lispify "G_VARIANT_CLASS_HANDLE" 'enumvalue :keyword) #.#\h)
	(#.(swig-lispify "G_VARIANT_CLASS_DOUBLE" 'enumvalue :keyword) #.#\d)
	(#.(swig-lispify "G_VARIANT_CLASS_STRING" 'enumvalue :keyword) #.#\s)
	(#.(swig-lispify "G_VARIANT_CLASS_OBJECT_PATH" 'enumvalue :keyword) #.#\o)
	(#.(swig-lispify "G_VARIANT_CLASS_SIGNATURE" 'enumvalue :keyword) #.#\g)
	(#.(swig-lispify "G_VARIANT_CLASS_VARIANT" 'enumvalue :keyword) #.#\v)
	(#.(swig-lispify "G_VARIANT_CLASS_MAYBE" 'enumvalue :keyword) #.#\m)
	(#.(swig-lispify "G_VARIANT_CLASS_ARRAY" 'enumvalue :keyword) #.#\a)
	(#.(swig-lispify "G_VARIANT_CLASS_TUPLE" 'enumvalue :keyword) #.#\()
	(#.(swig-lispify "G_VARIANT_CLASS_DICT_ENTRY" 'enumvalue :keyword) #.#\{))

(cl:export '#.(swig-lispify "GVariantClass" 'enumname))

(cffi:defcenum #.(swig-lispify "GVariantParseError" 'enumname)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_BASIC_TYPE_EXPECTED" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_CANNOT_INFER_TYPE" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_DEFINITE_TYPE_EXPECTED" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INPUT_NOT_AT_END" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INVALID_CHARACTER" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INVALID_FORMAT_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INVALID_OBJECT_PATH" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INVALID_SIGNATURE" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_INVALID_TYPE_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_NO_COMMON_TYPE" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_NUMBER_OUT_OF_RANGE" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_NUMBER_TOO_BIG" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_TYPE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_UNEXPECTED_TOKEN" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_UNKNOWN_KEYWORD" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_UNTERMINATED_STRING_CONSTANT" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_VALUE_EXPECTED" 'enumvalue :keyword)
	#.(swig-lispify "G_VARIANT_PARSE_ERROR_RECURSION" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GVariantParseError" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GLogLevelFlags" 'enumname)
	(#.(swig-lispify "G_LOG_FLAG_RECURSION" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_LOG_FLAG_FATAL" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_LOG_LEVEL_ERROR" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_LOG_LEVEL_CRITICAL" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_LOG_LEVEL_WARNING" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_LOG_LEVEL_MESSAGE" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_LOG_LEVEL_INFO" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_LOG_LEVEL_DEBUG" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_LOG_LEVEL_MASK" 'enumvalue :keyword) #.(cl:logior ~(G_LOG_FLAG_RECURSION G_LOG_FLAG_FATAL))))

(cl:export '#.(swig-lispify "GLogLevelFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GLogWriterOutput" 'enumname)
	(#.(swig-lispify "G_LOG_WRITER_HANDLED" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "G_LOG_WRITER_UNHANDLED" 'enumvalue :keyword) #.0))

(cl:export '#.(swig-lispify "GLogWriterOutput" 'enumname))

(cffi:defcenum #.(swig-lispify "GOptionFlags" 'enumname)
	(#.(swig-lispify "G_OPTION_FLAG_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_OPTION_FLAG_HIDDEN" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_OPTION_FLAG_IN_MAIN" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_OPTION_FLAG_REVERSE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_OPTION_FLAG_NO_ARG" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_OPTION_FLAG_FILENAME" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_OPTION_FLAG_OPTIONAL_ARG" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_OPTION_FLAG_NOALIAS" 'enumvalue :keyword) #.(cl:ash 1 6)))

(cl:export '#.(swig-lispify "GOptionFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GOptionArg" 'enumname)
	#.(swig-lispify "G_OPTION_ARG_NONE" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_INT" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_CALLBACK" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_FILENAME" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_STRING_ARRAY" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_FILENAME_ARRAY" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_DOUBLE" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ARG_INT64" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GOptionArg" 'enumname))

(cffi:defcenum #.(swig-lispify "GOptionError" 'enumname)
	#.(swig-lispify "G_OPTION_ERROR_UNKNOWN_OPTION" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ERROR_BAD_VALUE" 'enumvalue :keyword)
	#.(swig-lispify "G_OPTION_ERROR_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GOptionError" 'enumname))

(cffi:defcenum #.(swig-lispify "GRegexError" 'enumname)
	#.(swig-lispify "G_REGEX_ERROR_COMPILE" 'enumvalue :keyword)
	#.(swig-lispify "G_REGEX_ERROR_OPTIMIZE" 'enumvalue :keyword)
	#.(swig-lispify "G_REGEX_ERROR_REPLACE" 'enumvalue :keyword)
	#.(swig-lispify "G_REGEX_ERROR_MATCH" 'enumvalue :keyword)
	#.(swig-lispify "G_REGEX_ERROR_INTERNAL" 'enumvalue :keyword)
	(#.(swig-lispify "G_REGEX_ERROR_STRAY_BACKSLASH" 'enumvalue :keyword) #.101)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_CONTROL_CHAR" 'enumvalue :keyword) #.102)
	(#.(swig-lispify "G_REGEX_ERROR_UNRECOGNIZED_ESCAPE" 'enumvalue :keyword) #.103)
	(#.(swig-lispify "G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER" 'enumvalue :keyword) #.104)
	(#.(swig-lispify "G_REGEX_ERROR_QUANTIFIER_TOO_BIG" 'enumvalue :keyword) #.105)
	(#.(swig-lispify "G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS" 'enumvalue :keyword) #.106)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS" 'enumvalue :keyword) #.107)
	(#.(swig-lispify "G_REGEX_ERROR_RANGE_OUT_OF_ORDER" 'enumvalue :keyword) #.108)
	(#.(swig-lispify "G_REGEX_ERROR_NOTHING_TO_REPEAT" 'enumvalue :keyword) #.109)
	(#.(swig-lispify "G_REGEX_ERROR_UNRECOGNIZED_CHARACTER" 'enumvalue :keyword) #.112)
	(#.(swig-lispify "G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS" 'enumvalue :keyword) #.113)
	(#.(swig-lispify "G_REGEX_ERROR_UNMATCHED_PARENTHESIS" 'enumvalue :keyword) #.114)
	(#.(swig-lispify "G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE" 'enumvalue :keyword) #.115)
	(#.(swig-lispify "G_REGEX_ERROR_UNTERMINATED_COMMENT" 'enumvalue :keyword) #.118)
	(#.(swig-lispify "G_REGEX_ERROR_EXPRESSION_TOO_LARGE" 'enumvalue :keyword) #.120)
	(#.(swig-lispify "G_REGEX_ERROR_MEMORY_ERROR" 'enumvalue :keyword) #.121)
	(#.(swig-lispify "G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND" 'enumvalue :keyword) #.125)
	(#.(swig-lispify "G_REGEX_ERROR_MALFORMED_CONDITION" 'enumvalue :keyword) #.126)
	(#.(swig-lispify "G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES" 'enumvalue :keyword) #.127)
	(#.(swig-lispify "G_REGEX_ERROR_ASSERTION_EXPECTED" 'enumvalue :keyword) #.128)
	(#.(swig-lispify "G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME" 'enumvalue :keyword) #.130)
	(#.(swig-lispify "G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED" 'enumvalue :keyword) #.131)
	(#.(swig-lispify "G_REGEX_ERROR_HEX_CODE_TOO_LARGE" 'enumvalue :keyword) #.134)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_CONDITION" 'enumvalue :keyword) #.135)
	(#.(swig-lispify "G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND" 'enumvalue :keyword) #.136)
	(#.(swig-lispify "G_REGEX_ERROR_INFINITE_LOOP" 'enumvalue :keyword) #.140)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR" 'enumvalue :keyword) #.142)
	(#.(swig-lispify "G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME" 'enumvalue :keyword) #.143)
	(#.(swig-lispify "G_REGEX_ERROR_MALFORMED_PROPERTY" 'enumvalue :keyword) #.146)
	(#.(swig-lispify "G_REGEX_ERROR_UNKNOWN_PROPERTY" 'enumvalue :keyword) #.147)
	(#.(swig-lispify "G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG" 'enumvalue :keyword) #.148)
	(#.(swig-lispify "G_REGEX_ERROR_TOO_MANY_SUBPATTERNS" 'enumvalue :keyword) #.149)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_OCTAL_VALUE" 'enumvalue :keyword) #.151)
	(#.(swig-lispify "G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE" 'enumvalue :keyword) #.154)
	(#.(swig-lispify "G_REGEX_ERROR_DEFINE_REPETION" 'enumvalue :keyword) #.155)
	(#.(swig-lispify "G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS" 'enumvalue :keyword) #.156)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_BACK_REFERENCE" 'enumvalue :keyword) #.157)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_RELATIVE_REFERENCE" 'enumvalue :keyword) #.158)
	(#.(swig-lispify "G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN" 'enumvalue :keyword) #.159)
	(#.(swig-lispify "G_REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB" 'enumvalue :keyword) #.160)
	(#.(swig-lispify "G_REGEX_ERROR_NUMBER_TOO_BIG" 'enumvalue :keyword) #.161)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_SUBPATTERN_NAME" 'enumvalue :keyword) #.162)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_DIGIT" 'enumvalue :keyword) #.163)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_DATA_CHARACTER" 'enumvalue :keyword) #.164)
	(#.(swig-lispify "G_REGEX_ERROR_EXTRA_SUBPATTERN_NAME" 'enumvalue :keyword) #.165)
	(#.(swig-lispify "G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED" 'enumvalue :keyword) #.166)
	(#.(swig-lispify "G_REGEX_ERROR_INVALID_CONTROL_CHAR" 'enumvalue :keyword) #.168)
	(#.(swig-lispify "G_REGEX_ERROR_MISSING_NAME" 'enumvalue :keyword) #.169)
	(#.(swig-lispify "G_REGEX_ERROR_NOT_SUPPORTED_IN_CLASS" 'enumvalue :keyword) #.171)
	(#.(swig-lispify "G_REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES" 'enumvalue :keyword) #.172)
	(#.(swig-lispify "G_REGEX_ERROR_NAME_TOO_LONG" 'enumvalue :keyword) #.175)
	(#.(swig-lispify "G_REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE" 'enumvalue :keyword) #.176))

(cl:export '#.(swig-lispify "GRegexError" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GRegexCompileFlags" 'enumname)
	(#.(swig-lispify "G_REGEX_CASELESS" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_REGEX_MULTILINE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_REGEX_DOTALL" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_REGEX_EXTENDED" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_REGEX_ANCHORED" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_REGEX_DOLLAR_ENDONLY" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_REGEX_UNGREEDY" 'enumvalue :keyword) #.(cl:ash 1 9))
	(#.(swig-lispify "G_REGEX_RAW" 'enumvalue :keyword) #.(cl:ash 1 11))
	(#.(swig-lispify "G_REGEX_NO_AUTO_CAPTURE" 'enumvalue :keyword) #.(cl:ash 1 12))
	(#.(swig-lispify "G_REGEX_OPTIMIZE" 'enumvalue :keyword) #.(cl:ash 1 13))
	(#.(swig-lispify "G_REGEX_FIRSTLINE" 'enumvalue :keyword) #.(cl:ash 1 18))
	(#.(swig-lispify "G_REGEX_DUPNAMES" 'enumvalue :keyword) #.(cl:ash 1 19))
	(#.(swig-lispify "G_REGEX_NEWLINE_CR" 'enumvalue :keyword) #.(cl:ash 1 20))
	(#.(swig-lispify "G_REGEX_NEWLINE_LF" 'enumvalue :keyword) #.(cl:ash 1 21))
	(#.(swig-lispify "G_REGEX_NEWLINE_CRLF" 'enumvalue :keyword) #.(cl:logior G_REGEX_NEWLINE_CR G_REGEX_NEWLINE_LF))
	(#.(swig-lispify "G_REGEX_NEWLINE_ANYCRLF" 'enumvalue :keyword) #.(cl:logior G_REGEX_NEWLINE_CR (cl:ash 1 22)))
	(#.(swig-lispify "G_REGEX_BSR_ANYCRLF" 'enumvalue :keyword) #.(cl:ash 1 23))
	(#.(swig-lispify "G_REGEX_JAVASCRIPT_COMPAT" 'enumvalue :keyword) #.(cl:ash 1 25)))

(cl:export '#.(swig-lispify "GRegexCompileFlags" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GRegexMatchFlags" 'enumname)
	(#.(swig-lispify "G_REGEX_MATCH_ANCHORED" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_REGEX_MATCH_NOTBOL" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_REGEX_MATCH_NOTEOL" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "G_REGEX_MATCH_NOTEMPTY" 'enumvalue :keyword) #.(cl:ash 1 10))
	(#.(swig-lispify "G_REGEX_MATCH_PARTIAL" 'enumvalue :keyword) #.(cl:ash 1 15))
	(#.(swig-lispify "G_REGEX_MATCH_NEWLINE_CR" 'enumvalue :keyword) #.(cl:ash 1 20))
	(#.(swig-lispify "G_REGEX_MATCH_NEWLINE_LF" 'enumvalue :keyword) #.(cl:ash 1 21))
	(#.(swig-lispify "G_REGEX_MATCH_NEWLINE_CRLF" 'enumvalue :keyword) #.(cl:logior G_REGEX_MATCH_NEWLINE_CR G_REGEX_MATCH_NEWLINE_LF))
	(#.(swig-lispify "G_REGEX_MATCH_NEWLINE_ANY" 'enumvalue :keyword) #.(cl:ash 1 22))
	(#.(swig-lispify "G_REGEX_MATCH_NEWLINE_ANYCRLF" 'enumvalue :keyword) #.(cl:logior G_REGEX_MATCH_NEWLINE_CR G_REGEX_MATCH_NEWLINE_ANY))
	(#.(swig-lispify "G_REGEX_MATCH_BSR_ANYCRLF" 'enumvalue :keyword) #.(cl:ash 1 23))
	(#.(swig-lispify "G_REGEX_MATCH_BSR_ANY" 'enumvalue :keyword) #.(cl:ash 1 24))
	(#.(swig-lispify "G_REGEX_MATCH_PARTIAL_SOFT" 'enumvalue :keyword) #.G_REGEX_MATCH_PARTIAL)
	(#.(swig-lispify "G_REGEX_MATCH_PARTIAL_HARD" 'enumvalue :keyword) #.(cl:ash 1 27))
	(#.(swig-lispify "G_REGEX_MATCH_NOTEMPTY_ATSTART" 'enumvalue :keyword) #.(cl:ash 1 28)))

(cl:export '#.(swig-lispify "GRegexMatchFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GErrorType" 'enumname)
	#.(swig-lispify "G_ERR_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_UNEXP_EOF" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_UNEXP_EOF_IN_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_UNEXP_EOF_IN_COMMENT" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_NON_DIGIT_IN_CONST" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_DIGIT_RADIX" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_FLOAT_RADIX" 'enumvalue :keyword)
	#.(swig-lispify "G_ERR_FLOAT_MALFORMED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GErrorType" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GTokenType" 'enumname)
	(#.(swig-lispify "G_TOKEN_EOF" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_TOKEN_LEFT_PAREN" 'enumvalue :keyword) #.#\()
	(#.(swig-lispify "G_TOKEN_RIGHT_PAREN" 'enumvalue :keyword) #.#\))
	(#.(swig-lispify "G_TOKEN_LEFT_CURLY" 'enumvalue :keyword) #.#\{)
	(#.(swig-lispify "G_TOKEN_RIGHT_CURLY" 'enumvalue :keyword) #.#\})
	(#.(swig-lispify "G_TOKEN_LEFT_BRACE" 'enumvalue :keyword) #.#\[)
	(#.(swig-lispify "G_TOKEN_RIGHT_BRACE" 'enumvalue :keyword) #.#\])
	(#.(swig-lispify "G_TOKEN_EQUAL_SIGN" 'enumvalue :keyword) #.#\=)
	(#.(swig-lispify "G_TOKEN_COMMA" 'enumvalue :keyword) #.#\,)
	(#.(swig-lispify "G_TOKEN_NONE" 'enumvalue :keyword) #.256)
	#.(swig-lispify "G_TOKEN_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_CHAR" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_BINARY" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_OCTAL" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_INT" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_HEX" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_FLOAT" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_IDENTIFIER" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_IDENTIFIER_NULL" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_COMMENT_SINGLE" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_COMMENT_MULTI" 'enumvalue :keyword)
	#.(swig-lispify "G_TOKEN_LAST" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTokenType" 'enumname))

(cffi:defcenum #.(swig-lispify "GShellError" 'enumname)
	#.(swig-lispify "G_SHELL_ERROR_BAD_QUOTING" 'enumvalue :keyword)
	#.(swig-lispify "G_SHELL_ERROR_EMPTY_STRING" 'enumvalue :keyword)
	#.(swig-lispify "G_SHELL_ERROR_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GShellError" 'enumname))

(cffi:defcenum #.(swig-lispify "GSliceConfig" 'enumname)
	(#.(swig-lispify "G_SLICE_CONFIG_ALWAYS_MALLOC" 'enumvalue :keyword) #.1)
	#.(swig-lispify "G_SLICE_CONFIG_BYPASS_MAGAZINES" 'enumvalue :keyword)
	#.(swig-lispify "G_SLICE_CONFIG_WORKING_SET_MSECS" 'enumvalue :keyword)
	#.(swig-lispify "G_SLICE_CONFIG_COLOR_INCREMENT" 'enumvalue :keyword)
	#.(swig-lispify "G_SLICE_CONFIG_CHUNK_SIZES" 'enumvalue :keyword)
	#.(swig-lispify "G_SLICE_CONFIG_CONTENTION_COUNTER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GSliceConfig" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GSpawnError" 'enumname)
	#.(swig-lispify "G_SPAWN_ERROR_FORK" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_READ" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_CHDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_ACCES" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_PERM" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_TOO_BIG" 'enumvalue :keyword)
	(#.(swig-lispify "G_SPAWN_ERROR_2BIG" 'enumvalue :keyword) #.G_SPAWN_ERROR_TOO_BIG)
	#.(swig-lispify "G_SPAWN_ERROR_NOEXEC" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_NAMETOOLONG" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_NOENT" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_NOMEM" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_NOTDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_LOOP" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_TXTBUSY" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_IO" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_NFILE" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_MFILE" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_INVAL" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_ISDIR" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_LIBBAD" 'enumvalue :keyword)
	#.(swig-lispify "G_SPAWN_ERROR_FAILED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GSpawnError" 'enumname))

(cffi:defcenum #.(swig-lispify "GSpawnFlags" 'enumname)
	(#.(swig-lispify "G_SPAWN_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_SPAWN_LEAVE_DESCRIPTORS_OPEN" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_SPAWN_DO_NOT_REAP_CHILD" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_SPAWN_SEARCH_PATH" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_SPAWN_STDOUT_TO_DEV_NULL" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_SPAWN_STDERR_TO_DEV_NULL" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_SPAWN_CHILD_INHERITS_STDIN" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_SPAWN_FILE_AND_ARGV_ZERO" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_SPAWN_SEARCH_PATH_FROM_ENVP" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_SPAWN_CLOEXEC_PIPES" 'enumvalue :keyword) #.(cl:ash 1 8)))

(cl:export '#.(swig-lispify "GSpawnFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GAsciiType" 'enumname)
	(#.(swig-lispify "G_ASCII_ALNUM" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_ASCII_ALPHA" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_ASCII_CNTRL" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_ASCII_DIGIT" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_ASCII_GRAPH" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_ASCII_LOWER" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_ASCII_PRINT" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_ASCII_PUNCT" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_ASCII_SPACE" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "G_ASCII_UPPER" 'enumvalue :keyword) #.(cl:ash 1 9))
	(#.(swig-lispify "G_ASCII_XDIGIT" 'enumvalue :keyword) #.(cl:ash 1 10)))

(cl:export '#.(swig-lispify "GAsciiType" 'enumname))

(cffi:defcenum #.(swig-lispify "GNumberParserError" 'enumname)
	#.(swig-lispify "G_NUMBER_PARSER_ERROR_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "G_NUMBER_PARSER_ERROR_OUT_OF_BOUNDS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GNumberParserError" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestTrapFlags" 'enumname)
	(#.(swig-lispify "G_TEST_TRAP_SILENCE_STDOUT" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_TEST_TRAP_SILENCE_STDERR" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "G_TEST_TRAP_INHERIT_STDIN" 'enumvalue :keyword) #.(cl:ash 1 9)))

(cl:export '#.(swig-lispify "GTestTrapFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestSubprocessFlags" 'enumname)
	(#.(swig-lispify "G_TEST_SUBPROCESS_INHERIT_STDIN" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_TEST_SUBPROCESS_INHERIT_STDOUT" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_TEST_SUBPROCESS_INHERIT_STDERR" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GTestSubprocessFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestResult" 'enumname)
	#.(swig-lispify "G_TEST_RUN_SUCCESS" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_RUN_SKIPPED" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_RUN_FAILURE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_RUN_INCOMPLETE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTestResult" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestLogType" 'enumname)
	#.(swig-lispify "G_TEST_LOG_NONE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_START_BINARY" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_LIST_CASE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_SKIP_CASE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_START_CASE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_STOP_CASE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_MIN_RESULT" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_MAX_RESULT" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_MESSAGE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_START_SUITE" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_LOG_STOP_SUITE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTestLogType" 'enumname))

(cffi:defcenum #.(swig-lispify "GTestFileType" 'enumname)
	#.(swig-lispify "G_TEST_DIST" 'enumvalue :keyword)
	#.(swig-lispify "G_TEST_BUILT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GTestFileType" 'enumname))

(cffi:defcenum #.(swig-lispify "GUriFlags" 'enumname)
	(#.(swig-lispify "G_URI_FLAGS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_URI_FLAGS_PARSE_RELAXED" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_URI_FLAGS_HAS_PASSWORD" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_URI_FLAGS_HAS_AUTH_PARAMS" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_URI_FLAGS_ENCODED" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_URI_FLAGS_NON_DNS" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_URI_FLAGS_ENCODED_QUERY" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_URI_FLAGS_ENCODED_PATH" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_URI_FLAGS_ENCODED_FRAGMENT" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_URI_FLAGS_SCHEME_NORMALIZE" 'enumvalue :keyword) #.(cl:ash 1 8)))

(cl:export '#.(swig-lispify "GUriFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GUriHideFlags" 'enumname)
	(#.(swig-lispify "G_URI_HIDE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_URI_HIDE_USERINFO" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_URI_HIDE_PASSWORD" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_URI_HIDE_AUTH_PARAMS" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_URI_HIDE_QUERY" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_URI_HIDE_FRAGMENT" 'enumvalue :keyword) #.(cl:ash 1 4)))

(cl:export '#.(swig-lispify "GUriHideFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GUriParamsFlags" 'enumname)
	(#.(swig-lispify "G_URI_PARAMS_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_URI_PARAMS_CASE_INSENSITIVE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_URI_PARAMS_WWW_FORM" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_URI_PARAMS_PARSE_RELAXED" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GUriParamsFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GUriError" 'enumname)
	#.(swig-lispify "G_URI_ERROR_FAILED" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_SCHEME" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_USER" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_PASSWORD" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_AUTH_PARAMS" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_HOST" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_PORT" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_PATH" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_QUERY" 'enumvalue :keyword)
	#.(swig-lispify "G_URI_ERROR_BAD_FRAGMENT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GUriError" 'enumname))

(cffi:defcenum #.(swig-lispify "GThreadPriority" 'enumname)
	#.(swig-lispify "G_THREAD_PRIORITY_LOW" 'enumvalue :keyword)
	#.(swig-lispify "G_THREAD_PRIORITY_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "G_THREAD_PRIORITY_HIGH" 'enumvalue :keyword)
	#.(swig-lispify "G_THREAD_PRIORITY_URGENT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "GThreadPriority" 'enumname))

(defanonenum 
	#.(swig-lispify "PTHREAD_CREATE_JOINABLE" 'enumvalue)
	#.(swig-lispify "PTHREAD_CREATE_DETACHED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CREATE_JOINABLE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CREATE_DETACHED" 'enumvalue))

#+nil(defanonenum 
	#.(swig-lispify "PTHREAD_MUTEX_TIMED_NP" 'enumvalue)
	#.(swig-lispify "PTHREAD_MUTEX_RECURSIVE_NP" 'enumvalue)
	#.(swig-lispify "PTHREAD_MUTEX_ERRORCHECK_NP" 'enumvalue)
	#.(swig-lispify "PTHREAD_MUTEX_ADAPTIVE_NP" 'enumvalue)
	(#.(swig-lispify "PTHREAD_MUTEX_NORMAL" 'enumvalue) #.PTHREAD_MUTEX_TIMED_NP)
	(#.(swig-lispify "PTHREAD_MUTEX_RECURSIVE" 'enumvalue) #.PTHREAD_MUTEX_RECURSIVE_NP)
	(#.(swig-lispify "PTHREAD_MUTEX_ERRORCHECK" 'enumvalue) #.PTHREAD_MUTEX_ERRORCHECK_NP)
	(#.(swig-lispify "PTHREAD_MUTEX_DEFAULT" 'enumvalue) #.PTHREAD_MUTEX_NORMAL))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_TIMED_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_RECURSIVE_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_ERRORCHECK_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_ADAPTIVE_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_NORMAL" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_RECURSIVE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_ERRORCHECK" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_DEFAULT" 'enumvalue))

#+nil(defanonenum 
	#.(swig-lispify "PTHREAD_MUTEX_STALLED" 'enumvalue)
	(#.(swig-lispify "PTHREAD_MUTEX_STALLED_NP" 'enumvalue) #.PTHREAD_MUTEX_STALLED)
	#.(swig-lispify "PTHREAD_MUTEX_ROBUST" 'enumvalue)
	(#.(swig-lispify "PTHREAD_MUTEX_ROBUST_NP" 'enumvalue) #.PTHREAD_MUTEX_ROBUST))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_STALLED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_STALLED_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_ROBUST" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_MUTEX_ROBUST_NP" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_PRIO_NONE" 'enumvalue)
	#.(swig-lispify "PTHREAD_PRIO_INHERIT" 'enumvalue)
	#.(swig-lispify "PTHREAD_PRIO_PROTECT" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_PRIO_NONE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_PRIO_INHERIT" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_PRIO_PROTECT" 'enumvalue))

#+nil(defanonenum 
	#.(swig-lispify "PTHREAD_RWLOCK_PREFER_READER_NP" 'enumvalue)
	#.(swig-lispify "PTHREAD_RWLOCK_PREFER_WRITER_NP" 'enumvalue)
	#.(swig-lispify "PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP" 'enumvalue)
	(#.(swig-lispify "PTHREAD_RWLOCK_DEFAULT_NP" 'enumvalue) #.PTHREAD_RWLOCK_PREFER_READER_NP))

(cl:export '#.(swig-lispify "PTHREAD_RWLOCK_PREFER_READER_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_RWLOCK_PREFER_WRITER_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_RWLOCK_DEFAULT_NP" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_INHERIT_SCHED" 'enumvalue)
	#.(swig-lispify "PTHREAD_EXPLICIT_SCHED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_INHERIT_SCHED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_EXPLICIT_SCHED" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_SCOPE_SYSTEM" 'enumvalue)
	#.(swig-lispify "PTHREAD_SCOPE_PROCESS" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_SCOPE_SYSTEM" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_SCOPE_PROCESS" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_PROCESS_PRIVATE" 'enumvalue)
	#.(swig-lispify "PTHREAD_PROCESS_SHARED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_PROCESS_PRIVATE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_PROCESS_SHARED" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_CANCEL_ENABLE" 'enumvalue)
	#.(swig-lispify "PTHREAD_CANCEL_DISABLE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CANCEL_ENABLE" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CANCEL_DISABLE" 'enumvalue))

(defanonenum 
	#.(swig-lispify "PTHREAD_CANCEL_DEFERRED" 'enumvalue)
	#.(swig-lispify "PTHREAD_CANCEL_ASYNCHRONOUS" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CANCEL_DEFERRED" 'enumvalue))

(cl:export '#.(swig-lispify "PTHREAD_CANCEL_ASYNCHRONOUS" 'enumvalue))

(cffi:defcenum #.(swig-lispify "GTypeDebugFlags" 'enumname)
	(#.(swig-lispify "G_TYPE_DEBUG_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_TYPE_DEBUG_OBJECTS" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_TYPE_DEBUG_SIGNALS" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_TYPE_DEBUG_INSTANCE_COUNT" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_TYPE_DEBUG_MASK" 'enumvalue :keyword) #.#x07))

(cl:export '#.(swig-lispify "GTypeDebugFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTypeFundamentalFlags" 'enumname)
	(#.(swig-lispify "G_TYPE_FLAG_CLASSED" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_TYPE_FLAG_INSTANTIATABLE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_TYPE_FLAG_DERIVABLE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_TYPE_FLAG_DEEP_DERIVABLE" 'enumvalue :keyword) #.(cl:ash 1 3)))

(cl:export '#.(swig-lispify "GTypeFundamentalFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GTypeFlags" 'enumname)
	(#.(swig-lispify "G_TYPE_FLAG_ABSTRACT" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_TYPE_FLAG_VALUE_ABSTRACT" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_TYPE_FLAG_FINAL" 'enumvalue :keyword) #.(cl:ash 1 6)))

(cl:export '#.(swig-lispify "GTypeFlags" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "GParamFlags" 'enumname)
	(#.(swig-lispify "G_PARAM_READABLE" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_PARAM_WRITABLE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_PARAM_READWRITE" 'enumvalue :keyword) #.(cl:logior G_PARAM_READABLE G_PARAM_WRITABLE))
	(#.(swig-lispify "G_PARAM_CONSTRUCT" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_PARAM_CONSTRUCT_ONLY" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_PARAM_LAX_VALIDATION" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_PARAM_STATIC_NAME" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_PARAM_PRIVATE" 'enumvalue :keyword) #.G_PARAM_STATIC_NAME)
	(#.(swig-lispify "G_PARAM_STATIC_NICK" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_PARAM_STATIC_BLURB" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_PARAM_EXPLICIT_NOTIFY" 'enumvalue :keyword) #.(cl:ash 1 30))
	(#.(swig-lispify "G_PARAM_DEPRECATED" 'enumvalue :keyword) #.gint) (1u << 31))

(cl:export '#.(swig-lispify "GParamFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GSignalFlags" 'enumname)
	(#.(swig-lispify "G_SIGNAL_RUN_FIRST" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_SIGNAL_RUN_LAST" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_SIGNAL_RUN_CLEANUP" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_SIGNAL_NO_RECURSE" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_SIGNAL_DETAILED" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_SIGNAL_ACTION" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "G_SIGNAL_NO_HOOKS" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "G_SIGNAL_MUST_COLLECT" 'enumvalue :keyword) #.(cl:ash 1 7))
	(#.(swig-lispify "G_SIGNAL_DEPRECATED" 'enumvalue :keyword) #.(cl:ash 1 8))
	(#.(swig-lispify "G_SIGNAL_ACCUMULATOR_FIRST_RUN" 'enumvalue :keyword) #.(cl:ash 1 17)))

(cl:export '#.(swig-lispify "GSignalFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GConnectFlags" 'enumname)
	(#.(swig-lispify "G_CONNECT_AFTER" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_CONNECT_SWAPPED" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "GConnectFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "GSignalMatchType" 'enumname)
	(#.(swig-lispify "G_SIGNAL_MATCH_ID" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_SIGNAL_MATCH_DETAIL" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_SIGNAL_MATCH_CLOSURE" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "G_SIGNAL_MATCH_FUNC" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "G_SIGNAL_MATCH_DATA" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "G_SIGNAL_MATCH_UNBLOCKED" 'enumvalue :keyword) #.(cl:ash 1 5)))

(cl:export '#.(swig-lispify "GSignalMatchType" 'enumname))

(cffi:defcenum #.(swig-lispify "GBindingFlags" 'enumname)
	(#.(swig-lispify "G_BINDING_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "G_BINDING_BIDIRECTIONAL" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "G_BINDING_SYNC_CREATE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "G_BINDING_INVERT_BOOLEAN" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "GBindingFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_direction_t" 'enumname)
	(#.(swig-lispify "HB_DIRECTION_INVALID" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "HB_DIRECTION_LTR" 'enumvalue :keyword) #.4)
	#.(swig-lispify "HB_DIRECTION_RTL" 'enumvalue :keyword)
	#.(swig-lispify "HB_DIRECTION_TTB" 'enumvalue :keyword)
	#.(swig-lispify "HB_DIRECTION_BTT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "hb_direction_t" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "hb_script_t" 'enumname)
	(#.(swig-lispify "HB_SCRIPT_COMMON" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Z) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (y #xFF))))
	(#.(swig-lispify "HB_SCRIPT_INHERITED" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Z) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_UNKNOWN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Z) #xFF) << 24) (cl:logand (uint32_t) (z #xFF) << 16) (cl:logand (uint32_t) (z #xFF) << 8) (cl:logand uint32_t) (z #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ARABIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ARMENIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (n #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BENGALI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CYRILLIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (l #xFF))))
	(#.(swig-lispify "HB_SCRIPT_DEVANAGARI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (D) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (v #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GEORGIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GREEK" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (e #xFF) << 8) (cl:logand uint32_t) (k #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GUJARATI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (j #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GURMUKHI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HANGUL" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HEBREW" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (b #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HIRAGANA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KANNADA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (n #xFF) << 16) (cl:logand (uint32_t) (d #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KATAKANA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LAO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LATIN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (n #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MALAYALAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ORIYA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAMIL" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (l #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TELUGU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_THAI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TIBETAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (b #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BOPOMOFO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (p #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BRAILLE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CANADIAN_SYLLABICS" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (s #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CHEROKEE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (e #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ETHIOPIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (E) #xFF) << 24) (cl:logand (uint32_t) (t #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KHMER" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MONGOLIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MYANMAR" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OGHAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_RUNIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (R) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SINHALA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SYRIAC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (c #xFF))))
	(#.(swig-lispify "HB_SCRIPT_THAANA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_YI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Y) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (i #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_DESERET" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (D) #xFF) << 24) (cl:logand (uint32_t) (s #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GOTHIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_ITALIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (I) #xFF) << 24) (cl:logand (uint32_t) (t #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (l #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BUHID" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HANUNOO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAGALOG" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAGBANWA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CYPRIOT" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (p #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LIMBU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LINEAR_B" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OSMANYA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (s #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SHAVIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (w #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAI_LE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (e #xFF))))
	(#.(swig-lispify "HB_SCRIPT_UGARITIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (U) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BUGINESE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_COPTIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (p #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GLAGOLITIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KHAROSHTHI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NEW_TAI_LUE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_PERSIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (X) #xFF) << 24) (cl:logand (uint32_t) (p #xFF) << 16) (cl:logand (uint32_t) (e #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SYLOTI_NAGRI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TIFINAGH" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (f #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BALINESE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CUNEIFORM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (X) #xFF) << 24) (cl:logand (uint32_t) (s #xFF) << 16) (cl:logand (uint32_t) (u #xFF) << 8) (cl:logand uint32_t) (x #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NKO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (k #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PHAGS_PA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PHOENICIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (x #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CARIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CHAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KAYAH_LI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LEPCHA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (p #xFF) << 8) (cl:logand uint32_t) (c #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LYCIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (c #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LYDIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (y #xFF) << 16) (cl:logand (uint32_t) (d #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OL_CHIKI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (c #xFF) << 8) (cl:logand uint32_t) (k #xFF))))
	(#.(swig-lispify "HB_SCRIPT_REJANG" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (R) #xFF) << 24) (cl:logand (uint32_t) (j #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SAURASHTRA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (u #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SUNDANESE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_VAI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (V) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (i #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_AVESTAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (v #xFF) << 16) (cl:logand (uint32_t) (s #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BAMUM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_EGYPTIAN_HIEROGLYPHS" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (E) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (p #xFF))))
	(#.(swig-lispify "HB_SCRIPT_IMPERIAL_ARAMAIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_INSCRIPTIONAL_PAHLAVI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_INSCRIPTIONAL_PARTHIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_JAVANESE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (J) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (v #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KAITHI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (t #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LISU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (s #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MEETEI_MAYEK" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (t #xFF) << 16) (cl:logand (uint32_t) (e #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_SOUTH_ARABIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_TURKIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (k #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SAMARITAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (m #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAI_THAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAI_VIET" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (v #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BATAK" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (k #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BRAHMI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MANDAIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CHAKMA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (k #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MEROITIC_CURSIVE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (c #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MEROITIC_HIEROGLYPHS" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MIAO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SHARADA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SORA_SOMPENG" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TAKRI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (k #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BASSA_VAH" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (s #xFF) << 8) (cl:logand uint32_t) (s #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CAUCASIAN_ALBANIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_DUPLOYAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (D) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (p #xFF) << 8) (cl:logand uint32_t) (l #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ELBASAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (E) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (b #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GRANTHA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (n #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KHOJKI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (j #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KHUDAWADI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_LINEAR_A" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (L) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MAHAJANI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (j #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MANICHAEAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MENDE_KIKAKUI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MODI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (d #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MRO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (r #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NABATAEAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (b #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_NORTH_ARABIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_PERMIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PAHAWH_HMONG" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (m #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PALMYRENE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PAU_CIN_HAU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (u #xFF) << 8) (cl:logand uint32_t) (c #xFF))))
	(#.(swig-lispify "HB_SCRIPT_PSALTER_PAHLAVI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (P) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (p #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SIDDHAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (d #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TIRHUTA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (h #xFF))))
	(#.(swig-lispify "HB_SCRIPT_WARANG_CITI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (W) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_AHOM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (o #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ANATOLIAN_HIEROGLYPHS" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (u #xFF) << 8) (cl:logand uint32_t) (w #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HATRAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MULTANI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (t #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_HUNGARIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (u #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SIGNWRITING" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (g #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (w #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ADLAM" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (A) #xFF) << 24) (cl:logand (uint32_t) (d #xFF) << 16) (cl:logand (uint32_t) (l #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_BHAIKSUKI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (B) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (k #xFF) << 8) (cl:logand uint32_t) (s #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MARCHEN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (c #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OSAGE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (O) #xFF) << 24) (cl:logand (uint32_t) (s #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (e #xFF))))
	(#.(swig-lispify "HB_SCRIPT_TANGUT" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NEWA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (w #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MASARAM_GONDI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NUSHU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (s #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (u #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SOYOMBO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ZANABAZAR_SQUARE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Z) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (b #xFF))))
	(#.(swig-lispify "HB_SCRIPT_DOGRA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (D) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (r #xFF))))
	(#.(swig-lispify "HB_SCRIPT_GUNJALA_GONDI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (G) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_HANIFI_ROHINGYA" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (R) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (g #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MAKASAR" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (k #xFF) << 8) (cl:logand uint32_t) (a #xFF))))
	(#.(swig-lispify "HB_SCRIPT_MEDEFAIDRIN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (M) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (d #xFF) << 8) (cl:logand uint32_t) (f #xFF))))
	(#.(swig-lispify "HB_SCRIPT_OLD_SOGDIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_SOGDIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (S) #xFF) << 24) (cl:logand (uint32_t) (o #xFF) << 16) (cl:logand (uint32_t) (g #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_ELYMAIC" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (E) #xFF) << 24) (cl:logand (uint32_t) (l #xFF) << 16) (cl:logand (uint32_t) (y #xFF) << 8) (cl:logand uint32_t) (m #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NANDINAGARI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (N) #xFF) << 24) (cl:logand (uint32_t) (a #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (d #xFF))))
	(#.(swig-lispify "HB_SCRIPT_NYIAKENG_PUACHUE_HMONG" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (H) #xFF) << 24) (cl:logand (uint32_t) (m #xFF) << 16) (cl:logand (uint32_t) (n #xFF) << 8) (cl:logand uint32_t) (p #xFF))))
	(#.(swig-lispify "HB_SCRIPT_WANCHO" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (W) #xFF) << 24) (cl:logand (uint32_t) (c #xFF) << 16) (cl:logand (uint32_t) (h #xFF) << 8) (cl:logand uint32_t) (o #xFF))))
	(#.(swig-lispify "HB_SCRIPT_CHORASMIAN" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (C) #xFF) << 24) (cl:logand (uint32_t) (h #xFF) << 16) (cl:logand (uint32_t) (r #xFF) << 8) (cl:logand uint32_t) (s #xFF))))
	(#.(swig-lispify "HB_SCRIPT_DIVES_AKURU" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (D) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (a #xFF) << 8) (cl:logand uint32_t) (k #xFF))))
	(#.(swig-lispify "HB_SCRIPT_KHITAN_SMALL_SCRIPT" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (K) #xFF) << 24) (cl:logand (uint32_t) (i #xFF) << 16) (cl:logand (uint32_t) (t #xFF) << 8) (cl:logand uint32_t) (s #xFF))))
	(#.(swig-lispify "HB_SCRIPT_YEZIDI" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (Y) #xFF) << 24) (cl:logand (uint32_t) (e #xFF) << 16) (cl:logand (uint32_t) (z #xFF) << 8) (cl:logand uint32_t) (i #xFF))))
	(#.(swig-lispify "HB_SCRIPT_INVALID" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (0) #xFF) << 24) (cl:logand (uint32_t) (0 #xFF) << 16) (cl:logand (uint32_t) (0 #xFF) << 8) (cl:logand uint32_t) (0 #xFF))))
	(#.(swig-lispify "_HB_SCRIPT_MAX_VALUE" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (0x7f) #xFF) << 24) (cl:logand (uint32_t) (0xff #xFF) << 16) (cl:logand (uint32_t) (0xff #xFF) << 8) (cl:logand uint32_t) (0xff #xFF))))
	(#.(swig-lispify "_HB_SCRIPT_MAX_VALUE_SIGNED" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (0x7f) #xFF) << 24) (cl:logand (uint32_t) (0xff #xFF) << 16) (cl:logand (uint32_t) (0xff #xFF) << 8) (cl:logand uint32_t) (0xff #xFF)))))

(cl:export '#.(swig-lispify "hb_script_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_memory_mode_t" 'enumname)
	#.(swig-lispify "HB_MEMORY_MODE_DUPLICATE" 'enumvalue :keyword)
	#.(swig-lispify "HB_MEMORY_MODE_READONLY" 'enumvalue :keyword)
	#.(swig-lispify "HB_MEMORY_MODE_WRITABLE" 'enumvalue :keyword)
	#.(swig-lispify "HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "hb_memory_mode_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_unicode_general_category_t" 'enumname)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_CONTROL" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_FORMAT" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_SURROGATE" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR" 'enumvalue :keyword)
	#.(swig-lispify "HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "hb_unicode_general_category_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_unicode_combining_class_t" 'enumname)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_NOT_REORDERED" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_OVERLAY" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_NUKTA" 'enumvalue :keyword) #.7)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_KANA_VOICING" 'enumvalue :keyword) #.8)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_VIRAMA" 'enumvalue :keyword) #.9)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC10" 'enumvalue :keyword) #.10)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC11" 'enumvalue :keyword) #.11)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC12" 'enumvalue :keyword) #.12)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC13" 'enumvalue :keyword) #.13)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC14" 'enumvalue :keyword) #.14)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC15" 'enumvalue :keyword) #.15)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC16" 'enumvalue :keyword) #.16)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC17" 'enumvalue :keyword) #.17)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC18" 'enumvalue :keyword) #.18)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC19" 'enumvalue :keyword) #.19)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC20" 'enumvalue :keyword) #.20)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC21" 'enumvalue :keyword) #.21)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC22" 'enumvalue :keyword) #.22)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC23" 'enumvalue :keyword) #.23)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC24" 'enumvalue :keyword) #.24)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC25" 'enumvalue :keyword) #.25)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC26" 'enumvalue :keyword) #.26)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC27" 'enumvalue :keyword) #.27)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC28" 'enumvalue :keyword) #.28)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC29" 'enumvalue :keyword) #.29)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC30" 'enumvalue :keyword) #.30)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC31" 'enumvalue :keyword) #.31)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC32" 'enumvalue :keyword) #.32)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC33" 'enumvalue :keyword) #.33)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC34" 'enumvalue :keyword) #.34)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC35" 'enumvalue :keyword) #.35)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC36" 'enumvalue :keyword) #.36)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC84" 'enumvalue :keyword) #.84)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC91" 'enumvalue :keyword) #.91)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC103" 'enumvalue :keyword) #.103)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC107" 'enumvalue :keyword) #.107)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC118" 'enumvalue :keyword) #.118)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC122" 'enumvalue :keyword) #.122)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC129" 'enumvalue :keyword) #.129)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC130" 'enumvalue :keyword) #.130)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_CCC133" 'enumvalue :keyword) #.132)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT" 'enumvalue :keyword) #.200)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW" 'enumvalue :keyword) #.202)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE" 'enumvalue :keyword) #.214)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT" 'enumvalue :keyword) #.216)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_BELOW_LEFT" 'enumvalue :keyword) #.218)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_BELOW" 'enumvalue :keyword) #.220)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT" 'enumvalue :keyword) #.222)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_LEFT" 'enumvalue :keyword) #.224)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_RIGHT" 'enumvalue :keyword) #.226)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT" 'enumvalue :keyword) #.228)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ABOVE" 'enumvalue :keyword) #.230)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT" 'enumvalue :keyword) #.232)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW" 'enumvalue :keyword) #.233)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE" 'enumvalue :keyword) #.234)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT" 'enumvalue :keyword) #.240)
	(#.(swig-lispify "HB_UNICODE_COMBINING_CLASS_INVALID" 'enumvalue :keyword) #.255))

(cl:export '#.(swig-lispify "hb_unicode_combining_class_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_glyph_flags_t" 'enumname)
	(#.(swig-lispify "HB_GLYPH_FLAG_UNSAFE_TO_BREAK" 'enumvalue :keyword) #.#x00000001)
	(#.(swig-lispify "HB_GLYPH_FLAG_DEFINED" 'enumvalue :keyword) #.#x00000001))

(cl:export '#.(swig-lispify "hb_glyph_flags_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_buffer_content_type_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_CONTENT_TYPE_INVALID" 'enumvalue :keyword) #.0)
	#.(swig-lispify "HB_BUFFER_CONTENT_TYPE_UNICODE" 'enumvalue :keyword)
	#.(swig-lispify "HB_BUFFER_CONTENT_TYPE_GLYPHS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "hb_buffer_content_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_buffer_flags_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_FLAG_DEFAULT" 'enumvalue :keyword) #.#x00000000)
	(#.(swig-lispify "HB_BUFFER_FLAG_BOT" 'enumvalue :keyword) #.#x00000001)
	(#.(swig-lispify "HB_BUFFER_FLAG_EOT" 'enumvalue :keyword) #.#x00000002)
	(#.(swig-lispify "HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES" 'enumvalue :keyword) #.#x00000004)
	(#.(swig-lispify "HB_BUFFER_FLAG_REMOVE_DEFAULT_IGNORABLES" 'enumvalue :keyword) #.#x00000008)
	(#.(swig-lispify "HB_BUFFER_FLAG_DO_NOT_INSERT_DOTTED_CIRCLE" 'enumvalue :keyword) #.#x00000010))

(cl:export '#.(swig-lispify "hb_buffer_flags_t" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "hb_buffer_cluster_level_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "HB_BUFFER_CLUSTER_LEVEL_MONOTONE_CHARACTERS" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "HB_BUFFER_CLUSTER_LEVEL_CHARACTERS" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "HB_BUFFER_CLUSTER_LEVEL_DEFAULT" 'enumvalue :keyword) #.HB_BUFFER_CLUSTER_LEVEL_MONOTONE_GRAPHEMES))

(cl:export '#.(swig-lispify "hb_buffer_cluster_level_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_buffer_serialize_flags_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_DEFAULT" 'enumvalue :keyword) #.#x00000000)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS" 'enumvalue :keyword) #.#x00000001)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS" 'enumvalue :keyword) #.#x00000002)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES" 'enumvalue :keyword) #.#x00000004)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_GLYPH_EXTENTS" 'enumvalue :keyword) #.#x00000008)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_GLYPH_FLAGS" 'enumvalue :keyword) #.#x00000010)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FLAG_NO_ADVANCES" 'enumvalue :keyword) #.#x00000020))

(cl:export '#.(swig-lispify "hb_buffer_serialize_flags_t" 'enumname))

#+nil(cffi:defcenum #.(swig-lispify "hb_buffer_serialize_format_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FORMAT_TEXT" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (T) #xFF) << 24) (cl:logand (uint32_t) (E #xFF) << 16) (cl:logand (uint32_t) (X #xFF) << 8) (cl:logand uint32_t) (T #xFF))))
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FORMAT_JSON" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (J) #xFF) << 24) (cl:logand (uint32_t) (S #xFF) << 16) (cl:logand (uint32_t) (O #xFF) << 8) (cl:logand uint32_t) (N #xFF))))
	(#.(swig-lispify "HB_BUFFER_SERIALIZE_FORMAT_INVALID" 'enumvalue :keyword) #.(cl:logior (cl:logand hb_tag_t) ((((uint32_t) (0) #xFF) << 24) (cl:logand (uint32_t) (0 #xFF) << 16) (cl:logand (uint32_t) (0 #xFF) << 8) (cl:logand uint32_t) (0 #xFF)))))

(cl:export '#.(swig-lispify "hb_buffer_serialize_format_t" 'enumname))

(cffi:defcenum #.(swig-lispify "hb_buffer_diff_flags_t" 'enumname)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_EQUAL" 'enumvalue :keyword) #.#x0000)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_CONTENT_TYPE_MISMATCH" 'enumvalue :keyword) #.#x0001)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_LENGTH_MISMATCH" 'enumvalue :keyword) #.#x0002)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_NOTDEF_PRESENT" 'enumvalue :keyword) #.#x0004)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_DOTTED_CIRCLE_PRESENT" 'enumvalue :keyword) #.#x0008)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_CODEPOINT_MISMATCH" 'enumvalue :keyword) #.#x0010)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_CLUSTER_MISMATCH" 'enumvalue :keyword) #.#x0020)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_GLYPH_FLAGS_MISMATCH" 'enumvalue :keyword) #.#x0040)
	(#.(swig-lispify "HB_BUFFER_DIFF_FLAG_POSITION_MISMATCH" 'enumvalue :keyword) #.#x0080))

(cl:export '#.(swig-lispify "hb_buffer_diff_flags_t" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoCoverageLevel" 'enumname)
	#.(swig-lispify "PANGO_COVERAGE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_COVERAGE_FALLBACK" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_COVERAGE_APPROXIMATE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_COVERAGE_EXACT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoCoverageLevel" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoGravity" 'enumname)
	#.(swig-lispify "PANGO_GRAVITY_SOUTH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_EAST" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_NORTH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_WEST" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_AUTO" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoGravity" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoGravityHint" 'enumname)
	#.(swig-lispify "PANGO_GRAVITY_HINT_NATURAL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_HINT_STRONG" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_GRAVITY_HINT_LINE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoGravityHint" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoScript" 'enumname)
	(#.(swig-lispify "PANGO_SCRIPT_INVALID_CODE" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "PANGO_SCRIPT_COMMON" 'enumvalue :keyword) #.0)
	#.(swig-lispify "PANGO_SCRIPT_INHERITED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ARABIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ARMENIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BENGALI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BOPOMOFO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CHEROKEE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_COPTIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CYRILLIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_DESERET" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_DEVANAGARI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ETHIOPIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GEORGIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GOTHIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GREEK" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GUJARATI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GURMUKHI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HANGUL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HEBREW" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HIRAGANA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KANNADA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KATAKANA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KHMER" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LAO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LATIN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MALAYALAM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MONGOLIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MYANMAR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OGHAM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OLD_ITALIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ORIYA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_RUNIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SINHALA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SYRIAC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TAMIL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TELUGU" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_THAANA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_THAI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TIBETAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CANADIAN_ABORIGINAL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_YI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TAGALOG" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HANUNOO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BUHID" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TAGBANWA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BRAILLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CYPRIOT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LIMBU" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OSMANYA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SHAVIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LINEAR_B" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TAI_LE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_UGARITIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_NEW_TAI_LUE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BUGINESE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GLAGOLITIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TIFINAGH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SYLOTI_NAGRI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OLD_PERSIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KHAROSHTHI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_UNKNOWN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BALINESE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CUNEIFORM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PHOENICIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PHAGS_PA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_NKO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KAYAH_LI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LEPCHA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_REJANG" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SUNDANESE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SAURASHTRA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CHAM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OL_CHIKI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_VAI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CARIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LYCIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LYDIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BATAK" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BRAHMI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MANDAIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CHAKMA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MEROITIC_CURSIVE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MEROITIC_HIEROGLYPHS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MIAO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SHARADA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SORA_SOMPENG" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TAKRI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_BASSA_VAH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_CAUCASIAN_ALBANIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_DUPLOYAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ELBASAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_GRANTHA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KHOJKI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_KHUDAWADI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_LINEAR_A" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MAHAJANI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MANICHAEAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MENDE_KIKAKUI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MODI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MRO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_NABATAEAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OLD_NORTH_ARABIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OLD_PERMIC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PAHAWH_HMONG" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PALMYRENE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PAU_CIN_HAU" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_PSALTER_PAHLAVI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SIDDHAM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_TIRHUTA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_WARANG_CITI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_AHOM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_ANATOLIAN_HIEROGLYPHS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_HATRAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_MULTANI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_OLD_HUNGARIAN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_SCRIPT_SIGNWRITING" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoScript" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoDirection" 'enumname)
	#.(swig-lispify "PANGO_DIRECTION_LTR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_RTL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_TTB_LTR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_TTB_RTL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_WEAK_LTR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_WEAK_RTL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_DIRECTION_NEUTRAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoDirection" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoBidiType" 'enumname)
	#.(swig-lispify "PANGO_BIDI_TYPE_L" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_LRE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_LRO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_R" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_AL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_RLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_RLO" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_PDF" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_EN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_ES" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_ET" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_AN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_CS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_NSM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_BN" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_B" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_S" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_WS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_ON" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_LRI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_RLI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_FSI" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BIDI_TYPE_PDI" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoBidiType" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoStyle" 'enumname)
	#.(swig-lispify "PANGO_STYLE_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STYLE_OBLIQUE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STYLE_ITALIC" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoStyle" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoVariant" 'enumname)
	#.(swig-lispify "PANGO_VARIANT_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_SMALL_CAPS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_ALL_SMALL_CAPS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_PETITE_CAPS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_ALL_PETITE_CAPS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_UNICASE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_VARIANT_TITLE_CAPS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoVariant" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoWeight" 'enumname)
	(#.(swig-lispify "PANGO_WEIGHT_THIN" 'enumvalue :keyword) #.100)
	(#.(swig-lispify "PANGO_WEIGHT_ULTRALIGHT" 'enumvalue :keyword) #.200)
	(#.(swig-lispify "PANGO_WEIGHT_LIGHT" 'enumvalue :keyword) #.300)
	(#.(swig-lispify "PANGO_WEIGHT_SEMILIGHT" 'enumvalue :keyword) #.350)
	(#.(swig-lispify "PANGO_WEIGHT_BOOK" 'enumvalue :keyword) #.380)
	(#.(swig-lispify "PANGO_WEIGHT_NORMAL" 'enumvalue :keyword) #.400)
	(#.(swig-lispify "PANGO_WEIGHT_MEDIUM" 'enumvalue :keyword) #.500)
	(#.(swig-lispify "PANGO_WEIGHT_SEMIBOLD" 'enumvalue :keyword) #.600)
	(#.(swig-lispify "PANGO_WEIGHT_BOLD" 'enumvalue :keyword) #.700)
	(#.(swig-lispify "PANGO_WEIGHT_ULTRABOLD" 'enumvalue :keyword) #.800)
	(#.(swig-lispify "PANGO_WEIGHT_HEAVY" 'enumvalue :keyword) #.900)
	(#.(swig-lispify "PANGO_WEIGHT_ULTRAHEAVY" 'enumvalue :keyword) #.1000))

(cl:export '#.(swig-lispify "PangoWeight" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoStretch" 'enumname)
	#.(swig-lispify "PANGO_STRETCH_ULTRA_CONDENSED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_EXTRA_CONDENSED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_CONDENSED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_SEMI_CONDENSED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_SEMI_EXPANDED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_EXPANDED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_EXTRA_EXPANDED" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_STRETCH_ULTRA_EXPANDED" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoStretch" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoFontMask" 'enumname)
	(#.(swig-lispify "PANGO_FONT_MASK_FAMILY" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "PANGO_FONT_MASK_STYLE" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "PANGO_FONT_MASK_VARIANT" 'enumvalue :keyword) #.(cl:ash 1 2))
	(#.(swig-lispify "PANGO_FONT_MASK_WEIGHT" 'enumvalue :keyword) #.(cl:ash 1 3))
	(#.(swig-lispify "PANGO_FONT_MASK_STRETCH" 'enumvalue :keyword) #.(cl:ash 1 4))
	(#.(swig-lispify "PANGO_FONT_MASK_SIZE" 'enumvalue :keyword) #.(cl:ash 1 5))
	(#.(swig-lispify "PANGO_FONT_MASK_GRAVITY" 'enumvalue :keyword) #.(cl:ash 1 6))
	(#.(swig-lispify "PANGO_FONT_MASK_VARIATIONS" 'enumvalue :keyword) #.(cl:ash 1 7)))

(cl:export '#.(swig-lispify "PangoFontMask" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoAttrType" 'enumname)
	#.(swig-lispify "PANGO_ATTR_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_LANGUAGE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FAMILY" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_STYLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_WEIGHT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_VARIANT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_STRETCH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_SIZE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FONT_DESC" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FOREGROUND" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_BACKGROUND" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_UNDERLINE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_STRIKETHROUGH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_RISE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_SHAPE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_SCALE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FALLBACK" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_LETTER_SPACING" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_UNDERLINE_COLOR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_STRIKETHROUGH_COLOR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_ABSOLUTE_SIZE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_GRAVITY" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_GRAVITY_HINT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FONT_FEATURES" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FOREGROUND_ALPHA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_BACKGROUND_ALPHA" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_ALLOW_BREAKS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_SHOW" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_INSERT_HYPHENS" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_OVERLINE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_OVERLINE_COLOR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_LINE_HEIGHT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_ABSOLUTE_LINE_HEIGHT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_TEXT_TRANSFORM" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_WORD" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_SENTENCE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_BASELINE_SHIFT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ATTR_FONT_SCALE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoAttrType" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoUnderline" 'enumname)
	#.(swig-lispify "PANGO_UNDERLINE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_SINGLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_DOUBLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_LOW" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_SINGLE_LINE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_DOUBLE_LINE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_UNDERLINE_ERROR_LINE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoUnderline" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoOverline" 'enumname)
	#.(swig-lispify "PANGO_OVERLINE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_OVERLINE_SINGLE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoOverline" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoShowFlags" 'enumname)
	(#.(swig-lispify "PANGO_SHOW_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "PANGO_SHOW_SPACES" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "PANGO_SHOW_LINE_BREAKS" 'enumvalue :keyword) #.(cl:ash 1 1))
	(#.(swig-lispify "PANGO_SHOW_IGNORABLES" 'enumvalue :keyword) #.(cl:ash 1 2)))

(cl:export '#.(swig-lispify "PangoShowFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoTextTransform" 'enumname)
	#.(swig-lispify "PANGO_TEXT_TRANSFORM_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TEXT_TRANSFORM_LOWERCASE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TEXT_TRANSFORM_UPPERCASE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TEXT_TRANSFORM_CAPITALIZE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoTextTransform" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoBaselineShift" 'enumname)
	#.(swig-lispify "PANGO_BASELINE_SHIFT_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BASELINE_SHIFT_SUPERSCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_BASELINE_SHIFT_SUBSCRIPT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoBaselineShift" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoFontScale" 'enumname)
	#.(swig-lispify "PANGO_FONT_SCALE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_FONT_SCALE_SUPERSCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_FONT_SCALE_SUBSCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_FONT_SCALE_SMALL_CAPS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoFontScale" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoShapeFlags" 'enumname)
	(#.(swig-lispify "PANGO_SHAPE_NONE" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "PANGO_SHAPE_ROUND_POSITIONS" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "PangoShapeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoTabAlign" 'enumname)
	#.(swig-lispify "PANGO_TAB_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TAB_RIGHT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TAB_CENTER" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_TAB_DECIMAL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoTabAlign" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoAlignment" 'enumname)
	#.(swig-lispify "PANGO_ALIGN_LEFT" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ALIGN_CENTER" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ALIGN_RIGHT" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoAlignment" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoWrapMode" 'enumname)
	#.(swig-lispify "PANGO_WRAP_WORD" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_WRAP_CHAR" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_WRAP_WORD_CHAR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoWrapMode" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoEllipsizeMode" 'enumname)
	#.(swig-lispify "PANGO_ELLIPSIZE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ELLIPSIZE_START" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ELLIPSIZE_MIDDLE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_ELLIPSIZE_END" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoEllipsizeMode" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoLayoutSerializeFlags" 'enumname)
	(#.(swig-lispify "PANGO_LAYOUT_SERIALIZE_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "PANGO_LAYOUT_SERIALIZE_CONTEXT" 'enumvalue :keyword) #.(cl:ash 1 0))
	(#.(swig-lispify "PANGO_LAYOUT_SERIALIZE_OUTPUT" 'enumvalue :keyword) #.(cl:ash 1 1)))

(cl:export '#.(swig-lispify "PangoLayoutSerializeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoLayoutDeserializeError" 'enumname)
	#.(swig-lispify "PANGO_LAYOUT_DESERIALIZE_INVALID" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_LAYOUT_DESERIALIZE_INVALID_VALUE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_LAYOUT_DESERIALIZE_MISSING_VALUE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoLayoutDeserializeError" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoLayoutDeserializeFlags" 'enumname)
	(#.(swig-lispify "PANGO_LAYOUT_DESERIALIZE_DEFAULT" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "PANGO_LAYOUT_DESERIALIZE_CONTEXT" 'enumvalue :keyword) #.(cl:ash 1 0)))

(cl:export '#.(swig-lispify "PangoLayoutDeserializeFlags" 'enumname))

(cffi:defcenum #.(swig-lispify "PangoRenderPart" 'enumname)
	#.(swig-lispify "PANGO_RENDER_PART_FOREGROUND" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_RENDER_PART_BACKGROUND" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_RENDER_PART_UNDERLINE" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_RENDER_PART_STRIKETHROUGH" 'enumvalue :keyword)
	#.(swig-lispify "PANGO_RENDER_PART_OVERLINE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "PangoRenderPart" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_status_t" 'enumname)
	(#.(swig-lispify "CAIRO_STATUS_SUCCESS" 'enumvalue :keyword) #.0)
	#.(swig-lispify "CAIRO_STATUS_NO_MEMORY" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_RESTORE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_POP_GROUP" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_NO_CURRENT_POINT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_MATRIX" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_STATUS" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_NULL_POINTER" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_STRING" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_PATH_DATA" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_READ_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_WRITE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_SURFACE_FINISHED" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_SURFACE_TYPE_MISMATCH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_PATTERN_TYPE_MISMATCH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_CONTENT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_FORMAT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_VISUAL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_FILE_NOT_FOUND" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_DASH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_DSC_COMMENT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_INDEX" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_CLIP_NOT_REPRESENTABLE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_TEMP_FILE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_STRIDE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_FONT_TYPE_MISMATCH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_USER_FONT_IMMUTABLE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_USER_FONT_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_NEGATIVE_COUNT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_CLUSTERS" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_SLANT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_WEIGHT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_SIZE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_DEVICE_TYPE_MISMATCH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_DEVICE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_INVALID_MESH_CONSTRUCTION" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_DEVICE_FINISHED" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_JBIG2_GLOBAL_MISSING" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_PNG_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_FREETYPE_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_WIN32_GDI_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_TAG_ERROR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_STATUS_LAST_STATUS" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_status_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_content_t" 'enumname)
	(#.(swig-lispify "CAIRO_CONTENT_COLOR" 'enumvalue :keyword) #.#x1000)
	(#.(swig-lispify "CAIRO_CONTENT_ALPHA" 'enumvalue :keyword) #.#x2000)
	(#.(swig-lispify "CAIRO_CONTENT_COLOR_ALPHA" 'enumvalue :keyword) #.#x3000))

(cl:export '#.(swig-lispify "cairo_content_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_format_t" 'enumname)
	(#.(swig-lispify "CAIRO_FORMAT_INVALID" 'enumvalue :keyword) #.-1)
	(#.(swig-lispify "CAIRO_FORMAT_ARGB32" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "CAIRO_FORMAT_RGB24" 'enumvalue :keyword) #.1)
	(#.(swig-lispify "CAIRO_FORMAT_A8" 'enumvalue :keyword) #.2)
	(#.(swig-lispify "CAIRO_FORMAT_A1" 'enumvalue :keyword) #.3)
	(#.(swig-lispify "CAIRO_FORMAT_RGB16_565" 'enumvalue :keyword) #.4)
	(#.(swig-lispify "CAIRO_FORMAT_RGB30" 'enumvalue :keyword) #.5))

(cl:export '#.(swig-lispify "cairo_format_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_operator_t" 'enumname)
	#.(swig-lispify "CAIRO_OPERATOR_CLEAR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_SOURCE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_OVER" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_IN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_OUT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_ATOP" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DEST" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DEST_OVER" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DEST_IN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DEST_OUT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DEST_ATOP" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_XOR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_ADD" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_SATURATE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_MULTIPLY" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_SCREEN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_OVERLAY" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DARKEN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_LIGHTEN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_COLOR_DODGE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_COLOR_BURN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_HARD_LIGHT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_SOFT_LIGHT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_DIFFERENCE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_EXCLUSION" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_HSL_HUE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_HSL_SATURATION" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_HSL_COLOR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_OPERATOR_HSL_LUMINOSITY" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_operator_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_antialias_t" 'enumname)
	#.(swig-lispify "CAIRO_ANTIALIAS_DEFAULT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_NONE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_GRAY" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_SUBPIXEL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_FAST" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_GOOD" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_ANTIALIAS_BEST" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_antialias_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_fill_rule_t" 'enumname)
	#.(swig-lispify "CAIRO_FILL_RULE_WINDING" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILL_RULE_EVEN_ODD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_fill_rule_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_line_cap_t" 'enumname)
	#.(swig-lispify "CAIRO_LINE_CAP_BUTT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_LINE_CAP_ROUND" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_LINE_CAP_SQUARE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_line_cap_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_line_join_t" 'enumname)
	#.(swig-lispify "CAIRO_LINE_JOIN_MITER" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_LINE_JOIN_ROUND" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_LINE_JOIN_BEVEL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_line_join_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_text_cluster_flags_t" 'enumname)
	(#.(swig-lispify "CAIRO_TEXT_CLUSTER_FLAG_BACKWARD" 'enumvalue :keyword) #.#x00000001))

(cl:export '#.(swig-lispify "cairo_text_cluster_flags_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_font_slant_t" 'enumname)
	#.(swig-lispify "CAIRO_FONT_SLANT_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_SLANT_ITALIC" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_SLANT_OBLIQUE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_font_slant_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_font_weight_t" 'enumname)
	#.(swig-lispify "CAIRO_FONT_WEIGHT_NORMAL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_WEIGHT_BOLD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_font_weight_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_subpixel_order_t" 'enumname)
	#.(swig-lispify "CAIRO_SUBPIXEL_ORDER_DEFAULT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SUBPIXEL_ORDER_RGB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SUBPIXEL_ORDER_BGR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SUBPIXEL_ORDER_VRGB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SUBPIXEL_ORDER_VBGR" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_subpixel_order_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_hint_style_t" 'enumname)
	#.(swig-lispify "CAIRO_HINT_STYLE_DEFAULT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_STYLE_NONE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_STYLE_SLIGHT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_STYLE_MEDIUM" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_STYLE_FULL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_hint_style_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_hint_metrics_t" 'enumname)
	#.(swig-lispify "CAIRO_HINT_METRICS_DEFAULT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_METRICS_OFF" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_HINT_METRICS_ON" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_hint_metrics_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_font_type_t" 'enumname)
	#.(swig-lispify "CAIRO_FONT_TYPE_TOY" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_TYPE_FT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_TYPE_WIN32" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_TYPE_QUARTZ" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FONT_TYPE_USER" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_font_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_path_data_type_t" 'enumname)
	#.(swig-lispify "CAIRO_PATH_MOVE_TO" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATH_LINE_TO" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATH_CURVE_TO" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATH_CLOSE_PATH" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_path_data_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_device_type_t" 'enumname)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_DRM" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_GL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_SCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_XCB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_XLIB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_XML" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_COGL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_DEVICE_TYPE_WIN32" 'enumvalue :keyword)
	(#.(swig-lispify "CAIRO_DEVICE_TYPE_INVALID" 'enumvalue :keyword) #.-1))

(cl:export '#.(swig-lispify "cairo_device_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_surface_observer_mode_t" 'enumname)
	(#.(swig-lispify "CAIRO_SURFACE_OBSERVER_NORMAL" 'enumvalue :keyword) #.0)
	(#.(swig-lispify "CAIRO_SURFACE_OBSERVER_RECORD_OPERATIONS" 'enumvalue :keyword) #.#x1))

(cl:export '#.(swig-lispify "cairo_surface_observer_mode_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_surface_type_t" 'enumname)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_IMAGE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_PDF" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_PS" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_XLIB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_XCB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_GLITZ" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_QUARTZ" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_WIN32" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_BEOS" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_DIRECTFB" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_SVG" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_OS2" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_WIN32_PRINTING" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_QUARTZ_IMAGE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_SCRIPT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_QT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_RECORDING" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_VG" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_GL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_DRM" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_TEE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_XML" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_SKIA" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_SUBSURFACE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_SURFACE_TYPE_COGL" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_surface_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_pattern_type_t" 'enumname)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_SOLID" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_SURFACE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_LINEAR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_RADIAL" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_MESH" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_PATTERN_TYPE_RASTER_SOURCE" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_pattern_type_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_extend_t" 'enumname)
	#.(swig-lispify "CAIRO_EXTEND_NONE" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_EXTEND_REPEAT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_EXTEND_REFLECT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_EXTEND_PAD" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_extend_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_filter_t" 'enumname)
	#.(swig-lispify "CAIRO_FILTER_FAST" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILTER_GOOD" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILTER_BEST" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILTER_NEAREST" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILTER_BILINEAR" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_FILTER_GAUSSIAN" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_filter_t" 'enumname))

(cffi:defcenum #.(swig-lispify "cairo_region_overlap_t" 'enumname)
	#.(swig-lispify "CAIRO_REGION_OVERLAP_IN" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_REGION_OVERLAP_OUT" 'enumvalue :keyword)
	#.(swig-lispify "CAIRO_REGION_OVERLAP_PART" 'enumvalue :keyword))

(cl:export '#.(swig-lispify "cairo_region_overlap_t" 'enumname))

(cffi:defcfun ("pango_cairo_font_map_get_type" #.(swig-lispify "pango_cairo_font_map_get_type" 'function)) :unsigned-long)

(cl:export '#.(swig-lispify "pango_cairo_font_map_get_type" 'function))

(cffi:defcfun ("pango_cairo_font_map_new" #.(swig-lispify "pango_cairo_font_map_new" 'function)) :pointer)

(cl:export '#.(swig-lispify "pango_cairo_font_map_new" 'function))

(cffi:defcfun ("pango_cairo_font_map_new_for_font_type" #.(swig-lispify "pango_cairo_font_map_new_for_font_type" 'function)) :pointer
  (fonttype #.(swig-lispify "cairo_font_type_t" 'enumname)))

(cl:export '#.(swig-lispify "pango_cairo_font_map_new_for_font_type" 'function))

(cffi:defcfun ("pango_cairo_font_map_get_default" #.(swig-lispify "pango_cairo_font_map_get_default" 'function)) :pointer)

(cl:export '#.(swig-lispify "pango_cairo_font_map_get_default" 'function))

(cffi:defcfun ("pango_cairo_font_map_set_default" #.(swig-lispify "pango_cairo_font_map_set_default" 'function)) :void
  (fontmap :pointer))

(cl:export '#.(swig-lispify "pango_cairo_font_map_set_default" 'function))

(cffi:defcfun ("pango_cairo_font_map_get_font_type" #.(swig-lispify "pango_cairo_font_map_get_font_type" 'function)) #.(swig-lispify "cairo_font_type_t" 'enumname)
  (fontmap :pointer))

(cl:export '#.(swig-lispify "pango_cairo_font_map_get_font_type" 'function))

(cffi:defcfun ("pango_cairo_font_map_set_resolution" #.(swig-lispify "pango_cairo_font_map_set_resolution" 'function)) :void
  (fontmap :pointer)
  (dpi :double))

(cl:export '#.(swig-lispify "pango_cairo_font_map_set_resolution" 'function))

(cffi:defcfun ("pango_cairo_font_map_get_resolution" #.(swig-lispify "pango_cairo_font_map_get_resolution" 'function)) :double
  (fontmap :pointer))

(cl:export '#.(swig-lispify "pango_cairo_font_map_get_resolution" 'function))

(cffi:defcfun ("pango_cairo_font_map_create_context" #.(swig-lispify "pango_cairo_font_map_create_context" 'function)) :pointer
  (fontmap :pointer))

(cl:export '#.(swig-lispify "pango_cairo_font_map_create_context" 'function))

(cffi:defcfun ("pango_cairo_font_get_type" #.(swig-lispify "pango_cairo_font_get_type" 'function)) :unsigned-long)

(cl:export '#.(swig-lispify "pango_cairo_font_get_type" 'function))

(cffi:defcfun ("pango_cairo_font_get_scaled_font" #.(swig-lispify "pango_cairo_font_get_scaled_font" 'function)) :pointer
  (font :pointer))

(cl:export '#.(swig-lispify "pango_cairo_font_get_scaled_font" 'function))

(cffi:defcfun ("pango_cairo_update_context" #.(swig-lispify "pango_cairo_update_context" 'function)) :void
  (cr :pointer)
  (context :pointer))

(cl:export '#.(swig-lispify "pango_cairo_update_context" 'function))

(cffi:defcfun ("pango_cairo_context_set_font_options" #.(swig-lispify "pango_cairo_context_set_font_options" 'function)) :void
  (context :pointer)
  (options :pointer))

(cl:export '#.(swig-lispify "pango_cairo_context_set_font_options" 'function))

(cffi:defcfun ("pango_cairo_context_get_font_options" #.(swig-lispify "pango_cairo_context_get_font_options" 'function)) :pointer
  (context :pointer))

(cl:export '#.(swig-lispify "pango_cairo_context_get_font_options" 'function))

(cffi:defcfun ("pango_cairo_context_set_resolution" #.(swig-lispify "pango_cairo_context_set_resolution" 'function)) :void
  (context :pointer)
  (dpi :double))

(cl:export '#.(swig-lispify "pango_cairo_context_set_resolution" 'function))

(cffi:defcfun ("pango_cairo_context_get_resolution" #.(swig-lispify "pango_cairo_context_get_resolution" 'function)) :double
  (context :pointer))

(cl:export '#.(swig-lispify "pango_cairo_context_get_resolution" 'function))

(cffi:defcfun ("pango_cairo_context_set_shape_renderer" #.(swig-lispify "pango_cairo_context_set_shape_renderer" 'function)) :void
  (context :pointer)
  (func :pointer)
  (data :pointer)
  (dnotify :pointer))

(cl:export '#.(swig-lispify "pango_cairo_context_set_shape_renderer" 'function))

(cffi:defcfun ("pango_cairo_context_get_shape_renderer" #.(swig-lispify "pango_cairo_context_get_shape_renderer" 'function)) :pointer
  (context :pointer)
  (data :pointer))

(cl:export '#.(swig-lispify "pango_cairo_context_get_shape_renderer" 'function))

(cffi:defcfun ("pango_cairo_create_context" #.(swig-lispify "pango_cairo_create_context" 'function)) :pointer
  (cr :pointer))

(cl:export '#.(swig-lispify "pango_cairo_create_context" 'function))

(cffi:defcfun ("pango_cairo_create_layout" #.(swig-lispify "pango_cairo_create_layout" 'function)) :pointer
  (cr :pointer))

(cl:export '#.(swig-lispify "pango_cairo_create_layout" 'function))

(cffi:defcfun ("pango_cairo_update_layout" #.(swig-lispify "pango_cairo_update_layout" 'function)) :void
  (cr :pointer)
  (layout :pointer))

(cl:export '#.(swig-lispify "pango_cairo_update_layout" 'function))

(cffi:defcfun ("pango_cairo_show_glyph_string" #.(swig-lispify "pango_cairo_show_glyph_string" 'function)) :void
  (cr :pointer)
  (font :pointer)
  (glyphs :pointer))

(cl:export '#.(swig-lispify "pango_cairo_show_glyph_string" 'function))

(cffi:defcfun ("pango_cairo_show_glyph_item" #.(swig-lispify "pango_cairo_show_glyph_item" 'function)) :void
  (cr :pointer)
  (text :string)
  (glyph_item :pointer))

(cl:export '#.(swig-lispify "pango_cairo_show_glyph_item" 'function))

(cffi:defcfun ("pango_cairo_show_layout_line" #.(swig-lispify "pango_cairo_show_layout_line" 'function)) :void
  (cr :pointer)
  (line :pointer))

(cl:export '#.(swig-lispify "pango_cairo_show_layout_line" 'function))

(cffi:defcfun ("pango_cairo_show_layout" #.(swig-lispify "pango_cairo_show_layout" 'function)) :void
  (cr :pointer)
  (layout :pointer))

(cl:export '#.(swig-lispify "pango_cairo_show_layout" 'function))

(cffi:defcfun ("pango_cairo_show_error_underline" #.(swig-lispify "pango_cairo_show_error_underline" 'function)) :void
  (cr :pointer)
  (x :double)
  (y :double)
  (width :double)
  (height :double))

(cl:export '#.(swig-lispify "pango_cairo_show_error_underline" 'function))

(cffi:defcfun ("pango_cairo_glyph_string_path" #.(swig-lispify "pango_cairo_glyph_string_path" 'function)) :void
  (cr :pointer)
  (font :pointer)
  (glyphs :pointer))

(cl:export '#.(swig-lispify "pango_cairo_glyph_string_path" 'function))

(cffi:defcfun ("pango_cairo_layout_line_path" #.(swig-lispify "pango_cairo_layout_line_path" 'function)) :void
  (cr :pointer)
  (line :pointer))

(cl:export '#.(swig-lispify "pango_cairo_layout_line_path" 'function))

(cffi:defcfun ("pango_cairo_layout_path" #.(swig-lispify "pango_cairo_layout_path" 'function)) :void
  (cr :pointer)
  (layout :pointer))

(cl:export '#.(swig-lispify "pango_cairo_layout_path" 'function))

(cffi:defcfun ("pango_cairo_error_underline_path" #.(swig-lispify "pango_cairo_error_underline_path" 'function)) :void
  (cr :pointer)
  (x :double)
  (y :double)
  (width :double)
  (height :double))

(cl:export '#.(swig-lispify "pango_cairo_error_underline_path" 'function))


